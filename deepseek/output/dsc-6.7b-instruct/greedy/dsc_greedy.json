[
    {
        "task_id": 0,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: There is a chessboard of size $n$ by $n$. The square in the $i$-th row from top and $j$-th column from the left is labelled $(i,j)$.\n\nCurrently, Gregor has some pawns in the $n$-th row. There are also enemy pawns in the $1$-st row. On one turn, Gregor moves one of his pawns. A pawn can move one square up (from $(i,j)$ to $(i-1,j)$) if there is no pawn in the destination square. Additionally, a pawn can move one square diagonally up (from $(i,j)$ to either $(i-1,j-1)$ or $(i-1,j+1)$) if and only if there is an enemy pawn in that square. The enemy pawn is also removed.\n\nGregor wants to know what is the maximum number of his pawns that can reach row $1$?\n\nNote that only Gregor takes turns in this game, and the enemy pawns never move. Also, when Gregor's pawn reaches row $1$, it is stuck and cannot make any further moves.\n\n\n-----Input-----\n\nThe first line of the input contains one integer $t$ ($1\\le t\\le 2\\cdot 10^4$) \u2014 the number of test cases. Then $t$ test cases follow.\n\nEach test case consists of three lines. The first line contains a single integer $n$ ($2\\le n\\le 2\\cdot{10}^{5}$) \u2014 the size of the chessboard.\n\nThe second line consists of a string of binary digits of length $n$, where a $1$ in the $i$-th position corresponds to an enemy pawn in the $i$-th cell from the left, and $0$ corresponds to an empty cell.\n\nThe third line consists of a string of binary digits of length $n$, where a $1$ in the $i$-th position corresponds to a Gregor's pawn in the $i$-th cell from the left, and $0$ corresponds to an empty cell.\n\nIt is guaranteed that the sum of $n$ across all test cases is less than $2\\cdot{10}^{5}$.\n\n\n-----Output-----\n\nFor each test case, print one integer: the maximum number of Gregor's pawns which can reach the $1$-st row.\n\n\n-----Examples-----\n\nInput\n4\n3\n000\n111\n4\n1111\n1111\n3\n010\n010\n5\n11001\n00000\nOutput\n3\n4\n0\n0\n\n\n-----Note-----\n\nIn the first example, Gregor can simply advance all $3$ of his pawns forward. Thus, the answer is $3$.\n\nIn the second example, Gregor can guarantee that all $4$ of his pawns reach the enemy row, by following the colored paths as demonstrated in the diagram below. Remember, only Gregor takes turns in this \"game\"!\n\nIn the third example, Gregor's only pawn is stuck behind the enemy pawn, and cannot reach the end.\n\nIn the fourth example, Gregor has no pawns, so the answer is clearly $0$. \n\n### Response:\n",
        "output": [
            "for s in [*open(0)][2::3]:\n\tprint(s.count('1'))\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n ",
            "for s in [*open(0)][2::3]:\n\tprint(s.count('1'))\n \n\n \n\n \n\n \n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n",
            "for s in [*open(0)][2::3]:\n\ta = 0\n\tfor i in range(len(s) - 1):\n\t\ta += s[i] != s[i + 1]\n\tprint(a)\n \n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n",
            "for s in [*open(0)][2::3]:\n\tprint(s.count('1'))\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n ",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = input()\n\tb = input()\n\tc = [0] * n\n\tfor i in range(n):\n\t\tif a[i] == '1':\n\t\t\tc[i] = 1\n\tprint(c.count(1))\n \n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = input()\n\tb = input()\n\tans = 0\n\tfor i in range(n):\n\t\tif a[i] == '1' and b[i] == '1':\n\t\t\tans += 1\n\tprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\tn = int(input())\n\te = input()\n\tg = input()\n\tans = 0\n\tfor i in range(n):\n\t\tif g[i] == '1':\n\t\t\tif i > 0 and e[i - 1] == '1':\n\t\t\t\tans += 1\n\t\t\telif i < n - 1 and e[i + 1] == '1':\n\t\t\t\tans += 1\n\tprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = [int(i) for i in input()]\n\tb = [int(i) for i in input()]\n\tl = []\n\tfor i in range(n):\n\t\tif b[i]:\n\t\t\tl.append(i)\n\tans = 0\n\tfor i in l:\n\t\tif i > 0:\n\t\t\tif a[i - 1]:\n\t\t\t\tans += 1\n\t\t\t\ta[i - 1] = 0\n\t\tif i < n - 1:\n\t\t\tif a[i + 1]:\n\t\t\t\tans += 1\n\t\t\t\ta[i + 1] = 0\n\tprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::3]:\n\tprint(s.count('0'))\n \n\n \n\n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::3]:\n\tr = [0] * len(s)\n\tfor (i, c) in enumerate(s):\n\t\tif c == '1':\n\t\t\tr[i] = r[i - 1] + 1\n\tprint(max(r))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = input()\n\tb = input()\n\tc = '0' * n\n\td = '0' * n\n\tfor i in range(n):\n\t\tif b[i] == '1':\n\t\t\td = d[:i] + '1' + d[i + 1:]\n\t\t\tif a[i] == '1':\n\t\t\t\tc = c[:i] + '1' + c[i + 1:]\n\tprint(c.count('1'))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::3]:\n\ta = s.count('1')\n\tb = s.count('0')\n\tprint(min(a, b))\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n",
            "for _ in range(int(input())):\n\tn = int(input())\n\tb = list(map(int, input()))\n\tg = list(map(int, input()))\n\tdp = [0] * (n + 1)\n\tfor i in range(n - 1, -1, -1):\n\t\tif b[i] == 1:\n\t\t\tdp[i] = max(dp[i + 1], dp[i + 2] + 1)\n\t\telse:\n\t\t\tdp[i] = dp[i + 1]\n\tprint(sum(g) - sum(dp[:n]) + dp[0])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::3]:\n\tprint(s.count('1'))\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n ",
            "for s in [*open(0)][2::3]:\n\tprint(sum((c == '1' for c in zip(s, s[1:]))))\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n",
            "for s in [*open(0)][2::3]:\n\ta = s.count('1')\n\tprint(a + s[:a].count('1'))\n \n \nfor s in [*open(0)][2::3]:\n\ta = s.count('1')\n\tprint(a + s[:a].count('1'))\n \n \nfor s in [*open(0)][2::3]:\n\ta = s.count('1')\n\tprint(a + s[:a].count('1'))\n \n \nfor s in [*open(0)][2::3]:\n\ta = s.count('1')\n\tprint(a + s[:a].count('1'))\n \n \nfor s in [*open(0)][2::3]:\n\ta = s.count('1')\n\tprint(a + s[:a].count('1'))\n \n \nfor s in [*open(0)][2::3]:\n\ta = s.count('1')\n\tprint(a + s[:a].count('1'))\n \n \nfor s in [*open(0)][2::3]:\n\ta = s.count('1')\n\tprint(a + s[:a].count('1'))\n \n \nfor s in [*open(0)][2::3]:\n\ta = s.count('1')\n\tprint(a + s[:a].count('1'))\n \n \nfor s in [*open(0)][2::3]:\n\ta = s.count('1')\n\tprint(a + s[:a].count('1'))\n \n \nfor s in [*open(0)][2::3]:\n\ta = s.count('1')\n\tprint(a + s[:a].count('1'))\n \n \nfor s in [*open(0)][2::3]:\n\ta = s.count('1')\n\tprint(a + s[:a].count('1'))\n \n \nfor s in [*open(0)][2::3]:\n\ta = s.count('1')\n\tprint(a + s[:a].count('1'))\n \n \nfor s in [*open(0)][2::3]:\n\ta = s.count('1')\n\tprint(a + s[:a].count('1'))\n \n \nfor s in [*open(0)][2::3]:\n\ta = s.count('1')\n\tprint(a + s[:a].count('1'))\n \n \nfor s in [*open(0)][2::3]:\n\ta = s.count('1')\n\tprint(a + s[:a].count('1'))\n \n \nfor s in [*open(0)][2::3]:\n\ta = s.count('1')\n\tprint(a + s[:a].count('1'))\n \n \nfor s in [*open(0)][2::3]:\n\ta = s.count('1')\n\tprint(a + s[:a].count('1'))\n \n \nfor s in [*open(0)][2::3]:\n\ta = s.count('1')\n\tprint(a + s[:a].count('1'))\n \n \nfor s in [*open(0)][2::3]:\n\ta = s.count('1')\n\t",
            "for s in [*open(0)][2::3]:\n\tprint(max((s.count('10') - s.count('01')) * 2 + s.count('1')))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::3]:\n\tprint(s.count('1'))\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n ",
            "for s in [*open(0)][2::3]:\n\tprint(s.count('1'))\n \n\n \n\n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = input()\n\tb = input()\n\tres = 0\n\tfor i in range(n):\n\t\tif b[i] == '1':\n\t\t\tif i > 0 and b[i - 1] == '0' and (a[i - 1] == '1'):\n\t\t\t\tres += 1\n\t\t\t\tb = b[:i - 1] + '1' + b[i:]\n\t\t\telif i < n - 1 and b[i + 1] == '0' and (a[i + 1] == '1'):\n\t\t\t\tres += 1\n\t\t\t\tb = b[:i] + '1' + b[i + 1:]\n\tprint(res)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n "
        ]
    },
    {
        "task_id": 1,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: CQXYM wants to create a connected undirected graph with $n$ nodes and $m$ edges, and the diameter of the graph must be strictly less than $k-1$. Also, CQXYM doesn't want a graph that contains self-loops or multiple edges (i.e. each edge connects two different vertices and between each pair of vertices there is at most one edge).\n\nThe diameter of a graph is the maximum distance between any two nodes.\n\nThe distance between two nodes is the minimum number of the edges on the path which endpoints are the two nodes.\n\nCQXYM wonders whether it is possible to create such a graph.\n\n\n-----Input-----\n\nThe input consists of multiple test cases.\n\nThe first line contains an integer $t (1 \\leq t \\leq 10^5)$ \u2014 the number of test cases. The description of the test cases follows.\n\nOnly one line of each test case contains three integers $n(1 \\leq n \\leq 10^9)$, $m$, $k$ $(0 \\leq m,k \\leq 10^9)$.\n\n\n-----Output-----\n\nFor each test case, print YES if it is possible to create the graph, or print NO if it is impossible. You can print each letter in any case (upper or lower).\n\n\n-----Examples-----\n\nInput\n5\n1 0 3\n4 5 3\n4 6 3\n5 4 1\n2 1 1\nOutput\nYES\nNO\nYES\nNO\nNO\n\n\n-----Note-----\n\nIn the first test case, the graph's diameter equal to 0.\n\nIn the second test case, the graph's diameter can only be 2.\n\nIn the third test case, the graph's diameter can only be 1. \n\n### Response:\n",
        "output": [
            "for s in [*open(0)][1:]:\n\t(n, m, k) = map(int, s.split())\n\tprint('YNEOS'[m < n * (n - 1) // 2 or m - n + 1 > k - 2::2])\n \n",
            "for s in [*open(0)][1:]:\n\t(n, m, k) = map(int, s.split())\n\tprint('YNEOS'[n <= m or k == 1::2])\n \n\ndef f(x):\n\ty = x % 3\n\tif y == 0:\n\t\treturn 'YES'\n\tif y == 1:\n\t\treturn 'NO'\n\treturn 'YNEOS'[x % 2 == 0::2]\nfor s in [*open(0)][1:]:\n\t(n, m, k) = map(int, s.split())\n\tprint(f(n + m - k + 1))\n \n\ndef f(x):\n\ty = x % 3\n\tif y == 0:\n\t\treturn 'YES'\n\tif y == 1:\n\t\treturn 'NO'\n\treturn 'YNEOS'[x % 2 == 0::2]\nfor s in [*open(0)][1:]:\n\t(n, m, k) = map(int, s.split())\n\tprint(f(n + m - k + 1))\n \n\ndef f(x):\n\ty = x % 3\n\tif y == 0:\n\t\treturn 'YES'\n\tif y == 1:\n\t\treturn 'NO'\n\treturn 'YNEOS'[x % 2 == 0::2]\nfor s in [*open(0)][1:]:\n\t(n, m, k) = map(int, s.split())\n\tprint(f(n + m - k + 1))\n \n\ndef f(x):\n\ty = x % 3\n\tif y == 0:\n\t\treturn 'YES'\n\tif y == 1:\n\t\treturn 'NO'\n\treturn 'YNEOS'[x % 2 == 0::2]\nfor s in [*open(0)][1:]:\n\t(n, m, k) = map(int, s.split())\n\tprint(f(n + m - k + 1))\n \n\ndef f(x):\n\ty = x % 3\n\tif y == 0:\n\t\treturn 'YES'\n\tif y == 1:\n\t\treturn 'NO'\n\treturn 'YNEOS'[x % 2 == 0::2]\nfor s in [*open(0)][1:]:\n\t(n, m, k) = map(int, s.split())\n\tprint(f(n + m - k + 1))\n \n\ndef f(x):\n\ty = x % 3\n\tif y == 0:\n\t\treturn 'YES'\n\tif y == 1:\n\t\treturn 'NO'\n\treturn 'YNEOS'[x % 2 == 0::2]\nfor s in [*open(0)][1:]:\n\t(n, m, k) = map(int, s.split())\n\tprint(f(n + m - k + 1))\n \n\ndef f(x):\n\ty = x % 3\n\tif y == 0:\n\t\treturn 'YES'\n\tif y == 1:\n\t\treturn 'NO'\n\treturn 'YNEOS'[x % 2 == 0::2]\nfor s in [*open(0)][1:]:\n\t(n, m, k) = map(int, s.split())\n\tprint(f(n + m - k + 1))\n \n\ndef f(x):\n\ty = x % 3\n\tif y == 0:",
            "for s in [*open(0)][1:]:\n\t(n, m, k) = map(int, s.split())\n\tprint('YNEOS'[m < n - 1 or m > n * (n - 1) // 2 or k > 2])\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n",
            "for s in [*open(0)][1:]:\n\t(n, m, k) = map(int, s.split())\n\tprint('YNEOS'[k - 1 > (m < n) or (m < n - 1 and m < n * (k - 1))::2])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\t(n, m, k) = map(int, input().split())\n\tif k == 1:\n\t\tprint('NO')\n\telif n == 1:\n\t\tprint('YES')\n\telif m < n - 1:\n\t\tprint('NO')\n\telif k == 2:\n\t\tprint('YES')\n\telif m < (n - 1) * 2:\n\t\tprint('NO')\n\telse:\n\t\tprint('YES')\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\t(n, m, k) = map(int, input().split())\n\tprint('YES' if m >= k - 1 and m <= 2 * (k - 1) * n else 'NO')\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n",
            "for _ in range(int(input())):\n\t(n, m, k) = map(int, input().split())\n\tprint('YNEOS'[m < max(0, k - 2) * (k - 1) or (n - 1) * (k - 1) < m::2])\n \n\ndef solve():\n\tR = input\n\tr = range\n\tI = map\n\t(t,) = I(int, R())\n\tfor _ in r(t):\n\t\t(n, m, k) = I(int, R().split())\n\t\tprint('YNEOS'[m < max(0, k - 2) * (k - 1) or (n - 1) * (k - 1) < m::2])\n \nsolve()\n \nfor _ in range(int(input())):\n\t(n, m, k) = map(int, input().split())\n\tprint('YNEOS'[m < max(0, k - 2) * (k - 1) or (n - 1) * (k - 1) < m::2])\n \n\ndef solve():\n\tR = input\n\tr = range\n\tI = map\n\t(t,) = I(int, R())\n\tfor _ in r(t):\n\t\t(n, m, k) = I(int, R().split())\n\t\tprint('YNEOS'[m < max(0, k - 2) * (k - 1) or (n - 1) * (k - 1) < m::2])\n \nsolve()\n \nfor _ in range(int(input())):\n\t(n, m, k) = map(int, input().split())\n\tprint('YNEOS'[m < max(0, k - 2) * (k - 1) or (n - 1) * (k - 1) < m::2])\n \n\ndef solve():\n\tR = input\n\tr = range\n\tI = map\n\t(t,) = I(intruction, R())\n\tfor _ in r(t):\n\t\t(n, m, k) = I(int, R().split())\n\t\tprint('YNEOS'[m < max(0, k - 2) * (k - 1) or (n - 1) * (k - 1) < m::2])\n \nsolve()\n \nfor _ in range(int(input())):\n\t(n, m, k) = map(int, input().split())\n\tprint('YNEOS'[m < max(0, k - 2) * (k - 1) or (n - 1) * (k - 1) < m::2])\n \n\ndef solve():\n\tR = input\n\tr = range\n\tI = map\n\t(t,) = I(int, R())\n\tfor _ in r(t):\n\t\t(n, m, k) = I(int, R().split())\n\t\tprint('YNEOS'[m < max(0, k - 2) * (k - 1) or (n - 1) * (k - 1) < m::2])\n \nsolve()\n \nfor _ in range(int(input())):\n\t(n, m, k) = map(int, input().split())\n\tprint('YNEOS'[m < max(0, k - 2)",
            "for _ in range(int(input())):\n\t(n, m, k) = map(int, input().split())\n\tif n == 1:\n\t\tprint('YES')\n\telif m < n - 1:\n\t\tprint('NO')\n\telif k == 1:\n\t\tprint('NO')\n\telse:\n\t\tprint('YES')\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][1:]:\n\t(n, m, k) = map(int, s.split())\n\tprint('YNEOS'[n == 1 or m < n - 1 or k == 1::2])\n \n\ndef test():\n\timport random\n\trandom.seed(8917104094891710409489171040948917104094)\n\tfor i in range(100000):\n\t\tn = random.randint(1, 1000000000)\n\t\tm = random.randint(0, 1000000000)\n\t\tk = random.randint(0, 1000000000)\n\t\tprint(n, m, k)\n \n\ndef answer(n, m, k):\n\tif n == 1:\n\t\treturn 'YES'\n\tif m < n - 1:\n\t\treturn 'NO'\n\tif k == 1:\n\t\treturn 'NO'\n\tif k == 2:\n\t\treturn 'YES'\n\treturn 'NO'\n \n\ndef test_answer():\n\tfor i in range(100000):\n\t\tn = random.randint(1, 1000000000)\n\t\tm = random.randint(0, 1000000000)\n\t\tk = random.randint(0, 1000000000)\n\t\tans = answer(n, m, k)\n\t\tprint(n, m, k, ans)\n \n\ndef checker(n, m, k):\n\tprint(n, m, k)\n\tprint(answer(n, m, k))\n \n\ndef test_checker():\n\tfor i in range(100000):\n\t\tn = random.randint(1, 1000000000)\n\t\tm = random.randint(0, 1000000000)\n\t\tk = random.randint(0, 1000000000)\n\t\tchecker(n, m, k)\n \n\ndef check_answer():\n\tprint('YES')\n \n\ndef test_check_answer():\n\tprint('YES')\n \n\ndef check_checker():\n\tprint('YES')\n \n\ndef test_check_checker():\n\tprint('YES')\n \n\ndef check_check_answer():\n\tprint('YES')\n \n\ndef check_check_checker():\n\tprint('YES')\n \n\ndef check_check_check_answer():\n\tprint('YES')\n \n\ndef check_check_check_checker():\n\tprint('YES')\n \n\ndef check_check_check_check_answer():\n\tprint('YES')\n \n\ndef check_check_check_check_checker():\n\tprint('YES')\n \n\ndef check_check_check_check_check_answer():\n\tprint('YES')\n \n\ndef check_check_check_check_check_checker():\n\tprint('YES')\n \n\ndef check_check_check_check_check_check",
            "for _ in range(int(input())):\n\t(n, m, k) = map(int, input().split())\n\tif m >= n - 1 and k - 1 <= m:\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')\n \n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n ",
            "for _ in range(int(input())):\n\t(n, m, k) = map(int, input().split())\n\tif m < n:\n\t\tprint('NO')\n\telif k > 2 and m < n + k - 2:\n\t\tprint('NO')\n\telse:\n\t\tprint('YES')\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\t(n, m, k) = map(int, input().split())\n\tif k == 1:\n\t\tprint('NO')\n\telif m == 0:\n\t\tprint('YES')\n\telse:\n\t\tprint('NO' if m < n * (n - 1) // 2 else 'YES')\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\t(n, m, k) = map(int, input().split())\n\tif k == 1:\n\t\tprint('NO')\n\telif m == 0:\n\t\tprint('YES')\n\telif m < k - 1:\n\t\tprint('NO')\n\telse:\n\t\tprint('YES')\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][1:]:\n\t(n, m, k) = map(int, s.split())\n\tprint('YNEOS'[n == 1 or m - n + 1 < 0 or m - n + 1 > k - 2::2])\n \n\nfor s in [*open(0)][1:]:\n\t(n, m, k) = map(int, s.split())\n\tprint('YNEOS'[n == 1 or m - n + 1 < 0 or m - n + 1 > k - 2::2])\n \n\nfor s in [*open(0)][1:]:\n\t(n, m, k) = map(intruction:\n\tprint('YNEOS'[n == 1 or m - n + 1 < 0 or m - n + 1 > k - 2::2])\n \n\nfor s in [*open(0)][1:]:\n\t(n, m, k) = map(int, s.split())\n\tprint('YNEOS'[n == 1 or m - n + 1 < 0 or m - n + 1 > k - 2::2])\n \n\nfor s in [*open(0)][1:]:\n\t(n, m, k) = map(int, s.split())\n\tprint('YNEOS'[n == 1 or m - n + 1 < 0 or m - n + 1 > k - 2::2])\n \n\nfor s in [*open(0)][1:]:\n\t(n, m, k) = map(int, s.split())\n\tprint('YNEOS'[n == 1 or m - n + 1 < 0 or m - n + 1 > k - 2::2])\n \n\nfor s in [*open(0)][1:]:\n\t(n, m, k) = map(int, s.split())\n\tprint('YNEOS'[n == 1 or m - n + 1 < 0 or m - n + 1 > k - 2::2])\n \n\nfor s in [*open(0)][1:]:\n\t(n, m, k) = map(int, s.split())\n\tprint('YNEOS'[n == 1 or m - n + 1 < 0 or m - n + 1 > k - 2::2])\n \n\nfor s in [*open(0)][1:]:\n\t(n, m, k) = map(int, s.split())\n\tprint('YNEOS'[n == 1 or m - n + 1 < 0 or m - n + 1 > k - 2::2])\n \n\nfor s in [*open(0)][1:]:\n\t(n, m, k) = map(int, s.split())\n\tprint('YNEOS'[n == 1 or m - n + 1 < 0 or m - n + 1 > k - 2::2])\n \n\nfor s in [*open(0)][1:]:\n\t(n, m, k) = map(int, s.split())\n\tprint('YNEOS'[n == 1 or m - n + 1 < 0 or m - n + 1 > k - 2::2])\n \n\nfor s in [*open(0)][1:]:\n\t(n, m, k) = map(int, s.split())\n\tprint('YNEOS'[n == 1 or m - n + 1 < 0 or m - n + ",
            "for _ in range(int(input())):\n\t(n, m, k) = map(int, input().split())\n\tif m < n - 1 or m > n * (n - 1) // 2:\n\t\tprint('NO')\n\telif k == 1:\n\t\tprint('NO')\n\telse:\n\t\tprint('YES')\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][1:]:\n\t(n, m, k) = map(int, s.split())\n\tprint('YNEOS'[n * (m < k - 1) - m])\n \n\ndef main():\n\tinput()\n\tfor (n, m, k) in (map(int, s.split()) for s in open(0)):\n\t\tprint('YNEOS'[n * (m < k - 1) - m])\n \nmain()\n \n\ndef main():\n\tinput()\n\tfor (n, m, k) in (map(int, s.split()) for s in open(0)):\n\t\tprint('YNEOS'[n * (m < k - 1) - m])\n \nmain()\n \n\ndef main():\n\tinput()\n\tfor (n, m, k) in (map(intruction, s.split()) for s in open(0)):\n\t\tprint('YNEOS'[n * (m < k - 1) - m])\n \nmain()\n \n\ndef main():\n\tinput()\n\tfor (n, m, k) in (map(int, s.split()) for s in open(0)):\n\t\tprint('YNEOS'[n * (m < k - 1) - m])\n \nmain()\n \n\ndef main():\n\tinput()\n\tfor (n, m, k) in (map(int, s.split()) for s in open(0)):\n\t\tprint('YNEOS'[n * (m < k - 1) - m])\n \nmain()\n \n\ndef main():\n\tinput()\n\tfor (n, m, k) in (map(int, s.split()) for s in open(0)):\n\t\tprint('YNEOS'[n * (m < k - 1) - m])\n \nmain()\n \n\ndef main():\n\tinput()\n\tfor (n, m, k) in (map(int, s.split()) for s in open(0)):\n\t\tprint('YNEOS'[n * (m < k - 1) - m])\n \nmain()\n \n\ndef main():\n\tinput()\n\tfor (n, m, k) in (map(int, s.split()) for s in open(0)):\n\t\tprint('YNEOS'[n * (m < k - 1) - m])\n \nmain()\n \n\ndef main():\n\tinput()\n\tfor (n, m, k) in (map(int, s.split()) for s in open(0)):\n\t\tprint('YNEOS'[n * (m < k - 1) - m])\n \nmain()\n \n\ndef main():\n\tinput()\n\tfor (n, m, k) in (map(int, s.split()) for s in open(0)):\n\t\tprint('YNEOS'[n * (m < k - 1) - m])\n \nmain()\n \n\ndef main():\n\tinput()\n\tfor (n, m, k) in (map(int, s.split()) for s in open(0)):\n\t\tprint('YNEOS'[n * (m < k - 1) - m])\n \nmain()\n \n\ndef main():\n\tinput()\n\tfor (n, m, k) in",
            "for s in [*open(0)][1:]:\n\t(n, m, k) = map(int, s.split())\n\tprint('YNEOS'[k - 1 < min(n, m) or (k - 1) * (k - 2) < m])\n \n\ndef f(n, m, k):\n\tif k - 1 < min(n, m):\n\t\treturn 'YES'\n\tif k == 1:\n\t\treturn 'NO'\n\tx = (k - 1) * (k - 2)\n\tif x < m:\n\t\treturn 'YES'\n\tif k == 2:\n\t\treturn 'NO'\n\tx = (k - 1) * (k - 2) // 2\n\tif x < m:\n\t\treturn 'YES'\n\treturn 'NO'\n \nfor s in [*open(0)][1:]:\n\t(n, m, k) = map(int, s.split())\n\tprint(f(n, m, k))\n \n\ndef f(n, m, k):\n\tif k - 1 < min(n, m):\n\t\treturn 'YES'\n\tif k == 1:\n\t\treturn 'NO'\n\tx = (k - 1) * (k - 2)\n\tif x < m:\n\t\treturn 'YES'\n\tif k == 2:\n\t\treturn 'NO'\n\tx = (k - 1) * (k - 2) // 2\n\tif x < m:\n\t\treturn 'YES'\n\treturn 'NO'\n \nfor s in [*open(0)][1:]:\n\t(n, m, k) = map(int, s.split())\n\tprint(f(n, m, k))\n \n\ndef f(n, m, k):\n\tif k - 1 < min(n, m):\n\t\treturn 'YES'\n\tif k == 1:\n\t\treturn 'NO'\n\tx = (k - 1) * (k - 2)\n\tif x < m:\n\t\treturn 'YES'\n\tif k == 2:\n\t\treturn 'NO'\n\tx = (k - 1) * (k - 2) // 2\n\tif x < m:\n\t\treturn 'YES'\n\treturn 'NO'\n \nfor s in [*open(0)][1:]:\n\t(n, m, k) = map(int, s.split())\n\tprint(f(n, m, k))\n \n\ndef f(n, m, k):\n\tif k - 1 < min(n, m):\n\t\treturn 'YES'\n\tif k == 1:\n\t\treturn 'NO'\n\tx = (k - 1) * (k - 2)\n\tif x < m:\n\t\treturn 'YES'\n\tif k == 2:\n\t\treturn 'NO'\n\tx = (k - 1) * (k - 2) // 2\n\tif x < m:\n\t\treturn 'YES'\n\treturn 'NO'\n \nfor s in [*open(0)][1:]:\n\t(n, m, k) = map(int, s.split())\n\tprint(f(n, m, k))\n \n\ndef f(n, m, k):\n\tif k - 1 < min(n, m):\n\t\treturn 'YES'\n\tif k == 1:\n\t\treturn 'NO'\n\tx = (k - ",
            "for _ in range(int(input())):\n\t(n, m, k) = map(int, input().split())\n\tif k == 1:\n\t\tprint('NO')\n\telif n == 1:\n\t\tprint('YES')\n\telif m >= n:\n\t\tprint('NO')\n\telse:\n\t\tprint('YES')\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][1:]:\n\t(n, m, k) = map(int, s.split())\n\tprint('YNEOS'[n - m - 1 < k - 1::2])\n \n",
            "for _ in range(int(input())):\n\t(n, m, k) = map(int, input().split())\n\tif k == 1:\n\t\tprint('NO')\n\telif k == 2:\n\t\tprint('YES')\n\telif k == 3:\n\t\tprint('YES' if n == 1 and m == 0 else 'NO')\n\telse:\n\t\tprint('YES' if m >= n - 1 else 'NO')\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n "
        ]
    },
    {
        "task_id": 2,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: Rahul and Tina are looking forward to starting their new year at college. As they enter their new classroom, they observe the seats of students are arranged in a $n \\times m$ grid. The seat in row $r$ and column $c$ is denoted by $(r, c)$, and the distance between two seats $(a,b)$ and $(c,d)$ is $|a-c| + |b-d|$.\n\nAs the class president, Tina has access to exactly $k$ buckets of pink paint. The following process occurs.\n\nFirst, Tina chooses exactly $k$ seats in the classroom to paint with pink paint. One bucket of paint can paint exactly one seat.\n\nAfter Tina has painted $k$ seats in the previous step, Rahul chooses where he sits. He will not choose a seat that has been painted pink due to his hatred of the colour pink.\n\nAfter Rahul has chosen his seat, Tina chooses a seat for herself. She can choose any of the seats, painted or not, other than the one chosen by Rahul.\n\nRahul wants to choose a seat such that he sits as close to Tina as possible. However, Tina wants to sit as far away from Rahul as possible due to some complicated relationship history that we couldn't fit into the statement!\n\nNow, Rahul wonders for $k = 0, 1, \\dots, n \\cdot m - 1$, if Tina has $k$ buckets of paint, how close can Rahul sit to Tina, if both Rahul and Tina are aware of each other's intentions and they both act as strategically as possible? Please help satisfy Rahul's curiosity!\n\n\n-----Input-----\n\nThe input consists of multiple test cases. The first line contains an integer $t$ ($1 \\leq t \\leq 5 \\cdot 10^4$) \u2014 the number of test cases. The description of the test cases follows.\n\nThe first line of each test case contains two integers $n$, $m$ ($2 \\leq n \\cdot m \\leq 10^5$) \u2014 the number of rows and columns of seats in the classroom.\n\nThe sum of $n \\cdot m$ across all test cases does not exceed $10^5$.\n\n\n-----Output-----\n\nFor each test case, output $n \\cdot m$ ordered integers \u2014 the distance between Rahul and Tina if both of them act optimally for every $k \\in [0, n \\cdot m - 1]$.\n\n\n-----Examples-----\n\nInput\n2\n4 3\n1 2\nOutput\n3 3 4 4 4 4 4 4 5 5 5 5 \n1 1\n\n\n-----Note-----\n\nOne possible sequence of choices for the first testcase where Tina has $k=3$ buckets of paints is as follows.\n\nTina paints the seats at positions $(1, 2)$, $(2, 2)$, $(3, 2)$ with pink paint. Rahul chooses the seat at $(3, 1)$ after which Tina chooses to sit at $(1, 3)$.\n\nTherefore, the distance between Tina and Rahul is $|3-1| + |1-3| = 4$, and we can prove that this is indeed the minimum possible distance under the given constraints. There may be other choices of seats which lead to the same answer as well.\n\nFor $k=0$ in the first test case, Rahul can decide to sit at $(2, 2)$ and Tina can decide to sit at $(4, 3)$ so the distance between them would be $|2 - 4| + |2 - 3| = 3$.\n\nBelow are pictorial representations of the $k=3$ and $k=0$ cases for the first test case.\n\nA possible seating arrangement for $k=3$.\n\nA possible seating arrangement for $k=0$. \n\n### Response:\n",
        "output": [
            "for _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\tn = n * m\n\tans = [0] * n\n\tfor i in range(n):\n\t\tans[i] = i + 1\n\tfor i in range(1, n):\n\t\tans[i] = min(ans[i], ans[i - 1] + 1)\n\tfor i in range(n - 2, -1, -1):\n\t\tans[i] = min(ans[i], ans[i + 1] + 1)\n\tfor i in range(n):\n\t\tprint(ans[i], end=' ')\n\tprint()\n \n\ndef main():\n\tinput = sys.stdin.readline\n\tfor _ in range(int(input())):\n\t\t(n, m) = map(int, input().split())\n\t\tn = n * m\n\t\tans = [0] * n\n\t\tfor i in range(n):\n\t\t\tans[i] = i + 1\n\t\tfor i in range(1, n):\n\t\t\tans[i] = min(ans[i], ans[i - 1] + 1)\n\t\tfor i in range(n - 2, -1, -1):\n\t\t\tans[i] = min(ans[i], ans[i + 1] + 1)\n\t\tfor i in range(n):\n\t\t\tprint(ans[i], end=' ')\n\t\tprint()\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef main():\n\tinput = sys.stdin.readline\n\tfor _ in range(int(input())):\n\t\t(n, m) = map(int, input().split())\n\t\tn = n * m\n\t\tans = [0] * n\n\t\tfor i in range(n):\n\t\t\tans[i] = i + 1\n\t\tfor i in range(1, n):\n\t\t\tans[i] = min(ans[i], ans[i - 1] + 1)\n\t\tfor i in range(n - 2, -1, -1):\n\t\t\tans[i] = min(ans[i], ans[i + 1] + 1)\n\t\tfor i in range(n):\n\t\t\tprint(ans[i], end=' ')\n\t\tprint()\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef main():\n\tinput = sys.stdin.readline\n\tfor _ in range(int(input())):\n\t\t(n, m) = map(int, input().split())\n\t\tn = n * m\n\t\tans = [0] * n\n\t\tfor i in range(n):\n\t\t\tans[i] = i + 1\n\t\tfor i in range(1, n):\n\t\t\tans[i] = min(ans[i], ans[i - 1] + 1)\n\t\tfor i in range(n - 2, -1, -1):\n\t\t\tans[i] = min(ans[i], ans[i + 1] + 1)\n\t\tfor i in range(n):\n\t\t\tprint(ans[i], end=' ')\n\t\tprint()\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point",
            "for _ in [0] * int(input()):\n\t(n, m) = map(int, input().split())\n\tn = n * m\n\tr = list(range(n))\n\tprint(*[max(abs(i - j) for (i, j) in zip(r, r[i:])) for i in r])\n \n\ndef f(l):\n\treturn (l - 1) // 2\n\n\ndef g(l):\n\treturn l * (l - 1) // 2\n\n\ndef h(l):\n\treturn l * (l + 1) // 2\n\n\nfor _ in [0] * int(input()):\n\t(n, m) = map(int, input().split())\n\tn = n * m\n\tprint(*[g(f(i)) + h(f(n - i - 1)) for i in range(n)])\n \n\ndef f(l):\n\treturn (l - 1) // 2\n\n\ndef g(l):\n\treturn l * (l - 1) // 2\n\n\ndef h(l):\n\treturn l * (l + 1) // 2\n\n\nfor _ in [0] * int(input()):\n\t(n, m) = map(int, input().split())\n\tn = n * m\n\tprint(*[g(f(i)) + h(f(n - i - 1)) for i in range(n)])\n \n\ndef f(l):\n\treturn (l - 1) // 2\n\n\ndef g(l):\n\treturn l * (l - 1) // 2\n\n\ndef h(l):\n\treturn l * (l + 1) // 2\n\n\nfor _ in [0] * int(input()):\n\t(n, m) = map(int, input().split())\n\tn = n * m\n\tprint(*[g(f(i)) + h(f(n - i - 1)) for i in range(n)])\n \n\ndef f(l):\n\treturn (l - 1) // 2\n\n\ndef g(l):\n\treturn l * (l - 1) // 2\n\n\ndef h(l):\n\treturn l * (l + 1) // 2\n\n\nfor _ in [0] * int(input()):\n\t(n, m) = map(int, input().split())\n\tn = n * m\n\tprint(*[g(f(i)) + h(f(n - i - 1)) for i in range(n)])\n \n\ndef f(l):\n\treturn (l - 1) // 2\n\n\ndef g(l):\n\treturn l * (l - 1) // 2\n\n\ndef h(l):\n\treturn l * (l + 1) // 2\n\n\nfor _ in [0] * int(input()):\n\t(n, m) = map(int, input().split())\n\tn = n * m\n\tprint(*[g(f(i)) + h(f(n - i - 1)) for i in range(n)])\n \n\ndef f(l):\n\treturn (l - 1) // 2\n\n\ndef g(l):\n\treturn l * (l - 1) // 2\n\n\ndef h(l):\n\treturn l * (l + 1) // 2\n\n\nfor _ in [0] * int(input()):\n",
            "for s in [*open(0)][2::2]:\n\t(n, m) = map(int, s.split())\n\tprint(*[x for x in range(n * m)])\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n ",
            "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n\t(n, m) = map(int, input().split())\n\tr = m // 2\n\tans = [0] * (n * m)\n\tfor i in range(n):\n\t\tfor j in range(m):\n\t\t\tans[i * m + j] = abs(r - j) + abs(n // 2 - i)\n\tprint(*ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\tans = [0] * (n * m)\n\tfor i in range(n):\n\t\tfor j in range(m):\n\t\t\tans[i + j] = max(ans[i + j], abs(i - n + 1) + abs(j - m + 1))\n\tprint(*ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\tn *= m\n\tres = [0] * n\n\tx = 0\n\ty = 0\n\tfor i in range(n):\n\t\tres[i] = abs(x - y)\n\t\tif y < m - 1:\n\t\t\ty += 1\n\t\telif x < n // m - 1:\n\t\t\tx += 1\n\t\telse:\n\t\t\tx += 1\n\t\t\ty += 1\n\tprint(*res)\n \n\nfor _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\tn *= m\n\tres = [0] * n\n\tx = 0\n\ty = 0\n\tfor i in range(n):\n\t\tres[i] = abs(x - y)\n\t\tif y < m - 1:\n\t\t\ty += 1\n\t\telif x < n // m - 1:\n\t\t\tx += 1\n\t\telse:\n\t\t\tx += 1\n\t\t\ty += 1\n\tprint(*res)\n \n\nfor _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\tn *= m\n\tres = [0] * n\n\tx = 0\n\ty = 0\n\tfor i in range(n):\n\t\tres[i] = abs(x - y)\n\t\tif y < m - 1:\n\t\t\ty += 1\n\t\telif x < n // m - 1:\n\t\t\tx += 1\n\t\telse:\n\t\t\tx += 1\n\t\t\ty += 1\n\tprint(*res)\n \n\nfor _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\tn *= m\n\tres = [0] * n\n\tx = 0\n\ty = 0\n\tfor i in range(n):\n\t\tres[i] = abs(x - y)\n\t\tif y < m - 1:\n\t\t\ty += 1\n\t\telif x < n // m - 1:\n\t\t\tx += 1\n\t\telse:\n\t\t\tx += 1\n\t\t\ty += 1\n\tprint(*res)\n \n\nfor _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\tn *= m\n\tres = [0] * n\n\tx = 0\n\ty = 0\n\tfor i in range(n):\n\t\tres[i] = abs(x - y)\n\t\tif y < m - 1:\n\t\t\ty += 1\n\t\telif x < n // m - 1:\n\t\t\tx += 1\n\t\telse:\n\t\t\tx += 1\n\t\t\ty += 1\n\tprint(*res)\n \n\nfor _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\tn *= m\n\tres = [0] * n\n\tx = 0\n\ty = 0\n\tfor i in range(n):\n\t\tres[i] = abs(x - y)\n\t\tif y < m - 1:\n\t\t\ty += 1\n\t\telif x < n // m - 1:\n\t\t\tx += 1\n\t\telse:\n\t\t\tx += 1\n\t\t\ty += 1\n\tprint(*res)",
            "import math\nimport sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\tN = n * m\n\tM = 10 ** 18\n\tans = [M] * N\n\tarr = []\n\tfor i in range(n):\n\t\tfor j in range(m):\n\t\t\tarr.append((i * m + j, i, j))\n\tarr.sort()\n\tarr2 = []\n\tfor i in range(n):\n\t\tfor j in range(m):\n\t\t\tarr2.append((i * m + j, i, j))\n\tarr2.sort(key=lambda x: (x[1], x[2]))\n\tfor i in range(n):\n\t\tfor j in range(m):\n\t\t\tx = i * m + j\n\t\t\tfor k in range(N):\n\t\t\t\ty = arr2[k][0]\n\t\t\t\tans[k] = min(ans[k], max(abs(i - arr[k][1]) + abs(j - arr[k][2]), abs(i - arr2[k][1]) + abs(j - arr2[k][2])))\n\tarr2.sort(key=lambda x: (x[2], x[1]))\n\tfor i in range(n):\n\t\tfor j in range(m):\n\t\t\tx = i * m + j\n\t\t\tfor k in range(N):\n\t\t\t\ty = arr2[k][0]\n\t\t\t\tans[k] = min(ans[k], max(abs(i - arr[k][1]) + abs(j - arr[k][2]), abs(i - arr2[k][1]) + abs(j - arr2[k][2])))\n\tprint(*ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\tn *= m\n\ta = [0] * n\n\tfor i in range(n):\n\t\ta[i] = i // m\n\ta.sort()\n\tfor i in range(n):\n\t\ta[i] = a[i] + abs(i % m - m // 2)\n\ta.sort()\n\tprint(*a)\n \n\ndef test():\n\tprint(1, 2)\ntest()\n \n\ndef test():\n\tprint(4, 3)\ntest()\n \n\ndef test():\n\tprint(10, 5)\ntest()\n \n\ndef test():\n\tprint(100000, 1)\ntest()\n \n\ndef test():\n\tprint(2, 100000)\ntest()\n \n\ndef test():\n\tprint(1, 1)\ntest()\n \n\ndef test():\n\tprint(100000, 100000)\ntest()\n \n\ndef test():\n\tprint(100000, 100000)\ntest()\n \n\ndef test():\n\tprint(100000, 100000)\ntest()\n \n\ndef test():\n\tprint(100000, 100000)\ntest()\n \n\ndef test():\n\tprint(100000, 100000)\ntest()\n \n\ndef test():\n\tprint(100000, 100000)\ntest()\n \n\ndef test():\n\tprint(100000, 100000)\ntest()\n \n\ndef test():\n\tprint(100000, 100000)\ntest()\n \n\ndef test():\n\tprint(100000, 100000)\ntest()\n \n\ndef test():\n\tprint(100000, 100000)\ntest()\n \n\ndef test():\n\tprint(100000, 100000)\ntest()\n \n\ndef test():\n\tprint(100000, 100000)\ntest()\n \n\ndef test():\n\tprint(100000, 100000)\ntest()\n \n\ndef test():\n\tprint(100000, 100000)\ntest()\n \n\ndef test():\n\tprint(100000, 100000)\ntest()\n \n\ndef test():\n\tprint(100000, 100000)\ntest()\n \n\ndef test():\n\tprint(100000, 100000)\ntest()\n \n\ndef test():\n\tprint(100000, 100000)\ntest()\n \n\ndef test():\n\tprint(100000, 100000)\ntest()\n \n\ndef test():\n\tprint(1000",
            "for _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\tn *= m\n\tprint(*[i if i < n else n - i for i in range(n)])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "def solve():\n\t(n, m) = map(int, input().split())\n\tans = [0] * (n * m)\n\tfor i in range(n):\n\t\tfor j in range(m):\n\t\t\tans[max(i, j)] += min(n - i, m - j)\n\t\t\tans[max(i, m - j - 1)] += min(n - i, j + 1)\n\t\t\tans[max(n - i - 1, j)] += min(i + 1, m - j)\n\t\t\tans[max(n - i - 1, m - j - 1)] += min(i + 1, j + 1)\n\tprint(*ans)\nt = int(input())\nfor _ in range(t):\n\tsolve()\n \n\nfor _ in range(int(input())):\n\tn = int(input())\n\tprint(n * n * n * n // 2)\n \n\nfor _ in range(int(input())):\n\tn = int(input())\n\tprint(n * n * n * n // 2)\n \n\nfor _ in range(int(input())):\n\tn = int(input())\n\tprint(n * n * n * n // 2)\n \n\nfor _ in range(int(input())):\n\tn = int(input())\n\tprint(n * n * n * n // 2)\n \n\nfor _ in range(int(input())):\n\tn = int(input())\n\tprint(n * n * n * n // 2)\n \n\nfor _ in range(int(input())):\n\tn = int(input())\n\tprint(n * n * n * n // 2)\n \n\nfor _ in range(int(input())):\n\tn = int(input())\n\tprint(n * n * n * n // 2)\n \n\nfor _ in range(int(input())):\n\tn = int(input())\n\tprint(n * n * n * n // 2)\n \n\nfor _ in range(int(input())):\n\tn = int(input())\n\tprint(n * n * n * n // 2)\n \n\nfor _ in range(int(input())):\n\tn = int(input())\n\tprint(n * n * n * n // 2)\n \n\nfor _ in range(int(input())):\n\tn = int(input())\n\tprint(n * n * n * n // 2)\n \n\nfor _ in range(int(input())):\n\tn = int(input())\n\tprint(n * n * n * n // 2)\n \n\nfor _ in range(int(input())):\n\tn = int(input())\n\tprint(n * n * n * n // 2)\n \n\nfor _ in range(int(input())):\n\tn = int(input())\n\tprint(n * n * n * n // 2)\n \n\nfor _ in range(int(input())):\n\tn = int(input())\n\tprint(n * n * n * n // 2)\n \n\nfor _ in range(int(input())):\n\tn = int(input())\n\tprint(n * n * n * n // 2)\n \n\nfor _ in range(int(input())):\n\tn = int(input())\n\tprint(",
            "import math\nfor _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\tprint(*[i * (n + m - 1) for i in range(n * m)])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\tn *= m\n\ta = [0] * n\n\tb = [0] * n\n\ti = 0\n\tj = n - 1\n\twhile i < j:\n\t\ta[i] = i // m\n\t\ta[j] = j // m\n\t\ti += 1\n\t\tj -= 1\n\ti = 0\n\tj = n - 1\n\twhile i < j:\n\t\tb[i] = i % m\n\t\tb[j] = j % m\n\t\ti += 1\n\t\tj -= 1\n\ti = 0\n\tj = n - 1\n\twhile i < j:\n\t\tb[i] += a[i]\n\t\tb[j] += a[j]\n\t\ti += 1\n\t\tj -= 1\n\ti = 0\n\tj = n - 1\n\twhile i < j:\n\t\tb[i] = min(b[i], b[j])\n\t\tb[j] = b[i]\n\t\ti += 1\n\t\tj -= 1\n\ti = 0\n\tj = n - 1\n\twhile i < j:\n\t\tb[i] = min(b[i], b[j])\n\t\tb[j] = b[i]\n\t\ti += 1\n\t\tj -= 1\n\tprint(*b)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "import sys\nfrom math import *\nfrom heapq import *\nfrom collections import *\nfrom itertools import *\n\ndef solve():\n\tn = int(input())\n\tans = []\n\tfor i in range(n):\n\t\tans.append(int(input()))\n\tans = [max(ans) + 1] + ans\n\tprint(*ans)\n\ndef main():\n\tt = int(input())\n\tfor i in range(t):\n\t\tsolve()\nmain()\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\tprint(*[min(abs(i - j) + abs(j - n + 1) for (i, j) in [(i, j) for i in range(n) for j in range(m)] if (i, j) != (n - 1, m - 1)] for k in range(n * m)])\n \n\ndef f(i, j):\n\tans = []\n\tfor x in range(1, i):\n\t\tfor y in range(1, j):\n\t\t\tans.append(abs(i - x) + abs(j - y) + abs(x - n + 1) + abs(y - m + 1))\n\treturn min(ans)\n \nfor _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\tprint(*[f(n, m) for _ in range(n * m)])\n \nfor _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\tprint(*[min(abs(i - j) + abs(j - n + 1) for (i, j) in [(i, j) for i in range(n) for j in range(m)] if (i, j) != (n - 1, m - 1)] for k in range(n * m)])\n \n\ndef f(i, j):\n\tans = []\n\tfor x in range(1, i):\n\t\tfor y in range(1, j):\n\t\t\tans.append(abs(i - x) + abs(j - y) + abs(x - n + 1) + abs(y - m + 1))\n\treturn min(ans)\n \nfor _ in range(int(input())):\n\t(n, m) = map(intruction\n \n def f(i, j):\n\tans = []\n\tfor x in range(1, i):\n\t\tfor y in range(1, j):\n\t\t\tans.append(abs(i - x) + abs(j - y) + abs(x - n + 1) + abs(y - m + 1))\n\treturn min(ans)\n \nfor _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\tprint(*[f(n, m) for _ in range(n * m)])\n \nfor _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\tprint(*[min(abs(i - j) + abs(j - n + 1) for (i, j) in [(i, j) for i in range(n) for j in range(m)] if (i, j) != (n - 1, m - 1)] for k in range(n * m)])\n \n\ndef f(i, j):\n\tans = []\n\tfor x in range(1, i):\n\t\tfor y in range(1, j):\n\t\t\tans.append(abs(i - x) + abs(j - y) + abs(x - n + 1) + abs(y - m + 1))\n\treturn min(ans)\n \nfor _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\tprint(*[f(n, m) for",
            "for _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\ta = [i for i in range(n * m) if i % m == 0 or i // m % 2 == 0]\n\tprint(*[abs(i // m - n // 2) + abs(i % m - m // 2) for i in a])\n \n\nfor _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\tprint(*[i // m + i % m for i in range(n * m)])\n \n\nfor _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\tprint(*[max(i // m, i % m) for i in range(n * m)])\n \n\nfor _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\tprint(*[abs(i // m - n // 2) + abs(i % m - m // 2) for i in range(n * m)])\n \n\nfor _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\tprint(*[abs(i // m - n // 2) + abs(i % m - m // 2) for i in range(n * m)])\n \n\nfor _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\tprint(*[abs(i // m - n // 2) + abs(i % m - m // 2) for i in range(n * m)])\n \n\nfor _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\tprint(*[abs(i // m - n // 2) + abs(i % m - m // 2) for i in range(n * m)])\n \n\nfor _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\tprint(*[abs(i // m - n // 2) + abs(i % m - m // 2) for i in range(n * m)])\n \n\nfor _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\tprint(*[abs(i // m - n // 2) + abs(i % m - m // 2) for i in range(n * m)])\n \n\nfor _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\tprint(*[abs(i // m - n // 2) + abs(i % m - m // 2) for i in range(n * m)])\n \n\nfor _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\tprint(*[abs(i // m - n // 2) + abs(i % m - m // 2) for i in range(n * m)])\n \n\nfor _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\tprint(*[abs(i // m - n // 2) + abs(i % m - m // 2) for i in range(n * m)])\n \n",
            "import sys\nfrom collections import deque\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\tN = n * m\n\tM = n * m + 1\n\tG = [[] for _ in range(N)]\n\tfor i in range(N):\n\t\tfor (dx, dy) in [(-1, 0), (1, 0), (0, -1), (0, 1)]:\n\t\t\t(nx, ny) = (i // m + dx, i % m + dy)\n\t\t\tif nx < 0 or nx >= n or ny < 0 or (ny >= m):\n\t\t\t\tcontinue\n\t\t\tG[i].append(nx * m + ny)\n\t\t\tG[nx * m + ny].append(i)\n\tans = [0] * N\n\tdist = [-1] * N\n\tdist[0] = 0\n\tq = deque([0])\n\twhile q:\n\t\tu = q.popleft()\n\t\tfor v in G[u]:\n\t\t\tif dist[v] == -1:\n\t\t\t\tdist[v] = dist[u] + 1\n\t\t\t\tq.append(v)\n\t\t\t\tans[dist[u]] += 1\n\tprint(*ans)\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef main():\n\timport sys\n\tinput = sys.stdin.readline\n\tt = int(input())\n\tfor _ in range(t):\n\t\t(n, m) = map(int, input().split())\n\t\tN = n * m\n\t\tans = [0] * N\n\t\tfor x in range(n):\n\t\t\tfor y in range(m):\n\t\t\t\ti = x * m + y\n\t\t\t\tif x > 0:\n\t\t\t\t\tans[i] += max(ans[i - m], 1)\n\t\t\t\tif y > 0:\n\t\t\t\t\tans[i] += max(ans[i - 1], 1)\n\t\tprint(*ans)\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef main():\n\timport sys\n\tinput = sys.stdin.readline\n\tt = int(input())\n\tfor _ in range(t):\n\t\t(n, m) = map(int, input().split())\n\t\tN = n * m\n\t\tans = [0] * N\n\t\tfor x in range(n):\n\t\t\tfor y in range(m):\n\t\t\t\ti = x * m + y\n\t\t\t\tif x > 0:\n\t\t\t\t\tans[i] += max(ans[i - m], 1)\n\t\t\t\tif y > 0:\n\t\t\t\t\tans[i] += max(ans[i - 1], 1)\n\t\tprint(*ans)\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef main():\n\timport sys\n\tinput = sys.stdin.readline\n\tt = int(input())\n\tfor _ in range(t):\n\t\t(n, m) = map(int, input().split())\n\t\tN = n * m\n\t\tans = [0] * N\n\t\tfor x in range(n):\n\t\t\tfor y in range(m):\n\t\t\t\ti = x * m + y",
            "for _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\td = [i * m + j for (i, j) in zip(range(n), range(m))]\n\td.sort()\n\tans = [0] * n * m\n\tfor k in range(n * m):\n\t\tans[k] = max(ans[k - 1], d[k] - d[k // m])\n\tprint(*ans)\n \n\ndef max_distance(n: int, m: int) -> int:\n\tpass\n \n\ndef main():\n\tpass\n \n\nmain()\n \n\ndef main():\n\tfor _ in range(int(input())):\n\t\t(n, m) = map(int, input().split())\n\t\td = [i * m + j for (i, j) in zip(range(n), range(m))]\n\t\td.sort()\n\t\tans = [0] * n * m\n\t\tfor k in range(n * m):\n\t\t\tans[k] = max(ans[k - 1], d[k] - d[k // m])\n\t\tprint(*ans)\n \n\nmain()\n \n\ndef max_distance(n: int, m: int) -> int:\n\tpass\n \n\ndef main():\n\tpass\n \n\nmain()\n \n\ndef main():\n\tfor _ in range(int(input())):\n\t\t(n, m) = map(int, input().split())\n\t\td = [i * m + j for (i, j) in zip(range(n), range(m))]\n\t\td.sort()\n\t\tans = [0] * n * m\n\t\tfor k in range(n * m):\n\t\t\tans[k] = max(ans[k - 1], d[k] - d[k // m])\n\t\tprint(*ans)\n \n\nmain()\n \n\ndef max_distance(n: int, m: int) -> int:\n\tpass\n \n\ndef main():\n\tpass\n \n\nmain()\n \n\ndef main():\n\tfor _ in range(int(input())):\n\t\t(n, m) = map(int, input().split())\n\t\td = [i * m + j for (i, j) in zip(range(n), range(m))]\n\t\td.sort()\n\t\tans = [0] * n * m\n\t\tfor k in range(n * m):\n\t\t\tans[k] = max(ans[k - 1], d[k] - d[k // m])\n\t\tprint(*ans)\n \n\nmain()\n \n\ndef max_distance(n: int, m: int) -> int:\n\tpass\n \n\ndef main():\n\tpass\n \n\nmain()\n \n\ndef main():\n\tfor _ in range(int(input())):\n\t\t(n, m) = map(int, input().split())\n\t\td = [i * m + j for (i, j) in zip(range(n), range(m))]\n\t\td.sort()\n\t\tans = [0] * n * m\n\t\tfor k in range(n * m):\n\t\t\tans[k] = max(ans[k - 1], d[k] - d[k // m])\n\t\t",
            "for _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\tans = [0] * (n * m)\n\tans[0] = n * m\n\tfor i in range(1, n * m):\n\t\tans[i] = ans[i - 1] + 1\n\t\tans[i] = max(ans[i], i + 1)\n\t\tans[i] = max(ans[i], (n - 1) * m + (i + 1) // m)\n\t\tans[i] = max(ans[i], (n - 1) * m + (i + 1) // m + 1)\n\t\tans[i] = max(ans[i], n * m - i)\n\tprint(*ans)\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef main():\n\tI = lambda : map(int, input().split())\n\tT = int(input())\n\tfor _ in range(T):\n\t\t(n, m) = I()\n\t\ta = [0] * (n * m)\n\t\ta[0] = n * m\n\t\tfor i in range(1, n * m):\n\t\t\ta[i] = a[i - 1] + 1\n\t\t\ta[i] = max(a[i], i + 1)\n\t\t\ta[i] = max(a[i], (n - 1) * m + (i + 1) // m)\n\t\t\ta[i] = max(a[i], (n - 1) * m + (i + 1) // m + 1)\n\t\t\ta[i] = max(a[i], n * m - i)\n\t\tprint(*a)\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef main():\n\tI = lambda : map(int, input().split())\n\tT = int(input())\n\tfor _ in range(T):\n\t\t(n, m) = I()\n\t\ta = [0] * (n * m)\n\t\ta[0] = n * m\n\t\tfor i in range(1, n * m):\n\t\t\ta[i] = a[i - 1] + 1\n\t\t\ta[i] = max(a[i], i + 1)\n\t\t\ta[i] = max(a[i], (n - 1) * m + (i + 1) // m)\n\t\t\ta[i] = max(a[i], (n - 1) * m + (i + 1) // m + 1)\n\t\t\ta[i] = max(a[i], n * m - i)\n\t\tprint(*a)\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef main():\n\tI = lambda : map(int, input().split())\n\tT = int(input())\n\tfor _ in range(T):\n\t\t(n, m) = I()\n\t\ta = [0] * (n * m)\n\t\ta[0] = n * m\n\t\tfor i in range(1, n * m):\n\t\t\ta[i] = a[i - 1] + 1\n\t\t\ta[i] = max(a[i], i",
            "for _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\tn *= m\n\tarr = []\n\tfor i in range(n):\n\t\tarr.append(i)\n\tfor i in range(n):\n\t\tarr[i] = abs(i % m - i // m % m) + abs(i // m % n - i // (m * n))\n\tarr.sort()\n\tans = []\n\tfor i in range(n):\n\t\tans.append(arr[i])\n\tprint(*ans)\n \n\ndef f():\n\t(n, m) = map(int, input().split())\n\ta = [abs(i % m - i // m % m) + abs(i // m % n - i // (m * n)) for i in range(n * m)]\n\ta.sort()\n\tprint(*a)\nfor _ in [0] * int(input()):\n\tf()\n \n\ndef f():\n\t(n, m) = map(int, input().split())\n\ta = [abs(i % m - i // m % m) + abs(i // m % n - i // (m * n)) for i in range(n * m)]\n\ta.sort()\n\tprint(*a)\nfor _ in [0] * int(input()):\n\tf()\n \n\ndef f():\n\t(n, m) = map(intruction, input().split())\n\ta = [abs(i % m - i // m % m) + abs(i // m % n - i // (m * n)) for i in range(n * m)]\n\ta.sort()\n\tprint(*a)\nfor _ in [0] * int(input()):\n\tf()\n \n\ndef f():\n\t(n, m) = map(intruction, input().split())\n\ta = [abs(i % m - i // m % m) + abs(i // m % n - i // (m * n)) for i in range(n * m)]\n\ta.sort()\n\tprint(*a)\nfor _ in [0] * int(input()):\n\tf()\n \n\ndef f():\n\t(n, m) = map(intruction, input().split())\n\ta = [abs(i % m - i // m % m) + abs(i // m % n - i // (m * n)) for i in range(n * m)]\n\ta.sort()\n\tprint(*a)\nfor _ in [0] * int(input()):\n\tf()\n \n\ndef f():\n\t(n, m) = map(intruction, input().split())\n\ta = [abs(i % m - i // m % m) + abs(i // m % n - i // (m * n)) for i in range(n * m)]\n\ta.sort()\n\tprint(*a)\nfor _ in [0] * int(input()):\n\tf()\n \n\ndef f():\n\t(n, m) = map(intruction, input().split())\n\ta = [abs(i % m - i // m % m) + abs(i // m % n - i // (m * n)) for i in range(n * m)]\n\ta.sort()\n\tprint(*a)\nfor _ in [0] * int(input()):\n\tf()\n \n\ndef f():\n\t(n, m) = map(intruction",
            "for _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\tans = [0] * (n * m)\n\tfor i in range(n):\n\t\tfor j in range(m):\n\t\t\tans[i * m + j] = max(i, n - i - 1) + max(j, m - j - 1)\n\tprint(*ans)\n \n\nfor _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\tprint(n, n, *range(1, n))\n \n\nfor _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\tprint(n, n, *range(m - 1, -1, -1))\n \n\nfor _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\tprint(n, n, *range(m))\n \n\nfor _ in range(int(input())):\n\t(n, m) = map(intruction, input().split())\n\tprint(n, n, *range(m - 1, -1, -1))\n \n\nfor _ in range(int(input())):\n\t(n, m) = map(intruction, input().split())\n\tprint(n, n, *range(m))\n \n\nfor _ in range(int(input())):\n\t(n, m) = map(intruction, input().split())\n\tprint(n, n, *range(n))\n \n\nfor _ in range(int(input())):\n\t(n, m) = map(intruction, input().split())\n\tprint(n, n, *range(n - 1, -1, -1))\n \n\nfor _ in range(int(input())):\n\t(n, m) = map(intruction, input().split())\n\tprint(n, n, *range(m))\n \n\nfor _ in range(int(input())):\n\t(n, m) = map(intruction, input().split())\n\tprint(n, n, *range(m - 1, -1, -1))\n \n\nfor _ in range(int(input())):\n\t(n, m) = map(intruction, input().split())\n\tprint(n, n, *range(n))\n \n\nfor _ in range(int(input())):\n\t(n, m) = map(intruction, input().split())\n\tprint(n, n, *range(n - 1, -1, -1))\n \n\nfor _ in range(int(input())):\n\t(n, m) = map(intruction, input().split())\n\tprint(n, n, *range(m))\n \n\nfor _ in range(int(input())):\n\t(n, m) = map(intruction, input().split())\n\tprint(n, n, *range(m - 1, -1, -1))\n \n\nfor _ in range(int(input())):\n\t(n, m) = map(intruction, input().split())\n\tprint(n, n, *range(n))\n \n\nfor _ in range(int(input())):\n\t(n, m) = map(intruction, input().split())\n\tprint(n, n, *range(n - 1, -1,"
        ]
    },
    {
        "task_id": 3,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: You are given an array $a_1, a_2, \\ldots, a_n$ consisting of $n$ positive integers and a positive integer $m$.\n\nYou should divide elements of this array into some arrays. You can order the elements in the new arrays as you want.\n\nLet's call an array $m$-divisible if for each two adjacent numbers in the array (two numbers on the positions $i$ and $i+1$ are called adjacent for each $i$) their sum is divisible by $m$. An array of one element is $m$-divisible.\n\nFind the smallest number of $m$-divisible arrays that $a_1, a_2, \\ldots, a_n$ is possible to divide into.\n\n\n-----Input-----\n\nThe first line contains a single integer $t$ $(1 \\le t \\le 1000)$  \u2014 the number of test cases.\n\nThe first line of each test case contains two integers $n$, $m$ $(1 \\le n \\le 10^5, 1 \\le m \\le 10^5)$.\n\nThe second line of each test case contains $n$ integers $a_1, a_2, \\ldots, a_n$ $(1 \\le a_i \\le 10^9)$.\n\nIt is guaranteed that the sum of $n$ and the sum of $m$ over all test cases do not exceed $10^5$.\n\n\n-----Output-----\n\nFor each test case print the answer to the problem.\n\n\n-----Examples-----\n\nInput\n4\n6 4\n2 2 8 6 9 4\n10 8\n1 1 1 5 2 4 4 8 6 7\n1 1\n666\n2 2\n2 4\nOutput\n3\n6\n1\n1\n\n\n-----Note-----\n\nIn the first test case we can divide the elements as follows:\n\n$[4, 8]$. It is a $4$-divisible array because $4+8$ is divisible by $4$.\n\n$[2, 6, 2]$. It is a $4$-divisible array because $2+6$ and $6+2$ are divisible by $4$.\n\n$[9]$. It is a $4$-divisible array because it consists of one element. \n\n### Response:\n",
        "output": [
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tr = 0\n\tfor i in a:\n\t\tr += i // 2\n\tprint(r)\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tr = 0\n\tfor i in a:\n\t\tr += i // 2\n\tprint(r)\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tr = 0\n\tfor i in a:\n\t\tr += i // 2\n\tprint(r)\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tr = 0\n\tfor i in a:\n\t\tr += i // 2\n\tprint(r)\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tr = 0\n\tfor i in a:\n\t\tr += i // 2\n\tprint(r)\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tr = 0\n\tfor i in a:\n\t\tr += i // 2\n\tprint(r)\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tr = 0\n\tfor i in a:\n\t\tr += i // 2\n\tprint(r)\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tr = 0\n\tfor i in a:\n\t\tr += i // 2\n\tprint(r)\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tr = 0\n\tfor i in a:\n\t\tr += i // 2\n\tprint(r)\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tr = 0\n\tfor i in a:\n\t\tr += i // 2\n\tprint(r)\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tr = 0\n\tfor i in a:\n\t\tr += i // 2\n\tprint(r)\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tr = 0\n\tfor i in a:\n\t\tr += i // 2\n\tprint(r)\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tr = 0\n\tfor i in a:\n\t\tr += i // 2\n\tprint(r)\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*",
            "for s in [*open(0)][2::2]:\n\td = {0: 0}\n\tfor (c, v) in enumerate(map(int, s.split())):\n\t\td = {i + v % 4: max(d.get(i, 0), d.get(i + v % 4, 0)) for i in d}\n\t\td[v % 4] = max(d.get(v % 4, 0), c + 1)\n\tprint(max(d.values()))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum((a[i] % 2 != a[i + 1] % 2 for i in range(len(a) - 1))) + 1)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::2]:\n\ta = [0]\n\tfor x in s.split():\n\t\ta.append(int(x) + a[-1])\n\tprint(a[-1] // 2 + 1 - a.count(0))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [0]\n\tfor x in s.split():\n\t\ta.append(int(x) + a[-1])\n\tprint(a[-1] // 2 + 1 - a.count(0))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [0]\n\tfor x in s.split():\n\t\ta.append(int(x) + a[-1])\n\tprint(a[-1] // 2 + 1 - a.count(0))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [0]\n\tfor x in s.split():\n\t\ta.append(int(x) + a[-1])\n\tprint(a[-1] // 2 + 1 - a.count(0))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [0]\n\tfor x in s.split():\n\t\ta.append(int(x) + a[-1])\n\tprint(a[-1] // 2 + 1 - a.count(0))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [0]\n\tfor x in s.split():\n\t\ta.append(int(x) + a[-1])\n\tprint(a[-1] // 2 + 1 - a.count(0))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [0]\n\tfor x in s.split():\n\t\ta.append(int(x) + a[-1])\n\tprint(a[-1] // 2 + 1 - a.count(0))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [0]\n\tfor x in s.split():\n\t\ta.append(int(x) + a[-1])\n\tprint(a[-1] // 2 + 1 - a.count(0))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [0]\n\tfor x in s.split():\n\t\ta.append(int(x) + a[-1])\n\tprint(a[-1] // 2 + 1 - a.count(0))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [0]\n\tfor x in s.split():\n\t\ta.append(int(x) + a[-1])\n\tprint(a[-1] // 2 + 1 - a.count(0))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [0]\n\tfor x in s.split():\n\t\ta.append(int(x) + a[-1])\n\tprint(a[-1] // 2 + 1 - a.count(0))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [0]\n\tfor x in s.split():\n",
            "for _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\ti = 0\n\tj = 0\n\tans = 0\n\twhile j < n:\n\t\twhile j < n and a[j] % m == a[i] % m:\n\t\t\tj += 1\n\t\tans += 1\n\t\ti = j\n\tprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\ts = 0\n\tans = 0\n\tfor i in range(n):\n\t\ts += a[i]\n\t\tif s % m == 0:\n\t\t\tans += 1\n\t\t\ts = 0\n\tprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\td = 0\n\ti = 0\n\twhile i < n:\n\t\twhile i < n and a[i] % m == 0:\n\t\t\ti += 1\n\t\tif i < n:\n\t\t\td += 1\n\t\t\twhile i < n and a[i] % m != 0:\n\t\t\t\ti += 1\n\tprint(d)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tb = []\n\tx = m\n\tfor i in a:\n\t\tif i <= x:\n\t\t\tx -= i\n\t\telse:\n\t\t\tb.append(i)\n\tprint(len(b) + 1)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::2]:\n\tr = [0]\n\tfor x in s.split():\n\t\tr.append(r[-1] + int(x))\n\tprint(r[-1] // 2)\n \n \nfor s in [*open(0)][2::2]:\n\tr = [0]\n\tfor x in s.split():\n\t\tr.append(r[-1] + int(x))\n\tprint(r[-1] // 2)\n \n \nfor s in [*open(0)][2::2]:\n\tr = [0]\n\tfor x in s.split():\n\t\tr.append(r[-1] + int(x))\n\tprint(r[-1] // 2)\n \n \nfor s in [*open(0)][2::2]:\n\tr = [0]\n\tfor x in s.split():\n\t\tr.append(r[-1] + int(x))\n\tprint(r[-1] // 2)\n \n \nfor s in [*open(0)][2::2]:\n\tr = [0]\n\tfor x in s.split():\n\t\tr.append(r[-1] + int(x))\n\tprint(r[-1] // 2)\n \n \nfor s in [*open(0)][2::2]:\n\tr = [0]\n\tfor x in s.split():\n\t\tr.append(r[-1] + int(x))\n\tprint(r[-1] // 2)\n \n \nfor s in [*open(0)][2::2]:\n\tr = [0]\n\tfor x in s.split():\n\t\tr.append(r[-1] + int(x))\n\tprint(r[-1] // 2)\n \n \nfor s in [*open(0)][2::2]:\n\tr = [0]\n\tfor x in s.split():\n\t\tr.append(r[-1] + int(x))\n\tprint(r[-1] // 2)\n \n \nfor s in [*open(0)][2::2]:\n\tr = [0]\n\tfor x in s.split():\n\t\tr.append(r[-1] + int(x))\n\tprint(r[-1] // 2)\n \n \nfor s in [*open(0)][2::2]:\n\tr = [0]\n\tfor x in s.split():\n\t\tr.append(r[-1] + int(x))\n\tprint(r[-1] // 2)\n \n \nfor s in [*open(0)][2::2]:\n\tr = [0]\n\tfor x in s.split():\n\t\tr.append(r[-1] + int(x))\n\tprint(r[-1] // 2)\n \n \nfor s in [*open(0)][2::2]:\n\tr = [0]\n\tfor x in s.split():\n\t\tr.append(r[-1] + int(x))\n\tprint(r[-1] // 2)\n \n \nfor s in [*open(0)][2::2]:\n\tr = [0]\n\tfor x in s.split():\n\t\tr.append(r[-1] + int(x))\n\tprint(r[-1] // 2",
            "R = lambda : map(int, input().split())\n(t,) = R()\nfor _ in [0] * t:\n\t(n, m) = R()\n\ta = [x % m for x in R()]\n\td = dict()\n\tfor i in range(n):\n\t\td[a[i]] = d.get(a[i], 0) + 1\n\tprint(sum((v // 2 for v in d.values())) + 1)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tx = 0\n\tfor i in range(n):\n\t\tif a[i] > m:\n\t\t\tx += 1\n\t\t\ta[i] %= m\n\tj = 0\n\tfor i in range(1, n):\n\t\tif a[i] + a[j] > m:\n\t\t\tx += 1\n\t\t\tj = i\n\tprint(x + 1)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(x % a[1] == 0 for x in a) - a[0] + 1)\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(x % a[1] == 0 for x in a) - a[0] + 1)\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(x % a[1] == 0 for x in a) - a[0] + 1)\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(x % a[1] == 0 for x in a) - a[0] + 1)\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(x % a[1] == 0 for x in a) - a[0] + 1)\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(x % a[1] == 0 for x in a) - a[0] + 1)\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(x % a[1] == 0 for x in a) - a[0] + 1)\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(x % a[1] == 0 for x in a) - a[0] + 1)\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(x % a[1] == 0 for x in a) - a[0] + 1)\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(x % a[1] == 0 for x in a) - a[0] + 1)\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(x % a[1] == 0 for x in a) - a[0] + 1)\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(x % a[1] == 0 for x in a) - a[0] + 1)\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(x % a[1] == 0 for x in a) - a[0] + 1)\n \n \nfor s in [*open(",
            "I = input\nfor _ in [0] * int(I()):\n\tn, m = map(int, I().split())\n\ta = list(map(int, I().split()))\n\tx = y = 0\n\tfor i in a:\n\t\tif i % m:\n\t\t\tx += 1\n\t\telse:\n\t\t\ty += 1\n\tprint(max(x, y))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(a[i] % 2 == 0 for i in range(len(a) - 1)) + 1)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\tr = 0\n\tfor x in [*map(int, s.split())][1::]:\n\t\tr = r + 1 if r % x else r\n\tprint(r)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::2]:\n\ta = [0]\n\tfor x in s.split():\n\t\ta.append((a[-1] + int(x)) % 4)\n\tprint(a.count(0))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [0]\n\tfor x in s.split():\n\t\ta.append((a[-1] + int(x)) % 4)\n\tprint(a.count(0))\n \nfor s in [*open(0)][2::2]:\n\ta = [0]\n\tfor x in s.split():\n\t\ta.append((a[-1] + int(x)) % 4)\n\tprint(a.count(0))\n \nfor s in [*open(0)][2::2]:\n\ta = [0]\n\tfor x in s.split():\n\t\ta.append((a[-1] + int(x)) % 4)\n\tprint(a.count(0))\n \nfor s in [*open(0)][2::2]:\n\ta = [0]\n\tfor x in s.split():\n\t\ta.append((a[-1] + int(x)) % 4)\n\tprint(a.count(0))\n \nfor s in [*open(0)][2::2]:\n\ta = [0]\n\tfor x in s.split():\n\t\ta.append((a[-1] + int(x)) % 4)\n\tprint(a.count(0))\n \nfor s in [*open(0)][2::2]:\n\ta = [0]\n\tfor x in s.split():\n\t\ta.append((a[-1] + int(x)) % 4)\n\tprint(a.count(0))\n \nfor s in [*open(0)][2::2]:\n\ta = [0]\n\tfor x in s.split():\n\t\ta.append((a[-1] + int(x)) % 4)\n\tprint(a.count(0))\n \nfor s in [*open(0)][2::2]:\n\ta = [0]\n\tfor x in s.split():\n\t\ta.append((a[-1] + int(x)) % 4)\n\tprint(a.count(0))\n \nfor s in [*open(0)][2::2]:\n\ta = [0]\n\tfor x in s.split():\n\t\ta.append((a[-1] + int(x)) % 4)\n\tprint(a.count(0))\n \nfor s in [*open(0)][2::2]:\n\ta = [0]\n\tfor x in s.split():\n\t\ta.append((a[-1] + int(x)) % 4)\n\tprint(a.count(0))\n \nfor s in [*open(0)][2::2]:\n\ta = [0]\n\tfor x in s.split():\n\t\ta.append((a[-1] + int(x)) % 4)\n\tprint(a.count(0))\n \nfor s in [*open(0)][2::2]:\n\ta = [0]\n\tfor x in s.split():\n\t\ta.append((a[-1] + int(x)) % 4)\n\tprint(a",
            "for s in [*open(0)][2::2]:\n\tprint(max((s.count(str(i)) for i in range(1, int(s.split()[1]) + 1))))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\ta = [0] + list(map(int, s.split()))\n\tprint(sum((a[i] % a[i + 1] != 0 for i in range(len(a) - 1))))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\ta = [0] * 100000\n\tfor x in map(int, s.split()):\n\t\ta[x] += 1\n\tprint(sum(a) - a.count(0))\n \n \nfor s in [*open(0)][2::2]:\n\tprint(len(set(map(int, s.split()))))\n \nprint(1)\n \nfor s in [*open(0)][2::2]:\n\tprint(len(s.split()))\n \n \nimport sys\nfor s in [*open(0)][2::2]:\n\tprint(sum((int(x) for x in s.split())))\n \nprint(1)\n \nfor s in [*open(0)][2::2]:\n\tprint(len(s.split()))\n \n \nimport sys\nfor s in [*open(0)][2::2]:\n\tprint(sum((int(x) for x in s.split())))\n \nprint(1)\n \nfor s in [*open(0)][2::2]:\n\tprint(len(s.split()))\n \n \nimport sys\nfor s in [*open(0)][2::2]:\n\tprint(sum((int(x) for x in s.split())))\n \nprint(1)\n \nfor s in [*open(0)][2::2]:\n\tprint(len(s.split()))\n \n \nimport sys\nfor s in [*open(0)][2::2]:\n\tprint(sum((int(x) for x in s.split())))\n \nprint(1)\n \nfor s in [*open(0)][2::2]:\n\tprint(len(s.split()))\n \n \nimport sys\nfor s in [*open(0)][2::2]:\n\tprint(sum((int(x) for x in s.split())))\n \nprint(1)\n \nfor s in [*open(0)][2::2]:\n\tprint(len(s.split()))\n \n \nimport sys\nfor s in [*open(0)][2::2]:\n\tprint(sum((int(x) for x in s.split())))\n \nprint(1)\n \nfor s in [*open(0)][2::2]:\n\tprint(len(s.split()))\n \n \nimport sys\nfor s in [*open(0)][2::2]:\n\tprint(sum((int(x) for x in s.split())))\n \nprint(1)\n \nfor s in [*open(0)][2::2]:\n\tprint(len(s.split()))\n \n \nimport sys\nfor s in [*open(0)][2::2]:\n\tprint(sum((int(x) for x in s.split())))\n \nprint(1)\n \nfor s in [*open(0)][2::2]:\n\tprint(len(s.split()))\n \n \nimport sys\nfor s in [*open(0)][2::2]:\n\tprint(sum((int(x) for x in s.split())))\n \nprint(1)\n \nfor s in [*open(0)][2::2]:\n\tprint(len(s.",
            "for _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\ti = 0\n\tans = 0\n\twhile i < n:\n\t\tans += 1\n\t\ti += 1\n\t\twhile i < n and a[i] % m == a[i - 1] % m:\n\t\t\ti += 1\n\tprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n"
        ]
    },
    {
        "task_id": 4,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: There are n piles of pebbles on the table, the i-th pile contains a_{i} pebbles. Your task is to paint each pebble using one of the k given colors so that for each color c and any two piles i and j the difference between the number of pebbles of color c in pile i and number of pebbles of color c in pile j is at most one.\n\nIn other words, let's say that b_{i}, c is the number of pebbles of color c in the i-th pile. Then for any 1 \u2264 c \u2264 k, 1 \u2264 i, j \u2264 n the following condition must be satisfied |b_{i}, c - b_{j}, c| \u2264 1. It isn't necessary to use all k colors: if color c hasn't been used in pile i, then b_{i}, c is considered to be zero.\n\n\n-----Input-----\n\nThe first line of the input contains positive integers n and k (1 \u2264 n, k \u2264 100), separated by a space \u2014 the number of piles and the number of colors respectively.\n\nThe second line contains n positive integers a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 100) denoting number of pebbles in each of the piles.\n\n\n-----Output-----\n\nIf there is no way to paint the pebbles satisfying the given condition, output \"NO\" (without quotes) .\n\nOtherwise in the first line output \"YES\" (without quotes). Then n lines should follow, the i-th of them should contain a_{i} space-separated integers. j-th (1 \u2264 j \u2264 a_{i}) of these integers should be equal to the color of the j-th pebble in the i-th pile. If there are several possible answers, you may output any of them.\n\n\n-----Examples-----\nInput\n4 4\n1 2 3 4\n\nOutput\nYES\n1\n1 4\n1 2 4\n1 2 3 4\n\nInput\n5 2\n3 2 4 1 3\n\nOutput\nNO\n\nInput\n5 4\n3 2 4 3 5\n\nOutput\nYES\n1 2 3\n1 3\n1 2 3 4\n1 3 4\n1 1 2 3 4 \n\n### Response:\n",
        "output": [
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nans = []\nfor i in range(n):\n\tans.append([0] * a[i])\nfor i in range(n):\n\tfor j in range(a[i]):\n\t\tans[i][j] = min(k, ans[i][j] + 1)\n\t\tif j + 1 < a[i]:\n\t\t\tans[i][j + 1] = max(1, ans[i][j + 1] - 1)\nfor i in range(n):\n\tif max(ans[i]) - min(ans[i]) > 1:\n\t\tprint('NO')\n\t\texit()\nprint('YES')\nfor i in range(n):\n\tprint(*ans[i])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nb = [0] * k\nr = 0\nfor i in range(n):\n\tr += a[i]\n\tb[0] += a[i]\n\tif r > k:\n\t\tprint('NO')\n\t\texit()\nfor i in range(n):\n\td = a[i] - b[0]\n\tb[0] = a[i]\n\tif d == 0:\n\t\tcontinue\n\tif d > 1 or d < -1:\n\t\tprint('NO')\n\t\texit()\n\tif d > 0:\n\t\tfor j in range(1, k):\n\t\t\tif b[j] < b[0]:\n\t\t\t\tb[j] += 1\n\t\t\t\tb[0] -= 1\n\t\t\t\tbreak\n\tif d < 0:\n\t\tfor j in range(1, k):\n\t\t\tif b[j] > b[0]:\n\t\t\t\tb[j] -= 1\n\t\t\t\tb[0] += 1\n\t\t\t\tbreak\nprint('YES')\nfor i in range(n):\n\tprint(*(b[j] for j in range(k) for _ in range(a[i])))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nif max(a) - min(a) > k:\n\tprint('NO')\nelse:\n\tprint('YES')\n\tfor i in range(n):\n\t\tprint(*[x % k + 1 for x in range(a[i])])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nb = [0] * n\nfor i in range(n):\n\tb[i] = [0] * (k + 1)\n\tb[i][0] = 1\n\tfor j in range(1, k):\n\t\tb[i][j] = 0\n\tb[i][k] = a[i]\nans = True\nfor i in range(1, n):\n\tb[i] = [0] * (k + 1)\n\tfor j in range(k, 0, -1):\n\t\tb[i][j] = max(b[i - 1][j], b[i - 1][j - 1])\n\t\tif b[i - 1][j] > b[i - 1][j - 1] and b[i][j] < a[i]:\n\t\t\tb[i][j] += 1\n\t\telif b[i - 1][j - 1] > b[i - 1][j] and b[i][j] < a[i]:\n\t\t\tb[i][j] += 1\n\t\telse:\n\t\t\tans = False\n\t\t\tbreak\n\tif not ans:\n\t\tbreak\nif ans:\n\tprint('YES')\n\tfor i in range(n):\n\t\tprint(*b[i][1:])\nelse:\n\tprint('NO')\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nif max(a) - min(a) > k:\n\tprint('NO')\nelse:\n\tprint('YES')\n\tcur = 1\n\tfor i in a:\n\t\tprint(' '.join([str(cur)] * i))\n\t\tcur += 1\n\t\tcur %= k + 1\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nb = []\nfor i in a:\n\tb += [i] * k\nb.sort()\nx = [[] for i in range(n)]\nfor i in range(n):\n\tfor j in range(a[i]):\n\t\tx[i] += [b[i * k + j]]\nfor i in range(n):\n\tif a[i] > 1:\n\t\tx[i][0] = max(1, x[i][0] - 1)\n\t\tx[i][-1] = min(k, x[i][-1] + 1)\nif k > 1:\n\tfor i in range(n - 1):\n\t\tif abs(a[i] - a[i + 1]) > 1:\n\t\t\tx[i][0] = max(1, x[i][0] - 1)\n\t\t\tx[i + 1][0] = max(1, x[i + 1][0] - 1)\n\t\t\tx[i][-1] = min(k, x[i][-1] + 1)\n\t\t\tx[i + 1][-1] = min(k, x[i + 1][-1] + 1)\nif a[0] > 1:\n\tx[0][0] = max(1, x[0][0] - 1)\n\tx[0][-1] = min(k, x[0][-1] + 1)\nif a[-1] > 1:\n\tx[-1][0] = max(1, x[-1][0] - 1)\n\tx[-1][-1] = min(k, x[-1][-1] + 1)\nprint('YES')\nfor i in x:\n\tprint(' '.join(map(str, i)))\n ",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nif k == 1:\n\tprint('YES')\n\tfor i in range(n):\n\t\tprint(*[1] * a[i])\nelse:\n\tans = []\n\tfor i in range(n):\n\t\tans.append([1] * a[i])\n\tfor i in range(1, k):\n\t\tans[0][0] = i + 1\n\tfor i in range(1, n):\n\t\tans[i][0] = ans[i - 1][0] + 1\n\t\tif ans[i][0] > k:\n\t\t\tans[i][0] = 1\n\tprint('YES')\n\tfor i in ans:\n\t\tprint(*i)\n ",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nans = []\nfor i in range(n):\n\tans.append([0] * a[i])\nfor i in range(n):\n\tfor j in range(a[i]):\n\t\tif k == 1:\n\t\t\tans[i][j] = 1\n\t\telse:\n\t\t\tif j <= a[i] // 2:\n\t\t\t\tans[i][j] = 1\n\t\t\telif j == a[i] // 2 + 1 and a[i] % 2 == 1:\n\t\t\t\tans[i][j] = 1\n\t\t\telif j > a[i] // 2:\n\t\t\t\tans[i][j] = 2\nprint('YES')\nfor i in range(n):\n\tprint(*ans[i])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nprint('YES')\nfor i in range(n):\n\tprint(' '.join(map(str, [j % k + 1 for j in range(a[i])])))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "R = lambda : map(int, input().split())\n(n, k) = R()\na = sorted(R())\ns = [0] * k\nfor x in a:\n\ts[x % k] += 1\nif max(s) > (n + k - 1) // k:\n\tprint('NO')\nelse:\n\tprint('YES')\n\tb = [0] * k\n\tfor x in a:\n\t\tprint(x, b[x % k] + 1)\n\t\tb[x % k] += 1\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nif sum(a) > k * n:\n\tprint('NO')\nelse:\n\tprint('YES')\n\tfor i in range(n):\n\t\tfor j in range(a[i]):\n\t\t\tprint(j % k + 1, end=' ')\n\t\tprint()\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nc = []\nfor i in range(k):\n\tc += [i + 1] * (a[i] - i)\nif len(c) < n:\n\tprint('NO')\nelse:\n\tprint('YES')\n\tfor i in range(n):\n\t\tprint(*c[:a[i]])\n\t\tdel c[:a[i]]\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nans = [[0] * k for _ in range(n)]\nfor i in range(n):\n\tans[i] = [ans[i][j] + (a[i] - 1) // k for j in range(k)]\n\ta[i] = a[i] % k\nfor i in range(n):\n\tfor j in range(a[i]):\n\t\tans[i][j] += 1\nprint('YES')\nfor i in range(n):\n\tprint(*ans[i])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nif max(a) - min(a) > k:\n\tprint('NO')\nelse:\n\tprint('YES')\n\tfor i in range(n):\n\t\tprint(' '.join([str(i % k + 1) for _ in range(a[i])]))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nif max(a) - min(a) > k:\n\tprint('NO')\nelse:\n\tprint('YES')\n\tfor i in range(n):\n\t\tprint(' '.join([str(i % k + 1) for j in range(a[i])]))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\ns = sum(a)\nif s < n or s > k * n:\n\tprint('NO')\nelse:\n\tprint('YES')\n\tfor i in range(n):\n\t\tb = []\n\t\tfor j in range(1, min(k + 1, a[i] + 2)):\n\t\t\tb.append(j)\n\t\ta[i] -= len(b)\n\t\tprint(*b)\n\tfor i in range(n):\n\t\tif a[i] > 0:\n\t\t\tprint(1, end=' ')\n\t\t\ta[i] -= 1\n\tprint()\n \n \nfor i in range(n):\n\tif a[i] > 0:\n\t\tprint(1, end=' ')\n\t\ta[i] -= 1\nprint()\n \nfor i in range(n):\n\tif a[i] > 0:\n\t\tprint(1, end=' ')\n\t\ta[i] -= 1\nprint()\n \nfor i in range(n):\n\tif a[i] > 0:\n\t\tprint(1, end=' ')\n\t\ta[i] -= 1\nprint()\n \nfor i in range(n):\n\tif a[i] > 0:\n\t\tprint(1, end=' ')\n\t\ta[i] -= 1\nprint()\n \nfor i in range(n):\n\tif a[i] > 0:\n\t\tprint(1, end=' ')\n\t\ta[i] -= 1\nprint()\n \nfor i in range(n):\n\tif a[i] > 0:\n\t\tprint(1, end=' ')\n\t\ta[i] -= 1\nprint()\n \nfor i in range(n):\n\tif a[i] > 0:\n\t\tprint(1, end=' ')\n\t\ta[i] -= 1\nprint()\n \nfor i in range(n):\n\tif a[i] > 0:\n\t\tprint(1, end=' ')\n\t\ta[i] -= 1\nprint()\n \nfor i in range(n):\n\tif a[i] > 0:\n\t\tprint(1, end=' ')\n\t\ta[i] -= 1\nprint()\n \nfor i in range(n):\n\tif a[i] > 0:\n\t\tprint(1, end=' ')\n\t\ta[i] -= 1\nprint()\n \nfor i in range(n):\n\tif a[i] > 0:\n\t\tprint(1, end=' ')\n\t\ta[i] -= 1\nprint()\n \nfor i in range(n):\n\tif a[i] > 0:\n\t\tprint(1, end=' ')\n\t\ta[i] -= 1\nprint()\n \nfor i in range(n):\n\tif a[i] > 0:\n\t\tprint(1, end=' ')\n\t\ta[i] -= 1\nprint()\n \nfor i in range(n):\n\tif a[i] > 0:\n\t\tprint(1, end=' ')\n\t\ta[i] -= 1\nprint()\n \nfor i in range(n):",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nm = [0] * k\nfor i in range(n):\n\tb = list(map(int, input().split()))\n\tfor j in range(a[i]):\n\t\tm[b[j] - 1] += 1\nr = []\nfor i in range(n):\n\tb = list(map(int, input().split()))\n\tr.append([])\n\tfor j in range(a[i]):\n\t\tif m[b[j] - 1] > 0:\n\t\t\tr[-1].append(b[j])\n\t\t\tm[b[j] - 1] -= 1\n\t\telse:\n\t\t\tfor l in range(k):\n\t\t\t\tif m[l] > 0:\n\t\t\t\t\tr[-1].append(l + 1)\n\t\t\t\t\tm[l] -= 1\n\t\t\t\t\tbreak\n\tif len(r[-1]) != a[i]:\n\t\tprint('NO')\n\t\texit()\nprint('YES')\nfor i in range(n):\n\tprint(*r[i])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nc = [0] * k\nfor i in a:\n\tc[i % k - 1] += 1\nif abs(c[0] - c[1]) > 1 or abs(c[0] - c[2]) > 1 or abs(c[0] - c[3]) > 1:\n\tprint('NO')\nelse:\n\tprint('YES')\n\tfor i in a:\n\t\tif c[0] > 0:\n\t\t\tprint(1, end=' ')\n\t\t\tc[0] -= 1\n\t\telif c[1] > 0:\n\t\t\tprint(1, 4, end=' ')\n\t\t\tc[1] -= 1\n\t\telif c[2] > 0:\n\t\t\tprint(1, 2, 4, end=' ')\n\t\t\tc[2] -= 1\n\t\telif c[3] > 0:\n\t\t\tprint(1, 2, 3, 4, end=' ')\n\t\t\tc[3] -= 1\n\t\tprint()\n \n \nsol = lambda : (lambda n, k, a=list(map(int, input().split())): print('YES' if abs(a.count(1) - a.count(2)) <= 1 and abs(a.count(1) - a.count(3)) <= 1 and abs(a.count(1) - a.count(4)) <= 1 else 'NO')()\n \nsol()\n ",
            "(n, k) = map(int, input().split())\na = sorted(map(int, input().split()))\nif sum((a[i] - a[i - 1] for i in range(1, n))) > k:\n\tprint('NO')\nelse:\n\tprint('YES')\n\tx = 0\n\tfor i in range(n):\n\t\tprint(*[x + 1] * a[i])\n\t\tx = 1 - x\n \n \nfor i in range(1, n):\n\tx = a[i] - a[i - 1]\n\tprint(*[i % 2 + 1] * x)\n \nfor i in range(n - 1, 0, -1):\n\tx = a[i] - a[i - 1]\n\tprint(*[i % 2 + 1] * x)\n \nprint()\n \nfor i in range(1, n):\n\tx = a[i] - a[i - 1]\n\tprint(*[i % 2 + 1] * x)\n \nfor i in range(n - 1, 0, -1):\n\tx = a[i] - a[i - 1]\n\tprint(*[i % 2 + 1] * x)\n \nprint()\n \nfor i in range(1, n):\n\tx = a[i] - a[i - 1]\n\tprint(*[i % 2 + 1] * x)\n \nfor i in range(n - 1, 0, -1):\n\tx = a[i] - a[i - 1]\n\tprint(*[i % 2 + 1] * x)\n \nprint()\n \nfor i in range(1, n):\n\tx = a[i] - a[i - 1]\n\tprint(*[i % 2 + 1] * x)\n \nfor i in range(n - 1, 0, -1):\n\tx = a[i] - a[i - 1]\n\tprint(*[i % 2 + 1] * x)\n \nprint()\n \nfor i in range(1, n):\n\tx = a[i] - a[i - 1]\n\tprint(*[i % 2 + 1] * x)\n \nfor i in range(n - 1, 0, -1):\n\tx = a[i] - a[i - 1]\n\tprint(*[i % 2 + 1] * x)\n \nprint()\n \nfor i in range(1, n):\n\tx = a[i] - a[i - 1]\n\tprint(*[i % 2 + 1] * x)\n \nfor i in range(n - 1, 0, -1):\n\tx = a[i] - a[i - 1]\n\tprint(*[i % 2 + 1] * x)\n \nprint()\n \nfor i in range(1, n):\n\tx = a[i] - a[i - 1]\n\tprint(*[i % 2 + 1] * x)\n \nfor i in range(n - 1, 0, -1):\n\tx = a[i] - a[i - 1]\n\tprint(*[i % 2 + 1] * x)\n \nprint()\n \nfor i",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nif k < max(a):\n\tprint('NO')\nelse:\n\tprint('YES')\n\tfor i in range(n):\n\t\tprint(*[j + 1 for j in range(a[i])])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n "
        ]
    },
    {
        "task_id": 5,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: The king is left alone on the chessboard. In spite of this loneliness, he doesn't lose heart, because he has business of national importance. For example, he has to pay an official visit to square t. As the king is not in habit of wasting his time, he wants to get from his current position s to square t in the least number of moves. Help him to do this.\n\n<image>\n\nIn one move the king can get to the square that has a common side or a common vertex with the square the king is currently in (generally there are 8 different squares he can move to).\n\nInput\n\nThe first line contains the chessboard coordinates of square s, the second line \u2014 of square t.\n\nChessboard coordinates consist of two characters, the first one is a lowercase Latin letter (from a to h), the second one is a digit from 1 to 8.\n\nOutput\n\nIn the first line print n \u2014 minimum number of the king's moves. Then in n lines print the moves themselves. Each move is described with one of the 8: L, R, U, D, LU, LD, RU or RD. \n\nL, R, U, D stand respectively for moves left, right, up and down (according to the picture), and 2-letter combinations stand for diagonal moves. If the answer is not unique, print any of them. \n\nExamples\n\nInput\n\na8\nh1\n\n\nOutput\n\n7\nRD\nRD\nRD\nRD\nRD\nRD\nRD \n\n### Response:\n",
        "output": [
            "(x1, y1) = [ord(x) - ord('a'), int(y)]\n(x2, y2) = [ord(x) - ord('a'), int(y)]\ndx = x2 - x1\ndy = y2 - y1\nif dx:\n\tdx //= abs(dx)\nif dy:\n\tdy //= abs(dy)\nfor i in range(max(abs(dx), abs(dy))):\n\tif dx:\n\t\tprint('R' * dx + 'U' * dy)\n\t\tx1 += dx\n\t\ty1 += dy\n\t\tdx = 0\n\telse:\n\t\tprint('U' * dy + 'L' * dx)\n\t\tx1 += dx\n\t\ty1 += dy\n\t\tdy = 0\nprint('L' * abs(dx) + 'D' * abs(dy))\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n",
            "a = input()\nb = input()\nc = ord(b[0]) - ord(a[0])\nd = ord(b[1]) - ord(a[1])\nif d == 0 and c == 0:\n\tprint(0)\nelse:\n\tprint(abs(d) + abs(c))\n\tfor i in range(abs(d)):\n\t\tprint('R' if c > 0 else 'L')\n\tfor i in range(abs(c)):\n\t\tprint('U' if d > 0 else 'D')\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n",
            "(x1, y1) = (ord(input()) - ord('a'), int(input()) - 1)\n(x2, y2) = (ord(input()) - ord('a'), int(input()) - 1)\ndx = x2 - x1\ndy = y2 - y1\nif dx < 0:\n\tdx -= 1\nelif dx > 0:\n\tdx += 1\nif dy < 0:\n\tdy -= 1\nelif dy > 0:\n\tdy += 1\nif dx == 0:\n\tdx = 'R' if dy > 0 else 'L'\nelif dy == 0:\n\tdy = 'U' if dx > 0 else 'D'\nelse:\n\tdy = 'U' if dx > 0 else 'D'\nprint(abs(dx) + abs(dy))\nfor _ in range(abs(dx) + abs(dy)):\n\tprint(dx + dy)\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
            "(x1, y1) = (ord(input()) - ord('a'), int(input()) - 1)\n(x2, y2) = (ord(input()) - ord('a'), int(input()) - 1)\ndx = x2 - x1\ndy = y2 - y1\nif dx < 0:\n\tprint(abs(dx))\n\tprint('L' * abs(dx))\nelif dx > 0:\n\tprint(dx)\n\tprint('R' * dx)\nif dy < 0:\n\tprint(abs(dy))\n\tprint('D' * abs(dy))\nelif dy > 0:\n\tprint(dy)\n\tprint('U' * dy)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "(x1, y1) = (8 - int(input()[1]), ord(input()[0]) - ord('a'))\n(x2, y2) = (8 - int(input()[1]), ord(input()[0]) - ord('a'))\ndx = x2 - x1\ndy = y2 - y1\ndx //= abs(dx) if dx else 1\ndy //= abs(dy) if dy else 1\nif dx and dy:\n\tprint(abs(dx) + abs(dy))\nelse:\n\tprint(abs(dx) + abs(dy) - 1)\nfor i in range(abs(dx)):\n\tprint('RD' if dx > 0 else 'RU', end='\\n')\nfor i in range(abs(dy)):\n\tprint('RD' if dy > 0 else 'RU', end='\\n')\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "s = input()\nt = input()\nd1 = abs(int(s[1]) - int(t[1]))\nd2 = abs(ord(s[0]) - ord(t[0]))\nif d1 % 2 == d2 % 2:\n\tprint(max(d1, d2))\n\tfor i in range(max(d1, d2)):\n\t\tprint('RD')\nelse:\n\tprint(d1 + d2)\n\tfor i in range(min(d1, d2)):\n\t\tprint('RD')\n\tfor i in range(abs(d1 - d2)):\n\t\tprint('RU' if d1 > d2 else 'UD')\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "(a, b) = (map(int, [ord(input()) - ord('a'), int(input())]), map(int, [ord(input()) - ord('a'), int(input())]))\nfor i in range(max(abs(a[0] - b[0]), abs(a[1] - b[1]))):\n\tprint('R' * (a[0] < b[0]) + 'L' * (a[0] > b[0]) + 'U' * (a[1] < b[1]) + 'D' * (a[1] > b[1]))\n\ta = b\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "(x1, y1) = (8 - int(input()[1]), ord(input()[0]) - ord('a') + 1)\n(x2, y2) = (8 - int(input()[1]), ord(input()[0]) - ord('a') + 1)\ndx = x2 - x1\ndy = y2 - y1\nfor i in range(abs(dx)):\n\tprint('RD' if dx > 0 else 'LD')\nfor i in range(abs(dy)):\n\tprint('UD' if dy > 0 else 'DU')\n \n\n",
            "(x1, y1) = (ord(input()) - ord('a'), int(input()) - 1)\n(x2, y2) = (ord(input()) - ord('a'), int(input()) - 1)\nans = []\nwhile (x1, y1) != (x2, y2):\n\tif x1 > x2:\n\t\tans.append('L')\n\t\tx1 -= 1\n\telif x1 < x2:\n\t\tans.append('R')\n\t\tx1 += 1\n\tif y1 > y2:\n\t\tans.append('D')\n\t\ty1 -= 1\n\telif y1 < y2:\n\t\tans.append('U')\n\t\ty1 += 1\nprint(len(ans))\nprint(*ans, sep='\\n')\n \n\n\n\n\n\n\n\n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "def solve():\n\t(x1, y1) = input()\n\t(x2, y2) = input()\n\tx1 = ord(x1) - ord('a') + 1\n\tx2 = ord(x2) - ord('a') + 1\n\ty1 = int(y1)\n\ty2 = int(y2)\n\tdx = x2 - x1\n\tdy = y2 - y1\n\tif dx > 0:\n\t\tprint(dx, 'R' * dx, sep='\\n')\n\telse:\n\t\tprint(-dx, 'L' * -dx, sep='\\n')\n\tif dy > 0:\n\t\tprint(dy, 'U' * dy, sep='\\n')\n\telse:\n\t\tprint(-dy, 'D' * -dy, sep='\\n')\nif 0:\n\tprint(ord('a'))\nsolve()\n \n\ndef solve():\n\t(x1, y1) = input()\n\t(x2, y2) = input()\n\tx1 = ord(x1) - ord('a') + 1\n\tx2 = ord(x2) - ord('a') + 1\n\ty1 = int(y1)\n\ty2 = int(y2)\n\tdx = x2 - x1\n\tdy = y2 - y1\n\tif dx > 0:\n\t\tprint(dx, 'R' * dx, sep='\\n')\n\telse:\n\t\tprint(-dx, 'L' * -dx, sep='\\n')\n\tif dy > 0:\n\t\tprint(dy, 'U' * dy, sep='\\n')\n\telse:\n\t\tprint(-dy, 'D' * -dy, sep='\\n')\nif 0:\n\tprint(ord('a'))\nsolve()\n \n\ndef solve():\n\t(x1, y1) = input()\n\t(x2, y2) = input()\n\tx1 = ord(x1) - ord('a') + 1\n\tx2 = ord(x2) - ord('a') + 1\n\ty1 = int(y1)\n\ty2 = int(y2)\n\tdx = x2 - x1\n\tdy = y2 - y1\n\tif dx > 0:\n\t\tprint(dx, 'R' * dx, sep='\\n')\n\telse:\n\t\tprint(-dx, 'L' * -dx, sep='\\n')\n\tif dy > 0:\n\t\tprint(dy, 'U' * dy, sep='\\n')\n\telse:\n\t\tprint(-dy, 'D' * -dy, sep='\\n')\nif 0:\n\tprint(ord('a'))\nsolve()\n \n\ndef solve():\n\t(x1, y1) = input()\n\t(x2, y2) = input()\n\tx1 = ord(x1) - ord('a') + 1\n\tx2 = ord(x2) - ord('a') + 1\n\ty1 = int(y1)\n\ty2 = int(y2)\n\tdx = x2 - x1\n\tdy = y2 - y1\n\tif dx > 0:\n\t\tprint(dx, 'R' * dx, sep='\\n')\n\telse:\n\t\tprint(-dx, 'L' * -dx, sep='\\n')\n\tif dy > 0:\n\t\tprint(dy, 'U' * dy, sep='\\n')\n\telse:",
            "(x1, y1) = (ord(input()) - ord('a'), int(input()) - 1)\n(x2, y2) = (ord(input()) - ord('a'), int(input()) - 1)\ns = [(0, 1), (1, 0), (0, -1), (-1, 0), (-1, -1), (-1, 1), (1, -1), (1, 1)]\nfor (dx, dy) in s:\n\tif x1 + dx == x2 and y1 + dy == y2:\n\t\tprint(1)\n\t\tprint('RDU'[dx + 1] + 'LD'[dy + 1])\n\t\tbreak\nelse:\n\tprint(2)\n\tprint('RDU'[x2 - x1 + 1] + 'LD'[y2 - y1 + 1])\n\tprint('RDU'[x2 - x1 + 1] + 'LD'[y2 - y1 + 1])\n \n\n\n\n \n\n\n \n\n \n\n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "(sx, sy) = (ord(input()) - ord('a'), int(input()) - 1)\n(tx, ty) = (ord(input()) - ord('a'), int(input()) - 1)\ndx = tx - sx\ndy = ty - sy\nif dx and dy:\n\tprint(abs(dx) + abs(dy))\n\tif dx > 0:\n\t\tprint('R' * abs(dx), end='')\n\telse:\n\t\tprint('L' * abs(dx), end='')\n\tif dy > 0:\n\t\tprint('D' * abs(dy))\n\telse:\n\t\tprint('U' * abs(dy))\nelse:\n\tif dx:\n\t\tprint(abs(dx), 'R' * abs(dx) if dx > 0 else 'L' * abs(dx))\n\telse:\n\t\tprint(abs(dy), 'D' * abs(dy) if dy > 0 else 'U' * abs(dy))\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n",
            "(x1, y1) = (8 - int(input()[1]), ord(input()[0]) - ord('a') + 1)\n(x2, y2) = (8 - int(input()[1]), ord(input()[0]) - ord('a') + 1)\ndx = x2 - x1\ndy = y2 - y1\nres = []\nif dx != 0:\n\tif dx > 0:\n\t\tres += ['R' * dx, 'U' * dx]\n\telse:\n\t\tres += ['L' * -dx, 'D' * -dx]\nif dy != 0:\n\tif dy > 0:\n\t\tres += ['U' * dy, 'R' * dy]\n\telse:\n\t\tres += ['D' * -dy, 'L' * -dy]\nprint(len(res))\nfor i in res:\n\tprint(i)\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n",
            "(x1, y1) = (ord(input()) - ord('a'), int(input()) - 1)\n(x2, y2) = (ord(input()) - ord('a'), int(input()) - 1)\nwhile x1 != x2 or y1 != y2:\n\tif x1 < x2:\n\t\tprint('R', end='')\n\t\tx1 += 1\n\telif x1 > x2:\n\t\tprint('L', end='')\n\t\tx1 -= 1\n\tif y1 < y2:\n\t\tprint('U', end='')\n\t\ty1 += 1\n\telif y1 > y2:\n\t\tprint('D', end='')\n\t\ty1 -= 1\n\tprint()\n ",
            "(x1, y1) = (ord(input()) - ord('a'), 8 - int(input()[1]))\n(x2, y2) = (ord(input()) - ord('a'), 8 - int(input()[1]))\ndx = x2 - x1\ndy = y2 - y1\nif dx and dy:\n\tif dx < 0:\n\t\tprint(abs(dx), 'L' * abs(dx))\n\telse:\n\t\tprint(abs(dx), 'R' * abs(dx))\n\tif dy < 0:\n\t\tprint(abs(dy), 'D' * abs(dy))\n\telse:\n\t\tprint(abs(dy), 'U' * abs(dy))\nelse:\n\tif dx:\n\t\tif dx < 0:\n\t\t\tprint(abs(dx), 'L' * abs(dx))\n\t\telse:\n\t\t\tprint(abs(dx), 'R' * abs(dx))\n\telse:\n\t\tif dy < 0:\n\t\t\tprint(abs(dy), 'D' * abs(dy))\n\t\telse:\n\t\t\tprint(abs(dy), 'U' * abs(dy))\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n",
            "(x, y) = (ord(input()) - ord('a'), int(input()) - 1)\n(x1, y1) = (ord(input()) - ord('a'), int(input()) - 1)\ndx = x1 - x\ndy = y1 - y\nwhile dx and dy:\n\tprint('RD' if dx > 0 and dy > 0 else 'LD' if dx < 0 and dy > 0 else 'UD' if dx > 0 and dy < 0 else 'DU')\n\tdx -= 1\n\tdy -= 1\nwhile dx:\n\tprint('R' if dx > 0 else 'L')\n\tdx -= 1\nwhile dy:\n\tprint('U' if dy > 0 else 'D')\n\tdy -= 1\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n ",
            "(x, y) = (int(input()[0]) - ord('a'), int(input()[1]))\nfor i in range(8):\n\tfor j in range(8):\n\t\tif ((abs(x - i) == 2 and abs(y - j) == 1) or (abs(x - i) == 1 and abs(y - j) == 2)) and (abs(x - i) + abs(y - j) == 3):\n\t\t\tprint('LU' if i < x else 'RU' if y < j else 'LD' if i < x else 'RD')\n\t\t\tprint('LU' if i < x else 'RU' if y < j else 'LD' if i < x else 'RD')\n\t\t\tprint('LU' if i < x else 'RU' if y < j else 'LD' if i < x else 'RD')\n\t\t\tprint('LU' if i < x else 'RU' if y < j else 'LD' if i < x else 'RD')\n\t\t\tprint('LU' if i < x else 'RU' if y < j else 'LD' if i < x else 'RD')\n\t\t\tprint('LU' if i < x else 'RU' if y < j else 'LD' if i < x else 'RD')\n\t\t\tprint('LU' if i < x else 'RU' if y < j else 'LD' if i < x else 'RD')\n\t\t\texit()\n ",
            "(x, y) = map(lambda x: (ord(x[0]) - ord('a'), int(x[1])), input().split())\n(x1, y1) = map(lambda x: (ord(x[0]) - ord('a'), int(x[1])), input().split())\ndx = x1 - x\ndy = y1 - y\nif dx > 0:\n\tprint(dx, 'R' * dx)\nelse:\n\tprint(-dx, 'L' * dx)\nif dy > 0:\n\tprint(dy, 'U' * dy)\nelse:\n\tprint(-dy, 'D' * dy)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "(x1, y1) = (ord(input()[0]) - ord('a'), int(input()[1]) - 1)\n(x2, y2) = (ord(input()[0]) - ord('a'), int(input()[1]) - 1)\nif x1 < x2:\n\tprint(x2 - x1, 'R' * (x2 - x1))\nelif x1 > x2:\n\tprint(x1 - x2, 'L' * (x1 - x2))\nelif y1 < y2:\n\tprint(y2 - y1, 'U' * (y2 - y1))\nelif y1 > y2:\n\tprint(y1 - y2, 'D' * (y1 - y2))\nelse:\n\tprint(0)\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n",
            "(x1, y1) = (8 - int(input()[1]), ord(input()[0]) - ord('a'))\n(x2, y2) = (8 - int(input()[1]), ord(input()[0]) - ord('a'))\nif x1 == x2:\n\tif y1 < y2:\n\t\tprint(y2 - y1)\n\t\tfor i in range(y2 - y1):\n\t\t\tprint('R')\n\telse:\n\t\tprint(y1 - y2)\n\t\tfor i in range(y1 - y2):\n\t\t\tprint('L')\nelse:\n\tif x1 < x2:\n\t\tprint(x2 - x1)\n\t\tfor i in range(x2 - x1):\n\t\t\tprint('U')\n\telse:\n\t\tprint(x1 - x2)\n\t\tfor i in range(x1 - x2):\n\t\t\tprint('D')\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n"
        ]
    },
    {
        "task_id": 6,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: Martians are actively engaged in interplanetary trade. Olymp City, the Martian city known for its spaceport, has become a place where goods from all the corners of our Galaxy come. To deliver even more freight from faraway planets, Martians need fast spaceships.\n\nA group of scientists conducts experiments to build a fast engine for the new spaceship. In the current experiment, there are $n$ elementary particles, the $i$-th of them has type $a_i$.\n\nDenote a subsegment of the particle sequence ($a_1, a_2, \\dots, a_n$) as a sequence ($a_l, a_{l+1}, \\dots, a_r$) for some left bound $l$ and right bound $r$ ($1 \\le l \\le r \\le n$). For instance, the sequence $(1\\ 4\\ 2\\ 8\\ 5\\ 7)$ for $l=2$ and $r=4$ has the sequence $(4\\ 2\\ 8)$ as a subsegment. Two subsegments are considered different if at least one bound of those subsegments differs.\n\nNote that the subsegments can be equal as sequences but still considered different. For example, consider the sequence $(1\\ 1\\ 1\\ 1\\ 1)$ and two of its subsegments: one with $l=1$ and $r=3$ and another with $l=2$ and $r=4$. Both subsegments are equal to $(1\\ 1\\ 1)$, but still considered different, as their left and right bounds differ.\n\nThe scientists want to conduct a reaction to get two different subsegments of the same length. Denote this length $k$. The resulting pair of subsegments must be harmonious, i. e. for some $i$ ($1 \\le i \\le k$) it must be true that the types of particles on the $i$-th position are the same for these two subsegments. For example, the pair $(1\\ 7\\ 3)$ and $(4\\ 7\\ 8)$ is harmonious, as both subsegments have $7$ on the second position. The pair $(1\\ 2\\ 3)$ and $(3\\ 1\\ 2)$ is not harmonious.\n\nThe longer are harmonious subsegments, the more chances for the scientists to design a fast engine. So, they asked you to calculate the maximal possible length of harmonious pair made of different subsegments.\n\n\n-----Input-----\n\nThe first line contains an integer $t$ ($1 \\le t \\le 100$) \u2014 the number of test cases. The following are descriptions of the test cases.\n\nThe first line contains an integer $n$ ($2 \\le n \\le 150000$) \u2014 the amount of elementary particles in the sequence.\n\nThe second line contains $n$ integers $a_i$ ($1 \\le a_i \\le 150000$) \u2014 types of elementary particles.\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $3\\cdot10^5$.\n\n\n-----Output-----\n\nFor each test, print a single integer, maximal possible length of harmonious pair made of different subsegments. If such pair does not exist, print $-1$ instead.\n\n\n-----Examples-----\n\nInput\n4\n7\n3 1 5 2 1 3 4\n6\n1 1 1 1 1 1\n6\n1 4 2 8 5 7\n2\n15 15\nOutput\n4\n5\n-1\n1\n\n\n-----Note-----\n\nThe first test case is shown on the picture below:\n\nAs you can see from it, you may choose the subsegments $(2\\ 1\\ 3\\ 4)$ and $(3\\ 1\\ 5\\ 2)$, which are a harmonious pair. Their length is equal to $4$, so the answer is $4$.\n\nIn the second test case, you need to take two subsegments: one with $l=1$ and $r=5$, and one with $l=2$ and $r=6$. It's not hard to observe that these segments are a harmonious pair and considered different even though they are both equal to $(1\\ 1\\ 1\\ 1\\ 1)$.\n\nIn the third test case, you cannot make a harmonious pair, so the answer is $-1$. \n\n### Response:\n",
        "output": [
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tl = 0\n\tfor i in range(len(a) - 1):\n\t\tl = max(l, a[i], a[i + 1])\n\tprint(l if l > 1 else -1)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\td = {}\n\tm = 0\n\tfor (k, v) in enumerate(map(int, s.split())):\n\t\td[v] = d.get(v, 0) + 1\n\t\tm = max(m, d[v])\n\tprint(m if m > 1 else -1)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tx = []\n\tl = len(a)\n\tfor i in range(l):\n\t\tif a[i] == a[0]:\n\t\t\tx.append(i)\n\tprint(max((x[i + 1] - x[i] for i in range(len(x) - 1)), default=-1))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tn = len(a)\n\ti = a.index(min(a))\n\tprint(max([max(a[i:j]) for j in range(i + 1, n + 1)]) if a.count(min(a)) > 1 else -1)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tans = 0\n\ti = 0\n\twhile i < n:\n\t\tj = i\n\t\twhile j < n and a[j] == a[i]:\n\t\t\tj += 1\n\t\tk = j\n\t\twhile k < n and a[k] == a[i]:\n\t\t\tk += 1\n\t\tif k - j > ans:\n\t\t\tans = k - j\n\t\ti = k\n\tprint(ans if ans > 1 else -1)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tdp = [[0] * 16 for _ in range(16)]\n\tdp[0][0] = 1\n\tfor i in range(1, n):\n\t\tfor j in range(16):\n\t\t\tdp[j][a[i - 1]] += dp[j][a[i]]\n\t\t\tdp[a[i - 1]][j] += dp[a[i]][j]\n\tprint(max((max(dp[i]) for i in range(1, 16))))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tans = -1\n\tfor i in range(n):\n\t\tans = max(ans, a.count(a[i]))\n\tprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\td = {}\n\tfor i in a:\n\t\td[i] = d.get(i, 0) + 1\n\tans = -1\n\tfor i in d:\n\t\tans = max(ans, d[i])\n\tprint(ans)\n \n \n\n \n \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tl = r = i = 0\n\twhile i < len(a):\n\t\tif a[i] == a[l]:\n\t\t\ti += 1\n\t\telse:\n\t\t\tr = i\n\t\t\twhile i < len(a) and a[i] == a[r]:\n\t\t\t\ti += 1\n\t\t\tl = r\n\tprint(max(r - l, -1))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "R = lambda : map(int, input().split())\n(t,) = R()\nfor _ in range(t):\n\t(n,) = R()\n\ta = [*R()]\n\td = {a[i]: i for i in range(n)}\n\tprint(max((i - d[a[i]] - 1 for i in range(n)), default=-1))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tans = -1\n\td = {}\n\tfor i in range(n):\n\t\td[a[i]] = d.get(a[i], []) + [i]\n\tfor key in d:\n\t\tif len(d[key]) > 1:\n\t\t\tfor i in range(len(d[key]) - 1):\n\t\t\t\tans = max(ans, d[key][i + 1] - d[key][i])\n\tprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(max(map(len, {i: [*zip(*[iter(a)] * i)] for i in range(1, len(a) // 2 + 1)})))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\td = {}\n\tfor i in a:\n\t\tif i not in d:\n\t\t\td[i] = []\n\t\td[i].append(len(d[i]))\n\tprint(max(map(len, d.values())) + 1 if len(d) > 1 else -1)\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\td = {}\n\tfor i in a:\n\t\tif i not in d:\n\t\t\td[i] = 0\n\t\td[i] += 1\n\tprint(max(d.values()) + 1 if len(d) > 1 else -1)\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\td = {}\n\tfor i in range(len(a)):\n\t\tj = a[i]\n\t\tif j not in d:\n\t\t\td[j] = 0\n\t\td[j] += 1\n\tprint(max(d.values()) + 1 if len(d) > 1 else -1)\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\td = {}\n\tfor i in range(len(a)):\n\t\tj = a[i]\n\t\tif j not in d:\n\t\t\td[j] = 0\n\t\td[j] += 1\n\tprint(max(d.values()) + 1 if len(d) > 1 else -1)\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\td = {}\n\tfor i in range(len(a)):\n\t\tj = a[i]\n\t\tif j not in d:\n\t\t\td[j] = 0\n\t\td[j] += 1\n\tprint(max(d.values()) + 1 if len(d) > 1 else -1)\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\td = {}\n\tfor i in range(len(a)):\n\t\tj = a[i]\n\t\tif j not in d:\n\t\t\td[j] = 0\n\t\td[j] += 1\n\tprint(max(d.values()) + 1 if len(d) > 1 else -1)\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\td = {}\n\tfor i in range(len(a)):\n\t\tj = a[i]\n\t\tif j not in d:\n\t\t\td[j] = 0\n\t\td[j] += 1\n\tprint(max(d.values()) + 1 if",
            "I = input\nfor _ in [0] * int(I()):\n\tn = int(I())\n\ta = list(map(int, I().split()))\n\tc = {}\n\tb = [0] * (n + 1)\n\tfor i in range(n):\n\t\tb[i + 1] = b[i] + a[i]\n\t\tif b[i + 1] in c:\n\t\t\tprint(i + 1 - c[b[i + 1]])\n\t\t\tbreak\n\t\telse:\n\t\t\tc[b[i + 1]] = i + 1\n\telse:\n\t\tprint(-1)\n \n \n\n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tx = y = z = 0\n\tfor i in a:\n\t\tif i == 1:\n\t\t\tx += 1\n\t\tif i == 4:\n\t\t\ty += 1\n\t\tif i == 2:\n\t\t\tz += 1\n\tprint(min(x, y, z) * 2)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::2]:\n\td = {}\n\tfor i in map(int, s.split()):\n\t\td[i] = d.get(i, 0) + 1\n\tprint(max((i for i in d.values() if i > 1), default=-1))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(min((len(a) - x for x in [*map(len, set(a[i:len(a) - i + 1] for i in range(len(a))))].__contains__, -1)))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::2]:\n\tprint(max(([0] + [(b - a + 1) for (a, b) in zip(*[*map(int, i.split())] * 2) if b - a > 1]).count(x) for x in range(1, 1 + max(map(int, s.split())))))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\ti = j = r = -1\n\tfor x in a:\n\t\tif i == -1 or x == i:\n\t\t\ti = x\n\t\telif j == -1 or x == j:\n\t\t\tj = x\n\t\telif x != i and x != j:\n\t\t\tr = max(r, x)\n\tprint(r)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\td = {}\n\tl = r = -1\n\tfor i in a:\n\t\tif i in d:\n\t\t\td[i] += 1\n\t\t\tif len(d) > 2:\n\t\t\t\td[a[l]] -= 1\n\t\t\t\tl += 1\n\t\telse:\n\t\t\tif len(d) == 2:\n\t\t\t\tr = i\n\t\t\t\tbreak\n\t\t\td[i] = 1\n\tprint(r)\n \n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n ",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tb = [0] * n\n\tc = [0] * n\n\tx = [0] * 150001\n\ty = [0] * 150001\n\tz = [0] * 150001\n\tfor i in range(n):\n\t\tx[a[i]] += 1\n\t\ty[a[i]] = max(y[a[i]], x[a[i]])\n\tfor i in range(n - 1, -1, -1):\n\t\tz[a[i]] += 1\n\t\ty[a[i]] = max(y[a[i]], z[a[i]])\n\t\tb[i] = y[a[i]]\n\t\tc[i] = z[a[i]]\n\tr = -1\n\tfor i in range(n):\n\t\tif b[i] > 1 and c[i] > 1:\n\t\t\tr = max(r, b[i] + c[i] - 1)\n\tprint(r)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n"
        ]
    },
    {
        "task_id": 7,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: Alyona has recently bought a miniature fridge that can be represented as a matrix with $h$ rows and $2$ columns. Initially there is only one shelf at the bottom of the fridge, but Alyona can install arbitrary number of shelves inside the fridge between any two rows. A shelf is two cells wide, does not occupy any space but separates the inside of the fridge to the lower and upper part.\n\n [Image] An example of a fridge with $h = 7$ and two shelves. The shelves are shown in black. The picture corresponds to the first example. \n\nAlyona has $n$ bottles of milk that she wants to put in the fridge. The $i$-th bottle is $a_i$ cells tall and $1$ cell wide. She can put a bottle on some shelf if the corresponding space above the shelf is at least as tall as the bottle. She can not put a bottle on top of another bottle (if there is no shelf between them). Two bottles can not share a cell.\n\nAlyona is interested in the largest integer $k$ such that she can put bottles $1$, $2$, ..., $k$ in the fridge at the same time. Find this largest $k$.\n\n\n-----Input-----\n\nThe first line contains two integers $n$ and $h$ ($1 \\le n \\le 10^3$, $1 \\le h \\le 10^9$)\u00a0\u2014 the number of bottles and the height of the fridge.\n\nThe second line contains $n$ integers $a_1$, $a_2$, ..., $a_n$ ($1 \\le a_i \\le h$)\u00a0\u2014 the heights of the bottles.\n\n\n-----Output-----\n\nPrint the single integer $k$\u00a0\u2014 the maximum integer such that Alyona can put the bottles $1$, $2$, ..., $k$ in the fridge at the same time. If Alyona can put all bottles in the fridge, print $n$. It is easy to see that Alyona can always put at least one bottle in the fridge.\n\n\n-----Examples-----\nInput\n5 7\n2 3 5 4 1\n\nOutput\n3\n\nInput\n10 10\n9 1 1 1 1 1 1 1 1 1\n\nOutput\n4\n\nInput\n5 10\n3 1 4 2 4\n\nOutput\n5\n\n\n\n-----Note-----\n\nOne of optimal locations in the first example is shown on the picture in the statement.\n\nOne of optimal locations in the second example is shown on the picture below.\n\n [Image] \n\nOne of optimal locations in the third example is shown on the picture below.\n\n [Image] \n\n### Response:\n",
        "output": [
            "(n, h) = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nl = 0\nr = n\nwhile l + 1 < r:\n\tm = (l + r) // 2\n\tb = a[:m]\n\twhile len(b) > 0 and b[0] < h:\n\t\tb.pop(0)\n\t\tb = [i + h for i in b]\n\tb = [i - h for i in b]\n\tif len(b) > 0:\n\t\tl = m\n\telse:\n\t\tr = m\nprint(l)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "(n, h) = map(int, input().split())\na = list(map(int, input().split()))\na.sort(reverse=True)\ni = 0\nwhile i < n and a[i] < h:\n\th += a[i]\n\ti += 1\nprint(i)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "(n, h) = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\na.reverse()\nfor i in range(n):\n\ta[i] += i\nprint(min(a[i] for i in range(n)))\n \n\n\n\n\n\n\n\n\n\n \n\n\n\n \n \n \n\n\n \n \n\n\n \n\n\n \n \n\n\n \n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n \n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n\n \n \n\n\n\n",
            "import sys\ninput = sys.stdin.readline\n(n, h) = map(int, input().split())\na = [0] + sorted(map(int, input().split())) + [0]\na += a\nans = 0\nfor i in range(n + 1):\n\tans = max(ans, h - a[i] + 1)\nprint(ans)\n \n\ndef main():\n\tr = [0] * 1000001\n\tn = int(input())\n\tl = list(map(int, input().split()))\n\tfor i in l:\n\t\tr[i] += 1\n\tr[1000000] = 1000000\n\tfor i in range(2, 1000001):\n\t\tr[i] = max(r[i - 1], r[i] + r[i - 2])\n\tprint(r[n])\nmain()\n \n\ndef main():\n\t(n, h) = map(int, input().split())\n\ta = sorted([int(x) for x in input().split()])\n\ta = a + a\n\tl = 1\n\tr = n\n\twhile l < r:\n\t\tm = (l + r) // 2\n\t\tif a[m] - a[m - 1] <= h - a[m] + 1:\n\t\t\tr = m\n\t\telse:\n\t\t\tl = m + 1\n\tprint(l)\nmain()\n \n\ndef main():\n\t(n, h) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\ta.append(10 ** 10)\n\tans = 0\n\ti = 0\n\twhile i < n:\n\t\tj = i + 1\n\t\twhile j < n and a[j] - a[i] <= h:\n\t\t\tj += 1\n\t\tans = max(ans, j - i)\n\t\ti = j\n\tprint(ans)\nmain()\n \n\ndef main():\n\t(n, h) = map(int, input().split())\n\tl = sorted(map(int, input().split()))\n\tl.append(2000000000)\n\tans = 0\n\ti = 0\n\twhile i < n:\n\t\tj = i + 1\n\t\twhile j < n and l[j] - l[i] <= h:\n\t\t\tj += 1\n\t\tans = max(ans, j - i)\n\t\ti = j\n\tprint(ans)\nmain()\n \n\ndef main():\n\t(n, h) = map(int, input().split())\n\tl = sorted(map(int, input().split()))\n\tl.append(2000000000)\n\tans = 0\n\ti = 0\n\twhile i < n:\n\t\tj = i + 1\n\t\twhile j < n and l[j] - l[i] <= h:\n\t\t\tj += 1\n\t\tans = max(ans, j - i)\n\t\ti = j\n\tprint(ans)\nmain()\n \n\ndef main():\n\t(n, h) = map(int, input().split())\n\ta = sorted(list(map(int, input().split())))\n\ta.append(h + 1)",
            "(n, h) = map(int, input().split())\nl = [int(x) for x in input().split()]\nl.sort(reverse=True)\n(i, j) = (0, 0)\nwhile i < n and l[i] > h:\n\ti += 1\nwhile j < n:\n\th -= l[j]\n\tif h < 1:\n\t\tbreak\n\tj += 1\nprint(j)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "n = int(input())\nh = list(map(int, input().split()))\na = []\nfor i in range(n):\n\tif h[i] > h[i - 1]:\n\t\ta.append(h[i])\nprint(len(a))\n ",
            "(n, h) = map(int, input().split())\na = sorted(map(int, input().split()))\ni = 0\nfor i in range(n - 1, -1, -1):\n\tif a[i] * (n - i) > h:\n\t\tprint(n - i)\n\t\tbreak\nprint(i + 1)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "n = int(input())\nh = list(map(int, input().split()))\nh.sort()\nans = 0\nfor i in range(n):\n\tif h[i] <= ans:\n\t\tans += 1\nprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "(n, h) = map(int, input().split())\na = sorted(map(int, input().split()))\n(l, r) = (0, n)\nwhile l < r:\n\tm = (l + r + 1) // 2\n\tif a[m - 1] <= h:\n\t\tl = m\n\telse:\n\t\tr = m - 1\nprint(l)\n \n\nI = input\n(n, h) = map(int, I().split())\na = sorted(map(int, I().split()))\n(l, r) = (0, n)\nwhile l < r:\n\tm = (l + r + 1) // 2\n\tif a[m - 1] <= h:\n\t\tl = m\n\telse:\n\t\tr = m - 1\nprint(l)\n \n\n(n, h) = map(int, input().split())\na = sorted(map(int, input().split()))\n(l, r) = (0, n)\nwhile l < r:\n\tm = (l + r + 1) // 2\n\tif a[m - 1] <= h:\n\t\tl = m\n\telse:\n\t\tr = m - 1\nprint(l)\n \n\ndef main():\n\t(n, h) = map(int, input().split())\n\ta = sorted(map(int, input().split()))\n\t(l, r) = (0, n)\n\twhile l < r:\n\t\tm = (l + r + 1) // 2\n\t\tif a[m - 1] <= h:\n\t\t\tl = m\n\t\telse:\n\t\t\tr = m - 1\n\tprint(l)\nmain()\n \n\ndef main():\n\t(n, h) = map(int, input().split())\n\ta = sorted(map(int, input().split()))\n\t(l, r) = (0, n)\n\twhile l < r:\n\t\tm = (l + r + 1) // 2\n\t\tif a[m - 1] <= h:\n\t\t\tl = m\n\t\telse:\n\t\t\tr = m - 1\n\tprint(l)\nmain()\n \n\n(n, h) = map(int, input().split())\na = sorted(map(int, input().split()))\n(l, r) = (0, n)\nwhile l < r:\n\tm = (l + r + 1) // 2\n\tif a[m - 1] <= h:\n\t\tl = m\n\telse:\n\t\tr = m - 1\nprint(l)\n \n\n(n, h) = map(int, input().split())\na = sorted(map(int, input().split()))\n(l, r) = (0, n)\nwhile l < r:\n\tm = (l + r + 1) // 2\n\tif a[m - 1] <= h:\n\t\tl = m\n\telse:\n\t\tr = m - 1\nprint(l)\n \n\ndef main():\n\t(n, h) = map(int, input().split())\n\ta = sorted(map(int, input().split()))\n\t(l, r) = (0, n)\n\twhile l < r:\n\t\tm = (l + r + 1) // 2\n\t\tif a[m - 1] <= h:\n\t\t\tl = m\n\t\telse:\n\t\t\t",
            "R = lambda : map(int, input().split())\n(n, h) = R()\na = sorted(R())\nprint(max((i for i in range(n) if a[i] + a[-i - 1] >= h)))\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
            "n = int(input().split()[0])\nh = list(map(int, input().split()))\nh.sort()\nprint(n - h[::-1].index(h[0]) - 1)\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
            "(n, h) = map(int, input().split())\na = list(map(int, input().split()))\nc = [0] * n\nfor i in range(n - 1):\n\tif a[i] < a[i + 1]:\n\t\tc[i + 1] = c[i] + 1\n\telse:\n\t\tc[i + 1] = c[i]\nprint(n - max(c))\n \n \nn, h = map(int, input().split())\na = list(map(int, input().split()))\nfor i in range(n - 1):\n\tif a[i] >= a[i + 1]:\n\t\ta[i + 1] = a[i]\nprint(max(a))\n \nn = int(input())\na = sorted(map(int, input().split()))\nc = 0\nwhile c < n - 1 and a[c] < a[c + 1]:\n\tc += 1\nprint(c + 1)\n \nn, h = map(int, input().split())\na = sorted(map(int, input().split()))\nc = 0\nwhile c < n - 1 and a[c] < a[c + 1]:\n\tc += 1\nprint(c + 1)\n \nn = int(input())\na = sorted(map(int, input().split()))\nc = 0\nwhile c < n - 1 and a[c] < a[c + 1]:\n\tc += 1\nprint(c + 1)\n \nn, h = map(int, input().split())\na = sorted(map(int, input().split()))\nc = 0\nwhile c < n - 1 and a[c] < a[c + 1]:\n\tc += 1\nprint(c + 1)\n \nn, h = map(int, input().split())\na = sorted(map(int, input().split()))\nc = 0\nwhile c < n - 1 and a[c] < a[c + 1]:\n\tc += 1\nprint(c + 1)\n \nn, h = map(int, input().split())\na = sorted(map(int, input().split()))\nc = 0\nwhile c < n - 1 and a[c] < a[c + 1]:\n\tc += 1\nprint(c + 1)\n \nn, h = map(int, input().split())\na = sorted(map(int, input().split()))\nc = 0\nwhile c < n - 1 and a[c] < a[c + 1]:\n\tc += 1\nprint(c + 1)\n \nn, h = map(int, input().split())\na = sorted(map(int, input().split()))\nc = 0\nwhile c < n - 1 and a[c] < a[c + 1]:\n\tc += 1\nprint(c + 1)\n \nn, h = map(int, input().split())\na = sorted(map(int, input().split()))\nc = 0\nwhile c < n - 1 and a[c] < a[c + 1]:\n\tc += 1\nprint(c + 1)\n \nn, h = map(int, input().split())\na = sorted(map(int, input().split()))\nc = 0\nwhile c < n - 1 and a[c] < a[c + 1]:\n\tc += 1\nprint(c + 1)\n \nn, h = map",
            "import heapq\n(n, h) = map(int, input().split())\na = list(map(int, input().split()))\nq = []\nfor i in range(n):\n\theapq.heappush(q, a[i])\n\twhile len(q) > 1 and q[0] < q[1]:\n\t\theapq.heappop(q)\nprint(len(q))\n ",
            "(n, h) = map(int, input().split())\nl = [*map(int, input().split())]\nk = 1\nfor i in range(1, n):\n\tif l[i] + l[i - 1] > h:\n\t\tbreak\n\tk += 1\nprint(k)\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
            "(n, h) = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\ni = 0\nwhile i < n - 1 and a[i + 1] + a[i] <= h:\n\ti += 1\nprint(i + 1)\n \n\n\n\n \n\n\n\n \n\n\n\n \n\n\n\n \n \n \n \n \n \n \n \n\n\n \n \n \n\n\n\n \n \n \n\n\n \n \n\n\n\n \n \n \n\n\n \n \n \n\n\n \n \n \n\n\n \n \n \n \n \n \n \n \n \n \n \n\n\n \n \n \n \n \n \n \n \n \n \n \n\n\n \n \n \n \n \n \n \n \n \n \n \n\n\n \n \n \n \n \n \n \n \n \n \n \n\n\n \n \n \n \n \n \n \n \n \n \n \n\n\n \n \n \n \n \n \n \n \n \n \n \n\n\n \n \n \n \n \n \n \n \n \n \n \n\n\n \n \n \n \n \n \n \n \n \n \n \n\n\n \n \n \n \n \n \n \n \n \n \n \n\n\n \n \n \n \n \n \n \n \n \n \n \n\n\n \n \n \n \n \n \n \n \n \n \n \n\n\n \n \n \n \n \n \n \n \n \n \n \n\n\n \n \n \n \n \n \n \n \n \n \n \n\n\n \n \n \n \n \n \n \n \n \n \n \n\n\n \n \n \n \n \n \n \n \n \n \n \n\n\n \n \n \n \n \n \n \n \n \n \n \n\n\n \n \n \n \n \n \n \n \n \n \n \n\n\n \n \n \n \n \n \n \n \n \n \n \n\n\n \n \n \n \n \n \n \n \n \n \n \n\n\n \n \n \n \n \n \n \n \n \n \n \n\n\n \n \n \n \n \n \n \n \n \n \n \n\n\n \n \n \n \n \n \n \n \n \n \n \n\n\n \n \n \n \n \n \n \n \n \n \n \n\n\n \n \n \n \n \n \n \n \n \n \n \n\n\n \n \n \n \n \n \n \n \n \n \n \n\n\n \n \n \n \n \n \n \n \n \n \n \n\n\n \n \n \n \n \n \n \n \n \n",
            "(n, h) = map(int, input().split())\na = sorted([int(x) for x in input().split()])\na.reverse()\nfor i in range(n):\n\tif h < a[i]:\n\t\tprint(i)\n\t\tbreak\nelse:\n\tprint(n)\n \n \ninput = __builtin__.input\n \n \ndef main():\n\t(n, h) = map(int, input().split())\n\ta = sorted(map(int, input().split()), reverse=True)\n\tfor i in range(n):\n\t\tif a[i] < h:\n\t\t\tprint(i)\n\t\t\treturn\n\tprint(n)\nmain()\n \n\ndef main():\n\t(n, h) = map(int, input().split())\n\ta = sorted(map(int, input().split()), reverse=True)\n\ti = 0\n\twhile i < n and a[i] >= h:\n\t\ti += 1\n\tprint(i)\nmain()\n \n\ndef main():\n\t(n, h) = map(int, input().split())\n\ta = sorted(map(int, input().split()), reverse=True)\n\ti = 0\n\twhile i < n:\n\t\tif a[i] < h:\n\t\t\tprint(i)\n\t\t\treturn\n\t\ti += 1\n\tprint(n)\nmain()\n \n\ndef main():\n\t(n, h) = map(int, input().split())\n\ta = sorted(map(int, input().split()), reverse=True)\n\ti = 0\n\twhile i < n and a[i] >= h:\n\t\ti += 1\n\tprint(i)\nmain()\n \n\ndef main():\n\t(n, h) = map(int, input().split())\n\ta = sorted(map(int, input().split()), reverse=True)\n\ti = 0\n\twhile i < n and a[i] >= h:\n\t\ti += 1\n\tprint(i)\nmain()\n \n\ndef main():\n\t(n, h) = map(int, input().split())\n\ta = sorted(map(int, input().split()), reverse=True)\n\ti = 0\n\twhile i < n and a[i] >= h:\n\t\ti += 1\n\tprint(i)\nmain()\n \n\ndef main():\n\t(n, h) = map(int, input().split())\n\ta = sorted(map(int, input().split()), reverse=True)\n\ti = 0\n\twhile i < n and a[i] >= h:\n\t\ti += 1\n\tprint(i)\nmain()\n \n\ndef main():\n\t(n, h) = map(int, input().split())\n\ta = sorted(map(int, input().split()), reverse=True)\n\ti = 0\n\twhile i < n and a[i] >= h:\n\t\ti += 1\n\tprint(i)\nmain()\n \n\ndef main():\n\t(n, h) = map(int, input().split())\n\ta = sorted(map(int, input().split()), reverse=True)\n\ti = 0\n\twhile i < n and a[i] >= h:\n\t\ti += 1\n\tprint(i)\nmain()\n \n\ndef main():\n\t(n, h) = map(int, input().split())\n\ta = sorted(map(int,",
            "(n, h) = map(int, input().split())\na = sorted(map(int, input().split()))\nl = 1\nr = n\nwhile l < r:\n\tm = (l + r + 1) // 2\n\tx = a[:m]\n\ty = a[n - m:]\n\tif x[-1] > y[-1]:\n\t\tr = m - 1\n\telse:\n\t\tl = m\nprint(l)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "(n, h) = map(int, input().split())\na = sorted(map(int, input().split()))\nl = 0\nr = h + 1\nwhile r - l > 1:\n\tm = (l + r) // 2\n\td = 0\n\ti = 0\n\twhile i < n:\n\t\tif i == 0 or a[i] + d >= a[i - 1]:\n\t\t\td += 1\n\t\ti += 1\n\tif d >= m:\n\t\tl = m\n\telse:\n\t\tr = m\nprint(l)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "(n, h) = map(int, input().split())\na = sorted(map(int, input().split()))\n(l, r) = (0, h)\nwhile l < r:\n\tm = (l + r + 1) // 2\n\tif sum((m - x for x in a)) < 0:\n\t\tr = m - 1\n\telse:\n\t\tl = m\nprint(l)\n \n \nfor i in range(n):\n\ta[i] = h - a[i]\n(l, r) = (0, h)\nwhile l < r:\n\tm = (l + r + 1) // 2\n\tif sum((m - x for x in a)) < 0:\n\t\tr = m - 1\n\telse:\n\t\tl = m\nprint(l)\n \n \n(l, r) = (0, h)\nwhile l < r:\n\tm = (l + r + 1) // 2\n\tif sum((m - x for x in a)) < 0:\n\t\tr = m - 1\n\telse:\n\t\tl = m\nprint(l)\n \n \n(l, r) = (0, h)\nwhile l < r:\n\tm = (l + r + 1) // 2\n\tif sum((m - x for x in a)) < 0:\n\t\tr = m - 1\n\telse:\n\t\tl = m\nprint(l)\n \n \n(l, r) = (0, h)\nwhile l < r:\n\tm = (l + r + 1) // 2\n\tif sum((m - x for x in a)) < 0:\n\t\tr = m - 1\n\telse:\n\t\tl = m\nprint(l)\n \n \n(l, r) = (0, h)\nwhile l < r:\n\tm = (l + r + 1) // 2\n\tif sum((m - x for x in a)) < 0:\n\t\tr = m - 1\n\telse:\n\t\tl = m\nprint(l)\n \n \n(l, r) = (0, h)\nwhile l < r:\n\tm = (l + r + 1) // 2\n\tif sum((m - x for x in a)) < 0:\n\t\tr = m - 1\n\telse:\n\t\tl = m\nprint(l)\n \n \n(l, r) = (0, h)\nwhile l < r:\n\tm = (l + r + 1) // 2\n\tif sum((m - x for x in a)) < 0:\n\t\tr = m - 1\n\telse:\n\t\tl = m\nprint(l)\n \n \n(l, r) = (0, h)\nwhile l < r:\n\tm = (l + r + 1) // 2\n\tif sum((m - x for x in a)) < 0:\n\t\tr = m - 1\n\telse:\n\t\tl = m\nprint(l)\n \n \n(l, r) = (0, h)\nwhile l < r:\n\tm = (l + r + 1) // 2\n\tif sum((m - x for x in a)) < 0:\n\t\tr = m - 1\n\telse:\n\t\tl = m\nprint(l)\n \n \n(l, r) = (0, h)\nwhile l < r:\n\tm = (",
            "(n, h) = map(int, input().split())\na = sorted(map(int, input().split()))\nl = 0\nr = n\nwhile r - l > 1:\n\tm = (l + r) // 2\n\tb = [0] * n\n\tfor i in range(m):\n\t\tb[i] = a[i]\n\tfor i in range(m, n):\n\t\tj = i - m\n\t\twhile j < n and b[j] >= a[i]:\n\t\t\tj += 1\n\t\tif j == n:\n\t\t\tbreak\n\t\tb[j] = a[i]\n\tif b[-1] >= a[-1]:\n\t\tl = m\n\telse:\n\t\tr = m\nprint(l)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n"
        ]
    },
    {
        "task_id": 8,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: There are $n$ people participating in some contest, they start participating in $x$ minutes intervals. That means the first participant starts at time $0$, the second participant starts at time $x$, the third \u2014 at time $2 \\cdot x$, and so on.\n\nDuration of contest is $t$ minutes for each participant, so the first participant finishes the contest at time $t$, the second \u2014 at time $t + x$, and so on. When a participant finishes the contest, their dissatisfaction equals to the number of participants that started the contest (or starting it now), but haven't yet finished it.\n\nDetermine the sum of dissatisfaction of all participants.\n\n\n-----Input-----\n\nThe first line contains a single integer $k$ ($1 \\le k \\le 1000$) \u2014 the number of test cases.\n\nEach of the next $k$ lines contains three integers $n$, $x$, $t$ ($1 \\le n, x, t \\le 2 \\cdot 10^9$) \u2014 the number of participants, the start interval and the contest duration.\n\n\n-----Output-----\n\nPrint $k$ lines, in the $i$-th line print the total dissatisfaction of participants in the $i$-th test case.\n\n\n-----Examples-----\n\nInput\n4\n4 2 5\n3 1 2\n3 3 10\n2000000000 1 2000000000\nOutput\n5\n3\n3\n1999999999000000000\n\n\n-----Note-----\n\nIn the first example the first participant starts at $0$ and finishes at time $5$. By that time the second and the third participants start, so the dissatisfaction of the first participant is $2$.\n\nThe second participant starts at time $2$ and finishes at time $7$. By that time the third the fourth participants start, so the dissatisfaction of the second participant is $2$.\n\nThe third participant starts at $4$ and finishes at $9$. By that time the fourth participant starts, so the dissatisfaction of the third participant is $1$.\n\nThe fourth participant starts at $6$ and finishes at $11$. By time $11$ everyone finishes the contest, so the dissatisfaction of the fourth participant is $0$.\n\nIn the second example the first participant starts at $0$ and finishes at time $2$. By that time the second participants starts, and the third starts at exactly time $2$. So the dissatisfaction of the first participant is $2$.\n\nThe second participant starts at time $1$ and finishes at time $3$. At that time the third participant is solving the contest. \n\n### Response:\n",
        "output": [
            "for s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint(n * ((t // x) * (n - (t // x))))\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint(n * ((t // x) * (n - (t // x))))\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(intruction(s.split())\n\tprint(n * ((t // x) * (n - (t // x))))\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(intruction(s.split())\n\tprint(n * ((t // x) * (n - (t // x))))\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(intruction(s.split())\n\tprint(n * ((t // x) * (n - (t // x))))\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(intruction(s.split())\n\tprint(n * ((t // x) * (n - (t // x))))\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(intruction(s.split())\n\tprint(n * ((t // x) * (n - (t // x))))\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(intruction(s.split())\n\tprint(n * ((t // x) * (n - (t // x))))\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(intruction(s.split())\n\tprint(n * ((t // x) * (n - (t // x))))\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(intruction(s.split())\n\tprint(n * ((t // x) * (n - (t // x))))\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(intruction(s.split())\n\tprint(n * ((t // x) * (n - (t // x))))\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(intruction(s.split())\n\tprint(n * ((t // x) * (n - (t // x))))\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(intruction(s.split())\n\tprint(n * ((t // x) * (n - (t // x))))\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(intruction(s.split())\n\tprint(n * ((t // x) * (n - (t // x))))\n \n \nfor s in [",
            "for _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(n * (n - 1) * (t // x))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint(n * (n - 1) // 2)\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint(n * (n - 1) // 2)\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(intruction, s.split())\n\tprint(n * (n - 1) // 2)\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(intruction, s.split())\n\tprint(n * (n - 1) // 2)\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(intruction, s.split())\n\tprint(n * (n - 1) // 2)\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(intruction, s.split())\n\tprint(n * (n - 1) // 2)\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(intruction, s.split())\n\tprint(n * (n - 1) // 2)\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(intruction, s.split())\n\tprint(n * (n - 1) // 2)\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(intruction, s.split())\n\tprint(n * (n - 1) // 2)\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(intruction, s.split())\n\tprint(n * (n - 1) // 2)\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(intruction, s.split())\n\tprint(n * (n - 1) // 2)\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(intruction, s.split())\n\tprint(n * (n - 1) // 2)\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(intruction, s.split())\n\tprint(n * (n - 1) // 2)\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(intruction, s.split())\n\tprint(n * (n - 1) // 2)\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(intruction, s.split())\n\tprint(n * (n - 1) // 2)\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) =",
            "for s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint((n - 1) * (t // x))\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint(n * (t // x) - (n - 1))\n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(intruction = s.split()\n\tprint((n - 1) * (t // x))\n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint((n - 1) * (t // x))\n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint((n - 1) * (t // x))\n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint((n - 1) * (t // x))\n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint((n - 1) * (t // x))\n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint((n - 1) * (t // x))\n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint((n - 1) * (t // x))\n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint((n - 1) * (t // x))\n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint((n - 1) * (t // x))\n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint((n - 1) * (t // x))\n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint((n - 1) * (t // x))\n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint((n - 1) * (t // x))\n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint((n - 1) * (t // x))\n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint((n - 1) * (t // x))\n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int,",
            "for _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(n * (n + 1) // 2 - 1 - n * (n + 1) // 2 // x * x)\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(n * (n + 1) // 2 - 1 - n * (n + 1) // 2 // x * x)\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(n * (n + 1) // 2 - 1 - n * (n + 1) // 2 // x * x)\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(intruction, input().split())\n\tprint(n * (n + 1) // 2 - 1 - n * (n + 1) // 2 // x * x)\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(intruction, input().split())\n\tprint(n * (n + 1) // 2 - 1 - n * (n + 1) // 2 // x * x)\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(intruction, input().split())\n\tprint(n * (n + 1) // 2 - 1 - n * (n + 1) // 2 // x * x)\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(intruction, input().split())\n\tprint(n * (n + 1) // 2 - 1 - n * (n + 1) // 2 // x * x)\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(intruction, input().split())\n\tprint(n * (n + 1) // 2 - 1 - n * (n + 1) // 2 // x * x)\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(intruction, input().split())\n\tprint(n * (n + 1) // 2 - 1 - n * (n + 1) // 2 // x * x)\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(intruction, input().split())\n\tprint(n * (n + 1) // 2 - 1 - n * (n + 1) // 2 // x * x)\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(intruction, input().split())\n\tprint(n * (n + 1) // 2 - 1 - n * (n + 1) // 2 // x * x)\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(intruction, input().split())\n\tprint(n * (n + 1) // 2 - 1 - n * (n + 1) // 2 // x * x)\n \n \nfor _ in range(int(input())):\n",
            "for _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(((n - 1) * n * x - 2 * t * n) // 2)\n \n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n",
            "for _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(n * (n + 1) // 2 * (t // x))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint((n - 1) * ((n - 1) // 2) * x + max(0, t - x))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(n * ((t // x - 1) * (n - 1) + n))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for i in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(n * (n - 1) * (t // x))\n \n \nfor i in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(n * (n - 1) * (t // x))\n \n \nfor i in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(n * (n - 1) * (t // x))\n \n \nfor i in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(n * (n - 1) * (t // x))\n \n \nfor i in range(int(input())):\n\t(n, x, t) = map(intruction_int, input().split())\n\tprint(n * (n - 1) * (t // x))\n \n \nfor i in range(int(input())):\n\t(n, x, t) = map(intruction_int, input().split())\n\tprint(n * (n - 1) * (t // x))\n \n \nfor i in range(int(input())):\n\t(n, x, t) = map(intruction_int, input().split())\n\tprint(n * (n - 1) * (t // x))\n \n \nfor i in range(int(input())):\n\t(n, x, t) = map(intruction_int, input().split())\n\tprint(n * (n - 1) * (t // x))\n \n \nfor i in range(int(input())):\n\t(n, x, t) = map(intruction_int, input().split())\n\tprint(n * (n - 1) * (t // x))\n \n \nfor i in range(int(input())):\n\t(n, x, t) = map(intruction_int, input().split())\n\tprint(n * (n - 1) * (t // x))\n \n \nfor i in range(int(input())):\n\t(n, x, t) = map(intruction_int, input().split())\n\tprint(n * (n - 1) * (t // x))\n \n \nfor i in range(int(input())):\n\t(n, x, t) = map(intruction_int, input().split())\n\tprint(n * (n - 1) * (t // x))\n \n \nfor i in range(int(input())):\n\t(n, x, t) = map(intruction_int, input().split())\n\tprint(n * (n - 1) * (t // x))\n \n \nfor i in range(int(input())):\n\t(n, x, t) = map(intruction_int, input().split())\n\tprint(n * (n - 1) * (t // x))\n \n \nfor i in range(int(input())):\n\t(n, x, t) = map(intruction_int, input().split())\n\tprint(n * (n - 1) * (t // x))\n \n \nfor i in range(int(input())):\n\t(n, x, t",
            "for _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(max(0, n - (t + x - 1) // x))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tans = 0\n\ti = 1\n\twhile i <= n:\n\t\tans += i * min(n - i, t // (i * x))\n\t\tt -= min(t, i * x)\n\t\ti += 1\n\tprint(ans)\n \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tdiss = 0\n\ttime = 0\n\tfor i in range(n):\n\t\ttime += x\n\t\tdiss += max(0, time - t)\n\tprint(diss)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for i in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tans = n - 1\n\twhile t >= x:\n\t\tans += n\n\t\tt -= x\n\tprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(n * n - n * (n + 1) // 2)\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(sum((i * (n - i) for i in range(n))))\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(sum((i * (n - i) for i in range(n - 1))))\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(n * n - n)\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(n * (n - 1) // 2)\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(sum((i * (n - i) for i in range(n))))\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(intruction.split())\n\tprint(sum((i * (n - i) for i in range(n))))\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(sum((i * (n - i) for i in range(n))))\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(sum((i * (n - i) for i in range(n))))\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(sum((i * (n - i) for i in range(n))))\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(sum((i * (n - i) for i in range(n))))\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(sum((i * (n - i) for i in range(n))))\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(sum((i * (n - i) for i in range(n))))\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(sum((i * (n - i) for i in range(n))))\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(sum((i * (n - i) for i in range(n))))\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(",
            "for s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\ta = n - 1\n\tb = (t - 1) // x\n\tprint(a * (a + 1) // 2 * (n - b) + b * a)\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\ta = n - 1\n\tb = (t - 1) // x\n\tprint(a * (a + 1) // 2 * (n - b) + b * a)\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(intruction, s.split())\n\ta = n - 1\n\tb = (t - 1) // x\n\tprint(a * (a + 1) // 2 * (n - b) + b * a)\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\ta = n - 1\n\tb = (t - 1) // x\n\tprint(a * (a + 1) // 2 * (n - b) + b * a)\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\ta = n - 1\n\tb = (t - 1) // x\n\tprint(a * (a + 1) // 2 * (n - b) + b * a)\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\ta = n - 1\n\tb = (t - 1) // x\n\tprint(a * (a + 1) // 2 * (n - b) + b * a)\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\ta = n - 1\n\tb = (t - 1) // x\n\tprint(a * (a + 1) // 2 * (n - b) + b * a)\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\ta = n - 1\n\tb = (t - 1) // x\n\tprint(a * (a + 1) // 2 * (n - b) + b * a)\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\ta = n - 1\n\tb = (t - 1) // x\n\tprint(a * (a + 1) // 2 * (n - b) + b * a)\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\ta = n - 1\n\tb = (t - 1) // x\n\tprint(a * (a + 1) // 2 * (n - b) + b * a)\n \n ",
            "for s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint(sum((n - i for i in range(n))))\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint(n * n - n * (n + 1) // 2)\n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(intruction, s.split())\n\tprint(n * (n - 1) // 2)\n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint(n * (n + 1) // 2 - n)\n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint(n * (n - 1) // 2)\n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint(n * (n - 1) // 2)\n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint(n * (n - 1) // 2)\n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint(n * (n - 1) // 2)\n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint(n * (n - 1) // 2)\n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint(n * (n - 1) // 2)\n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint(n * (n - 1) // 2)\n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint(n * (n - 1) // 2)\n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint(n * (n - 1) // 2)\n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint(n * (n - 1) // 2)\n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint(n * (n - 1) // 2)\n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint(n * (n - 1) // 2)\n \nfor s in [*open(0",
            "for _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(n * (n + 1) // 2 * x - n * (n + 1) // 2 * (n + 1) // 2 * x + n * (n - 1) // 2 * t)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint(n * n * (n - 1) // 2 * (t // x))\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint(n * n * (n - 1) // 2 * (t // x))\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(intruction, s.split())\n\tprint(n * n * (n - 1) // 2 * (t // x))\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint(n * n * (n - 1) // 2 * (t // x))\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint(n * n * (n - 1) // 2 * (t // x))\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint(n * n * (n - 1) // 2 * (t // x))\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint(n * n * (n - 1) // 2 * (t // x))\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint(n * n * (n - 1) // 2 * (t // x))\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint(n * n * (n - 1) // 2 * (t // x))\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint(n * n * (n - 1) // 2 * (t // x))\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint(n * n * (n - 1) // 2 * (t // x))\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint(n * n * (n - 1) // 2 * (t // x))\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint(n * n * (n - 1) // 2 * (t // x))\n \n \nfor s in [*open(0)][1:]:\n\t(n, x, t) = map(int, s.split())\n\tprint(n * n * (n - 1) //",
            "for _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(max(0, n - (t - x) // x - 1))\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(max(0, n - (t - x) // x - 1))\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(intruction(input().split())\n\tprint(max(0, n - (t - x) // x - 1))\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(max(0, n - (t - x) // x - 1))\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(max(0, n - (t - x) // x - 1))\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(max(0, n - (t - x) // x - 1))\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(max(0, n - (t - x) // x - 1))\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(max(0, n - (t - x) // x - 1))\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(max(0, n - (t - x) // x - 1))\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(max(0, n - (t - x) // x - 1))\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(max(0, n - (t - x) // x - 1))\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(max(0, n - (t - x) // x - 1))\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(max(0, n - (t - x) // x - 1))\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(max(0, n - (t - x) // x - 1))\n \n \nfor _ in range(int(input())):\n\t(n, x, t) = map(int, input().split())\n\tprint(max(0, n - (t - x) // x - 1))\n \n \nfor _ in range"
        ]
    },
    {
        "task_id": 9,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: You have $n$ distinct points $(x_1, y_1),\\ldots,(x_n,y_n)$ on the plane and a non-negative integer parameter $k$. Each point is a microscopic steel ball and $k$ is the attract power of a ball when it's charged. The attract power is the same for all balls.\n\nIn one operation, you can select a ball $i$ to charge it. Once charged, all balls with Manhattan distance at most $k$ from ball $i$ move to the position of ball $i$. Many balls may have the same coordinate after an operation.\n\nMore formally, for all balls $j$ such that $|x_i - x_j| + |y_i - y_j| \\le k$, we assign $x_j:=x_i$ and $y_j:=y_i$.\n\nAn example of an operation. After charging the ball in the center, two other balls move to its position. On the right side, the red dot in the center is the common position of those balls.\n\nYour task is to find the minimum number of operations to move all balls to the same position, or report that this is impossible.\n\n\n-----Input-----\n\nThe first line contains a single integer $t$ ($1 \\le t \\le 100$) \u2014 the number of test cases.\n\nThe first line of each test case contains two integers $n$, $k$ ($2 \\le n \\le 100$, $0 \\le k \\le 10^6$) \u2014 the number of balls and the attract power of all balls, respectively.\n\nThe following $n$ lines describe the balls' coordinates. The $i$-th of these lines contains two integers $x_i$, $y_i$ ($0 \\le x_i, y_i \\le 10^5$) \u2014 the coordinates of the $i$-th ball.\n\nIt is guaranteed that all points are distinct.\n\n\n-----Output-----\n\nFor each test case print a single integer \u2014 the minimum number of operations to move all balls to the same position, or $-1$ if it is impossible.\n\n\n-----Examples-----\n\nInput\n3\n3 2\n0 0\n3 3\n1 1\n3 3\n6 7\n8 8\n6 9\n4 1\n0 0\n0 1\n0 2\n0 3\nOutput\n-1\n1\n-1\n\n\n-----Note-----\n\nIn the first test case, there are three balls at $(0, 0)$, $(3, 3)$, and $(1, 1)$ and the attract power is $2$. It is possible to move two balls together with one operation, but not all three balls together with any number of operations.\n\nIn the second test case, there are three balls at $(6, 7)$, $(8, 8)$, and $(6, 9)$ and the attract power is $3$. If we charge any ball, the other two will move to the same position, so we only require one operation.\n\nIn the third test case, there are four balls at $(0, 0)$, $(0, 1)$, $(0, 2)$, and $(0, 3)$, and the attract power is $1$. We can show that it is impossible to move all balls to the same position with a sequence of operations. \n\n### Response:\n",
        "output": [
            "for s in [*open(0)][2::2]:\n\tk, *x = map(int, s.split())\n\tprint(min(map(len, (set(range(max(x) - k + 1, max(x) + k + 2)) & set(i for i in x if i + k >= max(x)) for x in zip(*[iter(x)] * 2)))) or -1)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\td = {}\n\tfor (x, y) in [map(int, i.split()) for i in s.split('\\n')[:-1]]:\n\t\td[(x, y)] = d.get((x, y), 0) + 1\n\tprint(min((v - 1 for v in d.values())) if d else -1)\n \n \nfor s in [*open(0)][2::2]:\n\td = {}\n\tfor (x, y) in [map(int, i.split()) for i in s.split('\\n')[:-1]]:\n\t\td[(x, y)] = d.get((x, y), 0) + 1\n\tprint(min((v - 1 for v in d.values())) if d else -1)\n \n \nfor s in [*open(0)][2::2]:\n\td = {}\n\tfor (x, y) in [map(int, i.split()) for i in s.split('\\n')[:-1]]:\n\t\td[(x, y)] = d.get((x, y), 0) + 1\n\tprint(min((v - 1 for v in d.values())) if d else -1)\n \n \nfor s in [*open(0)][2::2]:\n\td = {}\n\tfor (x, y) in [map(int, i.split()) for i in s.split('\\n')[:-1]]:\n\t\td[(x, y)] = d.get((x, y), 0) + 1\n\tprint(min((v - 1 for v in d.values())) if d else -1)\n \n \nfor s in [*open(0)][2::2]:\n\td = {}\n\tfor (x, y) in [map(int, i.split()) for i in s.split('\\n')[:-1]]:\n\t\td[(x, y)] = d.get((x, y), 0) + 1\n\tprint(min((v - 1 for v in d.values())) if d else -1)\n \n \nfor s in [*open(0)][2::2]:\n\td = {}\n\tfor (x, y) in [map(int, i.split()) for i in s.split('\\n')[:-1]]:\n\t\td[(x, y)] = d.get((x, y), 0) + 1\n\tprint(min((v - 1 for v in d.values())) if d else -1)\n \n \nfor s in [*open(0)][2::2]:\n\td = {}\n\tfor (x, y) in [map(int, i.split()) for i in s.split('\\n')[:-1]]:\n\t\td[(x, y)] = d.get((x, y), 0) + 1\n\tprint(min((v - 1 for v in d.values())) if d else -1)\n \n \nfor s in [*open(0)][2::2]:\n\td = {}\n\tfor (x, y) in [map(int, i.split()) for i in s.split('\\n')[:-1]]:\n\t\td[(x, y)] = d.get((x, y), 0) + 1\n\tprint(min((v - 1 for v",
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tx = y = r = 0\n\tfor (i, j) in zip(*[iter(a)] * 2):\n\t\tx += i\n\t\ty += j\n\t\tr += max(abs(i), abs(j))\n\tprint(r - (r < x or r < y))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tx = y = r = 0\n\tfor (i, j) in zip(*[iter(a)] * 2):\n\t\tx += i\n\t\ty += j\n\t\tr += max(abs(i), abs(j))\n\tprint(r - (r < x or r < y))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tx = y = r = 0\n\tfor (i, j) in zip(*[iter(a)] * 2):\n\t\tx += i\n\t\ty += j\n\t\tr += max(abs(i), abs(j))\n\tprint(r - (r < x or r < y))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tx = y = r = 0\n\tfor (i, j) in zip(*[iter(a)] * 2):\n\t\tx += i\n\t\ty += j\n\t\tr += max(abs(i), abs(j))\n\tprint(r - (r < x or r < y))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tx = y = r = 0\n\tfor (i, j) in zip(*[iter(a)] * 2):\n\t\tx += i\n\t\ty += j\n\t\tr += max(abs(i), abs(j))\n\tprint(r - (r < x or r < y))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tx = y = r = 0\n\tfor (i, j) in zip(*[iter(a)] * 2):\n\t\tx += i\n\t\ty += j\n\t\tr += max(abs(i), abs(j))\n\tprint(r - (r < x or r < y))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tx = y = r = 0\n\tfor (i, j) in zip(*[iter(a)] * 2):\n\t\tx += i\n\t\ty += j\n\t\tr += max(abs(i), abs(j))\n\tprint(r - (r < x or r < y))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tx = y = r = 0\n\tfor (i, j) in zip(*[iter(a)] * 2):\n\t\tx += i\n\t\ty += j\n\t\t",
            "for s in [*open(0)][2::2]:\n\t(n, k) = map(int, s.split())\n\ta = [*map(int, [*open(0)][2::2])]\n\tx = [i for (i, j) in a if i >= k]\n\ty = [j for (i, j) in a if j >= k]\n\tprint(-1 if x and y else n - 1)\n \n \nfor s in [*open(0)][2::2]:\n\t(n, k) = map(int, s.split())\n\ta = [*map(int, [*open(0)][2::2])]\n\tx = [i for (i, j) in a if i >= k]\n\ty = [j for (i, j) in a if j >= k]\n\tprint(-1 if x and y else n - 1)\n \n \nfor s in [*open(0)][2::2]:\n\t(n, k) = map(int, s.split())\n\ta = [*map(int, [*open(0)][2::2])]\n\tx = [i for (i, j) in a if i >= k]\n\ty = [j for (i, j) in a if j >= k]\n\tprint(-1 if x and y else n - 1)\n \n \nfor s in [*open(0)][2::2]:\n\t(n, k) = map(int, s.split())\n\ta = [*map(int, [*open(0)][2::2])]\n\tx = [i for (i, j) in a if i >= k]\n\ty = [j for (i, j) in a if j >= k]\n\tprint(-1 if x and y else n - 1)\n \n \nfor s in [*open(0)][2::2]:\n\t(n, k) = map(int, s.split())\n\ta = [*map(int, [*open(0)][2::2])]\n\tx = [i for (i, j) in a if i >= k]\n\ty = [j for (i, j) in a if j >= k]\n\tprint(-1 if x and y else n - 1)\n \n \nfor s in [*open(0)][2::2]:\n\t(n, k) = map(int, s.split())\n\ta = [*map(int, [*open(0)][2::2])]\n\tx = [i for (i, j) in a if i >= k]\n\ty = [j for (i, j) in a if j >= k]\n\tprint(-1 if x and y else n - 1)\n \n \nfor s in [*open(0)][2::2]:\n\t(n, k) = map(int, s.split())\n\ta = [*map(int, [*open(0)][2::2])]\n\tx = [i for (i, j) in a if i >= k]\n\ty = [j for (i, j) in a if j >= k]\n\tprint(-1 if x and y else n - 1)\n \n \nfor s in [*open(0)][2::2]:\n\t(n, k) = map(int, s.split())\n\ta = [*map(",
            "for _ in range(int(input())):\n\t(n, k) = map(int, input().split())\n\tA = []\n\tfor i in range(n):\n\t\tA.append(tuple(map(int, input().split())))\n\tA.sort()\n\tr = A[0][0] + k\n\tans = 0\n\tfor i in range(1, n):\n\t\tif A[i][0] <= r:\n\t\t\tans += 1\n\t\t\tr = A[i][0] + k\n\tprint(-1 if r < A[-1][0] else ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\t(n, k) = map(int, input().split())\n\ta = [tuple(map(int, input().split())) for _ in range(n)]\n\tres = -1\n\tfor (x, y) in a:\n\t\tcount = 0\n\t\tfor (i, j) in a:\n\t\t\tif abs(x - i) + abs(y - j) <= k:\n\t\t\t\tcount += 1\n\t\tif count == n:\n\t\t\tres = 1\n\t\t\tbreak\n\tprint(res)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\t(n, k) = map(int, input().split())\n\ta = [list(map(int, input().split())) for _ in range(n)]\n\ta.sort()\n\tb = [0] * n\n\tfor i in range(n):\n\t\tb[i] = a[i][1] - a[i][0]\n\tb.sort()\n\tans = n\n\tfor i in range(n):\n\t\tans = min(ans, b[i] + b[n - 1] - b[i])\n\tprint(ans if ans <= k else -1)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\t(n, k) = map(int, input().split())\n\ta = [tuple(map(int, input().split())) for i in range(n)]\n\tb = [(x + y) % 2 for (x, y) in a]\n\tb.sort()\n\tb = b[::2] + b[1::2]\n\tif len(set(b)) == 1:\n\t\tprint(-1)\n\telse:\n\t\tprint(n - 1)\n \n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n",
            "for s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint(min((i for i in a if i > a[0] + a[-1] - i)))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint(min((i for i in a if i > a[0] + a[-1] - i)) if a[0] < a[-1] else -1)\n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint(min((i for i in a if i > a[0] + a[-1] - i)) if a[0] < a[-1] else -1)\n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint(min((i for i in a if i > a[0] + a[-1] - i)) if a[0] < a[-1] else -1)\n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint(min((i for i in a if i > a[0] + a[-1] - i)) if a[0] < a[-1] else -1)\n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint(min((i for i in a if i > a[0] + a[-1] - i)) if a[0] < a[-1] else -1)\n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint(min((i for i in a if i > a[0] + a[-1] - i)) if a[0] < a[-1] else -1)\n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint(min((i for i in a if i > a[0] + a[-1] - i)) if a[0] < a[-1] else -1)\n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint(min((i for i in a if i > a[0] + a[-1] - i)) if a[0] < a[-1] else -1)\n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint(min((i for i in a if i > a[0] + a[-1] - i)) if a[0] < a[-1] else -1)\n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint(min((i for i in a if i > a[0] + a[-1] - i)) if a[0] < a[-1] else -1)\n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint",
            "R = lambda : map(int, input().split())\n(t,) = R()\nfor _ in [0] * t:\n\t(n, k) = R()\n\tX = []\n\tY = []\n\tfor i in range(n):\n\t\t(x, y) = R()\n\t\tX.append(x)\n\t\tY.append(y)\n\tX.sort()\n\tY.sort()\n\tA = []\n\tfor i in range(1, n):\n\t\tA.append(abs(X[i] - X[i - 1]))\n\tA.sort()\n\tB = []\n\tfor i in range(1, n):\n\t\tB.append(abs(Y[i] - Y[i - 1]))\n\tB.sort()\n\tif n == 2:\n\t\tprint(-1)\n\telif k < min(A):\n\t\tprint(-1)\n\telif k < min(B):\n\t\tprint(-1)\n\telse:\n\t\tprint(1)\n \n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n ",
            "for _ in range(int(input())):\n\t(n, k) = map(int, input().split())\n\tx = []\n\ty = []\n\tfor i in range(n):\n\t\t(a, b) = map(int, input().split())\n\t\tx.append(a)\n\t\ty.append(b)\n\tx.sort()\n\ty.sort()\n\tfor i in range(n):\n\t\tif x[i] - x[0] > k:\n\t\t\tx[i] = x[0]\n\t\tif y[i] - y[0] > k:\n\t\t\ty[i] = y[0]\n\tprint(-1 if x.count(x[0]) != n or y.count(y[0]) != n else 1)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\ta = sorted((*map(int, x.split()),) for x in s.split()[1:])\n\tprint(max(x for x, y in a) - min(x for x, y in a) + 1 - max(y for x, y in a) + min(y for x, y in a))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted((*map(int, x.split()),) for x in s.split()[1:])\n\tprint(max(x for x, y in a) - min(x for x, y in a) + 1 - max(y for x, y in a) + min(y for x, y in a))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted((*map(int, x.split()),) for x in s.split()[1:])\n\tprint(max(x for x, y in a) - min(x for x, y in a) + 1 - max(y for x, y in a) + min(y for x, y in a))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted((*map(int, x.split()),) for x in s.split()[1:])\n\tprint(max(x for x, y in a) - min(x for x, y in a) + 1 - max(y for x, y in a) + min(y for x, y in a))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted((*map(int, x.split()),) for x in s.split()[1:])\n\tprint(max(x for x, y in a) - min(x for x, y in a) + 1 - max(y for x, y in a) + min(y for x, y in a))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted((*map(int, x.split()),) for x in s.split()[1:])\n\tprint(max(x for x, y in a) - min(x for x, y in a) + 1 - max(y for x, y in a) + min(y for x, y in a))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted((*map(int, x.split()),) for x in s.split()[1:])\n\tprint(max(x for x, y in a) - min(x for x, y in a) + 1 - max(y for x, y in a) + min(y for x, y in a))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted((*map(int, x.split()),) for x in s.split()[1:])\n\tprint(max(x for x, y in a) - min(x for x, y in a) + 1 - max(y for x, y in a) + min(y for x, y in a))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted((*map(int, x.split()),) for x in s.split()[1:",
            "I = input\nfor _ in [0] * int(I()):\n\tn, k = map(int, I().split())\n\tl = [tuple(map(int, I().split())) for i in [0] * n]\n\tl.sort()\n\td = [0] * n\n\tfor i in range(n):\n\t\tfor j in range(i):\n\t\t\tif l[i][0] - l[j][0] <= k:\n\t\t\t\td[i] += 1\n\t\t\t\td[j] -= 1\n\t\tfor j in range(i + 1, n):\n\t\t\tif l[j][0] - l[i][0] <= k:\n\t\t\t\td[j] += 1\n\t\t\t\td[i] -= 1\n\tprint(sum((x for x in d if x > 0)))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tx = y = 0\n\tfor i in range(1, len(a), 2):\n\t\t(x, y) = (x + a[i], y + a[i + 1])\n\tprint(max(0, round(((x ** 2 + y ** 2) ** 0.5) / (2 * a[0]))) if a[0] else -1)\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tx = y = 0\n\tfor i in range(1, len(a), 2):\n\t\t(x, y) = (x + a[i], y + a[i + 1])\n\tprint(max(0, round(((x ** 2 + y ** 2) ** 0.5) / (2 * a[0]))) if a[0] else -1)\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tx = y = 0\n\tfor i in range(1, len(a), 2):\n\t\t(x, y) = (x + a[i], y + a[i + 1])\n\tprint(max(0, round(((x ** 2 + y ** 2) ** 0.5) / (2 * a[0]))) if a[0] else -1)\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tx = y = 0\n\tfor i in range(1, len(a), 2):\n\t\t(x, y) = (x + a[i], y + a[i + 1])\n\tprint(max(0, round(((x ** 2 + y ** 2) ** 0.5) / (2 * a[0]))) if a[0] else -1)\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tx = y = 0\n\tfor i in range(1, len(a), 2):\n\t\t(x, y) = (x + a[i], y + a[i + 1])\n\tprint(max(0, round(((x ** 2 + y ** 2) ** 0.5) / (2 * a[0]))) if a[0] else -1)\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tx = y = 0\n\tfor i in range(1, len(a), 2):\n\t\t(x, y) = (x + a[i], y + a[i + 1])\n\tprint(max(0, round(((x ** 2 + y ** 2) ** 0.5) / (2 * a[0]))) if a[0] else -1)\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tx = y = 0\n\tfor i in range(1, len(a), 2):\n\t\t(x,",
            "for s in [*open(0)][2::2]:\n\tx = [*map(int, s.split())]\n\ti = x.index(min(x))\n\tprint(sum(abs(x[i] - x[j]) for j in range(len(x))) // 2)\n \n \nfor s in [*open(0)][2::2]:\n\tx = [*map(int, s.split())]\n\ti = x.index(min(x))\n\tprint(sum(abs(x[i] - x[j]) for j in range(len(x))) // 2)\n \n \nfor s in [*open(0)][2::2]:\n\tx = [*map(int, s.split())]\n\ti = x.index(min(x))\n\tprint(sum(abs(x[i] - x[j]) for j in range(len(x))) // 2)\n \n \nfor s in [*open(0)][2::2]:\n\tx = [*map(int, s.split())]\n\ti = x.index(min(x))\n\tprint(sum(abs(x[i] - x[j]) for j in range(len(x))) // 2)\n \n \nfor s in [*open(0)][2::2]:\n\tx = [*map(int, s.split())]\n\ti = x.index(min(x))\n\tprint(sum(abs(x[i] - x[j]) for j in range(len(x))) // 2)\n \n \nfor s in [*open(0)][2::2]:\n\tx = [*map(int, s.split())]\n\ti = x.index(min(x))\n\tprint(sum(abs(x[i] - x[j]) for j in range(len(x))) // 2)\n \n \nfor s in [*open(0)][2::2]:\n\tx = [*map(int, s.split())]\n\ti = x.index(min(x))\n\tprint(sum(abs(x[i] - x[j]) for j in range(len(x))) // 2)\n \n \nfor s in [*open(0)][2::2]:\n\tx = [*map(int, s.split())]\n\ti = x.index(min(x))\n\tprint(sum(abs(x[i] - x[j]) for j in range(len(x))) // 2)\n \n \nfor s in [*open(0)][2::2]:\n\tx = [*map(int, s.split())]\n\ti = x.index(min(x))\n\tprint(sum(abs(x[i] - x[j]) for j in range(len(x))) // 2)\n \n \nfor s in [*open(0)][2::2]:\n\tx = [*map(int, s.split())]\n\ti = x.index(min(x))\n\tprint(sum(abs(x[i] - x[j]) for j in range(len(x))) // 2)\n \n \nfor s in [*open(0)][2::2]:\n\tx = [*map(int, s.split())]\n\ti = x.index(min(x",
            "for s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint(a[0] - a[-1] - (a[0] == a[-1]) or -1)\n \n\nimport sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n\tn, k = map(int, input().split())\n\ta = sorted((tuple(map(int, input().split())) for _ in range(n)))\n\tans = min(abs(a[i][0] - a[-i - 1][0]) + abs(a[i][1] - a[-i - 1][1]) for i in range(n // 2))\n\tprint(ans if ans <= k else -1)\n \n\nimport sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n\t(n, k) = map(int, input().split())\n\ta = sorted((tuple(map(int, input().split())) for _ in range(n)))\n\tans = min(abs(a[i][0] - a[-i - 1][0]) + abs(a[i][1] - a[-i - 1][1]) for i in range(n // 2))\n\tprint(ans if ans <= k else -1)\n \n\nimport sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n\t(n, k) = map(int, input().split())\n\ta = sorted((tuple(map(int, input().split())) for _ in range(n)))\n\tans = min(abs(a[i][0] - a[-i - 1][0]) + abs(a[i][1] - a[-i - 1][1]) for i in range(n // 2))\n\tprint(ans if ans <= k else -1)\n \n\nimport sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n\t(n, k) = map(int, input().split())\n\ta = sorted((tuple(map(int, input().split())) for _ in range(n)))\n\tans = min(abs(a[i][0] - a[-i - 1][0]) + abs(a[i][1] - a[-i - 1][1]) for i in range(n // 2))\n\tprint(ans if ans <= k else -1)\n \n\nimport sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n\t(n, k) = map(int, input().split())\n\ta = sorted((tuple(map(int, input().split())) for _ in range(n)))\n\tans = min(abs(a[i][0] - a[-i - 1][0]) + abs(a[i][1] - a[-i - 1][1]) for i in range(n // 2))\n\tprint(ans if ans <= k else -1)\n \n\nimport sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n\t(n, k) = map(int, input().split())\n\ta = sorted((tuple(map(int, input().split())) for _ in range(n)))\n\tans = min(abs(a[i][0]",
            "for s in [*open(0)][2::2]:\n\tprint(max((*map(int, s.split()), 1)) - 1)\n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint(a[0] - a[1] or -1)\n \n \nfor s in [*open(0)][2::2]:\n\tprint(eval(s) // 3)\n \n \nfor s in [*open(0)][2::2]:\n\tprint(eval(s) // 4)\n \n \nfor s in [*open(0)][2::2]:\n\tprint(eval(s) // 5)\n \n \nfor s in [*open(0)][2::2]:\n\tprint(eval(s) // 6)\n \n \nfor s in [*open(0)][2::2]:\n\tprint(eval(s) // 7)\n \n \nfor s in [*open(0)][2::2]:\n\tprint(eval(s) // 8)\n \n \nfor s in [*open(0)][2::2]:\n\tprint(eval(s) // 9)\n \n \nfor s in [*open(0)][2::2]:\n\tprint(eval(s) // 10)\n \n \nfor s in [*open(0)][2::2]:\n\tprint(eval(s) // 11)\n \n \nfor s in [*open(0)][2::2]:\n\tprint(eval(s) // 12)\n \n \nfor s in [*open(0)][2::2]:\n\tprint(eval(s) // 13)\n \n \nfor s in [*open(0)][2::2]:\n\tprint(eval(s) // 14)\n \n \nfor s in [*open(0)][2::2]:\n\tprint(eval(s) // 15)\n \n \nfor s in [*open(0)][2::2]:\n\tprint(eval(s) // 16)\n \n \nfor s in [*open(0)][2::2]:\n\tprint(eval(s) // 17)\n \n \nfor s in [*open(0)][2::2]:\n\tprint(eval(s) // 18)\n \n \nfor s in [*open(0)][2::2]:\n\tprint(eval(s) // 19)\n \n \nfor s in [*open(0)][2::2]:\n\tprint(eval(s) // 20)\n \n \nfor s in [*open(0)][2::2]:\n\tprint(eval(s) // 21)\n \n \nfor s in [*open(0)][2::2]:\n\tprint(eval(s) // 22)\n \n \nfor s in [*open(0)][2::2]:\n\tprint(eval(s) // 23)\n \n \nfor s in [*open(0)][2::2]:\n\tprint(eval(s) // 24)\n \n \nfor s in [*open(0)][2::2]:\n\tprint(eval(s) // 25)\n \n \nfor s in [*open(0)][2::2]:\n\tprint(eval(s",
            "for s in [*open(0)][2::2]:\n\tx = sorted((*map(int, s.split()),))\n\tprint(min(sum(abs(a - b) for (a, b) in zip(x, x[len(x) // 2:])) for _ in [0] * (len(x) // 2)))\n \n \nfor s in [*open(0)][2::2]:\n\tx = sorted((*map(int, s.split()),))\n\tprint(min(sum(abs(a - b) for (a, b) in zip(x, x[len(x) // 2:])) for _ in [0] * (len(x) // 2)))\n \n \nfor s in [*open(0)][2::2]:\n\tx = sorted((*map(int, s.split()),))\n\tprint(min(sum(abs(a - b) for (a, b) in zip(x, x[len(x) // 2:])) for _ in [0] * (len(x) // 2)))\n \n \nfor s in [*open(0)][2::2]:\n\tx = sorted((*map(int, s.split()),))\n\tprint(min(sum(abs(a - b) for (a, b) in zip(x, x[len(x) // 2:])) for _ in [0] * (len(x) // 2)))\n \n \nfor s in [*open(0)][2::2]:\n\tx = sorted((*map(int, s.split()),))\n\tprint(min(sum(abs(a - b) for (a, b) in zip(x, x[len(x) // 2:])) for _ in [0] * (len(x) // 2)))\n \n \nfor s in [*open(0)][2::2]:\n\tx = sorted((*map(int, s.split()),))\n\tprint(min(sum(abs(a - b) for (a, b) in zip(x, x[len(x) // 2:])) for _ in [0] * (len(x) // 2)))\n \n \nfor s in [*open(0)][2::2]:\n\tx = sorted((*map(int, s.split()),))\n\tprint(min(sum(abs(a - b) for (a, b) in zip(x, x[len(x) // 2:])) for _ in [0] * (len(x) // 2)))\n \n \nfor s in [*open(0)][2::2]:\n\tx = sorted((*map(int, s.split()),))\n\tprint(min(sum(abs(a - b) for (a, b) in zip(x, x[len(x) // 2:])) for _ in [0] * (len(x) // 2)))\n \n \nfor s in [*open(0)][2::2]:\n\tx = sorted((*map(int, s.split()),))\n\tprint(min(sum(abs(a - b) for (a, b) in zip(x, x[len(x) // 2:])) for _ in [0] * (len(x) // 2)))\n \n \nfor s in [*open(0)][2::2]:\n\tx",
            "for _ in range(int(input())):\n\t(n, k) = map(int, input().split())\n\tl = [tuple(map(int, input().split())) for i in range(n)]\n\tr = 0\n\tfor (x1, y1) in l:\n\t\tfor (x2, y2) in l:\n\t\t\tif abs(x1 - x2) + abs(y1 - y2) <= k:\n\t\t\t\tr += 1\n\tif r < n * n:\n\t\tprint(-1)\n\telse:\n\t\tprint(n - 1)\n \n \nfor _ in range(int(input())):\n\t(n, k) = map(int, input().split())\n\tl = [tuple(map(int, input().split())) for i in range(n)]\n\tr = 0\n\tfor (x1, y1) in l:\n\t\tfor (x2, y2) in l:\n\t\t\tif abs(x1 - x2) + abs(y1 - y2) <= k:\n\t\t\t\tr += 1\n\tif r < n * n:\n\t\tprint(-1)\n\telse:\n\t\tprint(n - 1)\n \n \nfor _ in range(int(input())):\n\t(n, k) = map(int, input().split())\n\tl = [tuple(map(int, input().split())) for i in range(n)]\n\tr = 0\n\tfor (x1, y1) in l:\n\t\tfor (x2, y2) in l:\n\t\t\tif abs(x1 - x2) + abs(y1 - y2) <= k:\n\t\t\t\tr += 1\n\tif r < n * n:\n\t\tprint(-1)\n\telse:\n\t\tprint(n - 1)\n \n \nfor _ in range(int(input())):\n\t(n, k) = map(int, input().split())\n\tl = [tuple(map(int, input().split())) for i in range(n)]\n\tr = 0\n\tfor (x1, y1) in l:\n\t\tfor (x2, y2) in l:\n\t\t\tif abs(x1 - x2) + abs(y1 - y2) <= k:\n\t\t\t\tr += 1\n\tif r < n * n:\n\t\tprint(-1)\n\telse:\n\t\tprint(n - 1)\n \n \nfor _ in range(int(input())):\n\t(n, k) = map(int, input().split())\n\tl = [tuple(map(int, input().split())) for i in range(n)]\n\tr = 0\n\tfor (x1, y1) in l:\n\t\tfor (x2, y2) in l:\n\t\t\tif abs(x1 - x2) + abs(y1 - y2) <= k:\n\t\t\t\tr += 1\n\tif r < n * n:\n\t\tprint(-1)\n\telse:\n\t\tprint(n - 1)\n \n \nfor _ in range(int(input())):\n\t(n, k) = map(int, input().split())\n\tl = [tuple(map(int, input().split())) for i in range(n)]\n\tr = 0\n\tfor (x1, y1) in l:\n\t\tfor (x2, y2) in l:\n\t\t\tif abs(x1 - x2) + abs(y1 - y2) <= k"
        ]
    },
    {
        "task_id": 10,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: Recently you have received two positive integer numbers $x$ and $y$. You forgot them, but you remembered a shuffled list containing all divisors of $x$ (including $1$ and $x$) and all divisors of $y$ (including $1$ and $y$). If $d$ is a divisor of both numbers $x$ and $y$ at the same time, there are two occurrences of $d$ in the list.\n\nFor example, if $x=4$ and $y=6$ then the given list can be any permutation of the list $[1, 2, 4, 1, 2, 3, 6]$. Some of the possible lists are: $[1, 1, 2, 4, 6, 3, 2]$, $[4, 6, 1, 1, 2, 3, 2]$ or $[1, 6, 3, 2, 4, 1, 2]$.\n\nYour problem is to restore suitable positive integer numbers $x$ and $y$ that would yield the same list of divisors (possibly in different order).\n\nIt is guaranteed that the answer exists, i.e. the given list of divisors corresponds to some positive integers $x$ and $y$.\n\n\n-----Input-----\n\nThe first line contains one integer $n$ ($2 \\le n \\le 128$) \u2014 the number of divisors of $x$ and $y$.\n\nThe second line of the input contains $n$ integers $d_1, d_2, \\dots, d_n$ ($1 \\le d_i \\le 10^4$), where $d_i$ is either divisor of $x$ or divisor of $y$. If a number is divisor of both numbers $x$ and $y$ then there are two copies of this number in the list.\n\n\n-----Output-----\n\nPrint two positive integer numbers $x$ and $y$ \u2014 such numbers that merged list of their divisors is the permutation of the given list of integers. It is guaranteed that the answer exists.\n\n\n-----Example-----\nInput\n10\n10 2 8 1 2 4 1 20 4 5\n\nOutput\n20 8 \n\n### Response:\n",
        "output": [
            "n = int(input())\na = list(map(int, input().split()))\na.sort()\nb = []\nfor i in range(n - 1):\n\tif a[i] == a[i + 1]:\n\t\tb.append(a[i])\n\t\ta[i] = -1\n\t\ta[i + 1] = -1\na = [x for x in a if x != -1]\nprint(b[0], a[0])\n \n \ninput = __builtin_input\nprint = __builtin_print\n \ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tb = []\n\tfor i in range(n - 1):\n\t\tif a[i] == a[i + 1]:\n\t\t\tb.append(a[i])\n\t\t\ta[i] = -1\n\t\t\ta[i + 1] = -1\n\ta = [x for x in a if x != -1]\n\tprint(b[0], a[0])\n \nmain()\n \n__ = int(input())\n \nfor _ in range(__):\n\tmain()\n \n \n__ = int(input())\n \nfor _ in range(__):\n\tmain()\n \n \n__ = int(input())\n \nfor _ in range(__):\n\tmain()\n \n \n__ = int(input())\n \nfor _ in range(__):\n\tmain()\n \n \n__ = int(input())\n \nfor _ in range(__):\n\tmain()\n \n \n__ = int(input())\n \nfor _ in range(__):\n\tmain()\n \n \n__ = int(input())\n \nfor _ in range(__):\n\tmain()\n \n \n__ = int(input())\n \nfor _ in range(__):\n\tmain()\n \n \n__ = int(input())\n \nfor _ in range(__):\n\tmain()\n \n \n__ = int(input())\n \nfor _ in range(__):\n\tmain()\n \n \n__ = int(input())\n \nfor _ in range(__):\n\tmain()\n \n \n__ = int(input())\n \nfor _ in range(__):\n\tmain()\n \n \n__ = int(input())\n \nfor _ in range(__):\n\tmain()\n \n \n__ = int(input())\n \nfor _ in range(__):\n\tmain()\n \n \n__ = int(input())\n \nfor _ in range(__):\n\tmain()\n \n \n__ = int(input())\n \nfor _ in range(__):\n\tmain()\n \n \n__ = int(input())\n \nfor _ in range(__):\n\tmain()\n \n \n__ = int(input())\n \nfor _ in range(__):\n\tmain()\n \n \n__ = int(input())\n \nfor _ in range(__):\n\tmain()\n \n \n__ = int(input())\n \nfor _ in range(__):\n\tmain()\n \n \n__ = int(input())\n \nfor _ in range(__):\n\tmain()\n \n \n__ = int(input())\n \nfor _ in range(__):\n\tmain()\n \n \n__ = int(input())",
            "n = int(input())\nd = sorted(map(int, input().split()))\n\ndef f(d):\n\ti = 0\n\tj = len(d) - 1\n\twhile i < j:\n\t\tif d[i] == d[j]:\n\t\t\ti += 1\n\t\t\tj -= 1\n\t\telse:\n\t\t\treturn False\n\treturn True\n\n\ndef g(d):\n\ti = 0\n\tj = len(d) - 1\n\twhile i < j:\n\t\tif d[i] == d[j]:\n\t\t\ti += 1\n\t\t\tj -= 1\n\t\telse:\n\t\t\treturn d[i], d[j]\n\n\nif n % 2 == 0:\n\tif f(d):\n\t\tprint(d[-1], d[0])\n\telse:\n\t\tprint(-1)\nelse:\n\tprint(*g(d))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "n = int(input())\nd = list(map(int, input().split()))\nd.sort()\np = [d[i] for i in range(n) if i % 2 == 0]\nq = [d[i] for i in range(n) if i % 2 == 1]\np.sort()\nq.sort()\nfor i in range(n // 2):\n\tprint(p[i], q[i], sep=' ', end=' ')\nprint(p[n // 2] if n % 2 == 0 else q[n // 2])\n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "n = int(input())\nl = list(map(int, input().split()))\nl.sort()\n\n\ndef gcd(a, b):\n\treturn a if b == 0 else gcd(b, a % b)\n\n\ndef lcm(a, b):\n\treturn a * b // gcd(a, b)\n\n\ndef solve(x, y):\n\tans = []\n\tfor i in range(1, n // 2 + 1):\n\t\tans.append(x // i)\n\t\tans.append(y // i)\n\tif n % 2 == 1:\n\t\tans.append(x // (n // 2 + 1))\n\t\tans.append(y // (n // 2 + 1))\n\tans.sort()\n\treturn ans\n\n\nfor i in range(n):\n\tfor j in range(i):\n\t\tif l[i] % l[j] == 0:\n\t\t\tx = l[i]\n\t\t\ty = lcm(l[i] // x, l[j])\n\t\t\tif l == solve(x, y):\n\t\t\t\tprint(x, y)\n\t\t\t\treturn\n\t\t\tx = l[j]\n\t\t\ty = lcm(l[i] // x, l[j])\n\t\t\tif l == solve(x, y):\n\t\t\t\tprint(x, y)\n\t\t\t\treturn\n\n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n ",
            "n = int(input())\nd = list(map(int, input().split()))\nd.sort()\nl = 0\nr = n - 1\nwhile l < r:\n\tif d[l] == d[r]:\n\t\tprint(d[l], d[r])\n\t\tbreak\n\tr -= 1\n\tl += 1\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "n = int(input())\nl = sorted([int(i) for i in input().split()])\nm = []\nfor i in range(n):\n\tif i == 0 or l[i] != l[i - 1]:\n\t\tm.append(l[i])\nl = []\nfor i in range(len(m)):\n\tfor j in range(i):\n\t\tif m[i] % m[j] == 0:\n\t\t\tl.append(m[i])\n\t\t\tbreak\nprint(m[-1], end=' ')\nfor i in l:\n\tprint(i, end=' ')\nprint()\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "n = int(input())\na = sorted(map(int, input().split()))\nprint(*[a[i] * a[i + 1] for i in range(0, n, 2)])\n \n\n\n\n\n\n \n\n \n\n\n \n \n \n \n\n \n\n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n\n \n \n \n\n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n \n\n \n\n \n \n",
            "n = int(input())\na = sorted(list(map(int, input().split())))\nb = []\ni = 0\nwhile i < n:\n\tif i + 1 < n and a[i] == a[i + 1]:\n\t\tb += [a[i]]\n\t\ti += 2\n\telse:\n\t\tb += [a[i]]\n\t\ti += 1\nd = []\nfor i in range(len(b)):\n\tfor j in range(i):\n\t\tif b[i] % b[j] == 0:\n\t\t\td += [b[j]]\nc = set(a) - set(d)\nc = sorted(list(c))\nprint(c[0], b[0])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "n = int(input())\ns = list(map(int, input().split()))\ns.sort()\nfor i in range(n):\n\tprint(s[i], end=' ')\nprint()\n \n \nfor i in range(n):\n\tprint(s[i], end=' ')\nprint()\n \n\ndef gcd(x, y):\n\twhile y:\n\t\t(x, y) = (y, x % y)\n\treturn x\n\n\ndef lcm(x, y):\n\treturn x * y // gcd(x, y)\n\n\ndef find(s, d):\n\tfor i in range(len(s)):\n\t\tif s[i] == d:\n\t\t\treturn i\n\n\ndef solve(s):\n\tn = len(s)\n\tres = [10 ** 18] * n\n\tfor i in range(n):\n\t\tfor j in range(i + 1, n):\n\t\t\tif gcd(s[i], s[j]) == 1:\n\t\t\t\tres[i] = min(res[i], lcm(s[i], s[j]))\n\t\t\t\tres[j] = min(res[j], lcm(s[i], s[j]))\n\tans = [10 ** 18] * n\n\tfor i in range(n):\n\t\tif res[i] != 10 ** 18:\n\t\t\tans[i] = s[i] // res[i]\n\tprint(*ans)\n\n\nsolve(s)\nsolve(s[::-1])\n \n\ndef main():\n\tn = int(input())\n\tl = list(map(int, input().split()))\n\tl.sort()\n\tres = []\n\twhile len(l) != 0:\n\t\tx = l[0]\n\t\tres.append(x)\n\t\tl.remove(x)\n\t\ty = l[0]\n\t\tres.append(y)\n\t\tl.remove(y)\n\tprint(' '.join(map(str, res)))\nmain()\n \n\ndef main():\n\tn = int(input())\n\tl = list(map(int, input().split()))\n\tl.sort()\n\tres = []\n\twhile len(l) != 0:\n\t\tx = l[0]\n\t\tres.append(x)\n\t\tl.remove(x)\n\t\ty = l[0]\n\t\tres.append(y)\n\t\tl.remove(y)\n\tprint(' '.join(map(str, res)))\nmain()\n \n\ndef main():\n\tn = int(input())\n\tl = list(map(int, input().split()))\n\tl.sort()\n\tres = []\n\twhile len(l) != 0:\n\t\tx = l[0]\n\t\tres.append(x)\n\t\tl.remove(x)\n\t\ty = l[0]\n\t\tres.append(y)\n\t\tl.remove(y)\n\tprint(' '.join(map(str, res)))\nmain()\n \n\ndef main():\n\tn = int(input())\n\tl = list(map(int, input().split()))\n\tl.sort()\n\tres = []\n\twhile len(l) != 0:\n\t\tx = l[0]\n\t\tres.append(x)\n",
            "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(1, 20001):\n\tif i in a:\n\t\ta.remove(i)\n\t\tb.append(i)\n\t\tif len(a) == 0:\n\t\t\tbreak\n\t\tif i in a:\n\t\t\ta.remove(i)\n\t\t\tb.append(i)\n\t\t\tif len(a) == 0:\n\t\t\t\tbreak\nprint(b[0], b[1])\n \n \nfor i in range(len(b) // 2):\n\tprint(b[i], b[-i - 1])\n \nprint(b[len(b) // 2], b[-len(b) // 2 - 1])\n \nfor i in range(len(b) // 2 + 1, len(b)):\n\tprint(b[i], b[-i - 1])\n \n\n\n\n\n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n",
            "n = int(input())\nd = list(map(int, input().split()))\nd.sort()\ni = 0\nj = 0\nres = []\nwhile i < n // 2:\n\tres.append(d[i])\n\tres.append(d[n - i - 1])\n\ti += 1\nif n % 2 == 1:\n\tres.append(d[n // 2])\nprint(*res)\n \n\n\n\n\n\n\n\n \n\n\n\n\n \n \n \n \n \n \n \n \n \n\n\n\n\n \n \n \n \n \n \n\n\n\n\n \n \n \n \n\n\n\n \n \n \n \n\n\n\n \n \n \n \n \n \n \n \n \n \n\n\n\n\n \n \n \n \n \n \n \n \n\n\n\n\n \n \n \n \n \n \n \n \n \n \n\n\n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "n = int(input())\nd = list(map(int, input().split()))\nd.sort()\na = []\nb = []\nfor i in d:\n\tif i in a:\n\t\ta.remove(i)\n\t\tb.append(i)\n\telse:\n\t\ta.append(i)\nprint(*a, *b)\n \n\n\n\n\n\n \n\n\n\n\n \n\n\n\n \n\n \n\n\n \n \n \n\n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n ",
            "n = int(input())\nl = sorted(map(int, input().split()))\nprint(l[0], l[1])\n \nfor i in range(2, n):\n\tif l[i] != l[i - 1]:\n\t\tprint(l[i], l[i])\n \nprint(l[-1], l[0])\n \nfor i in range(n - 3, -1, -1):\n\tif l[i] != l[i + 1]:\n\t\tprint(l[i], l[i])\n \nprint(l[1], l[-1])\n \nfor i in range(2, n - 1):\n\tif l[i] != l[i + 1]:\n\t\tprint(l[i], l[i])\n \nprint(l[0], l[-1])\n \nfor i in range(n - 3, 0, -1):\n\tif l[i] != l[i + 1]:\n\t\tprint(l[i], l[i])\n \nprint(l[-1], l[1])\n \nfor i in range(2, n - 1):\n\tif l[i] != l[i - 1]:\n\t\tprint(l[i], l[i])\n \nprint(l[0], l[-1])\n \nfor i in range(n - 3, 0, -1):\n\tif l[i] != l[i - 1]:\n\t\tprint(l[i], l[i])\n \nprint(l[-1], l[0])\n \nfor i in range(2, n - 1):\n\tif l[i] != l[i - 1]:\n\t\tprint(l[i], l[i])\n \nprint(l[1], l[-1])\n \nfor i in range(n - 3, 0, -1):\n\tif l[i] != l[i - 1]:\n\t\tprint(l[i], l[i])\n \nprint(l[-1], l[0])\n \nfor i in range(2, n - 1):\n\tif l[i] != l[i - 1]:\n\t\tprint(l[i], l[i])\n \nprint(l[0], l[-1])\n \nfor i in range(n - 3, 0, -1):\n\tif l[i] != l[i - 1]:\n\t\tprint(l[i], l[i])\n \nprint(l[-1], l[1])\n \nfor i in range(2, n - 1):\n\tif l[i] != l[i - 1]:\n\t\tprint(l[i], l[i])\n \nprint(l[0], l[-1])\n \nfor i in range(n - 3, 0, -1):\n\tif l[i] != l[i - 1]:\n\t\tprint(l[i], l[i])\n \nprint(l[-1], l[0])\n \nfor i in range(2, n - 1):\n\tif l[i] != l[i - 1]:\n\t\tprint(l[i], l[i])\n \nprint(l[1], l[-1])\n \nfor i in range(n - 3, 0, -1):\n\tif l[i",
            "n = int(input())\nl = sorted(list(map(int, input().split())))\nfor i in l:\n\tif i * 2 in l:\n\t\tprint(i, i)\n\t\tbreak\n \n \nl = []\nfor i in range(n):\n\ta = int(input())\n\tl.append(a)\nl.sort()\nif l[0] * 2 == l[1]:\n\tprint(l[0], l[0])\nelse:\n\tprint(l[-1], l[-1])\n \n \nn = int(input())\na = list(map(int, input().split()))\na.sort()\n(l, r) = (0, n - 1)\nwhile l < r:\n\tif a[l] * 2 == a[l + 1]:\n\t\tprint(a[l], a[l])\n\t\tbreak\n\tl += 1\n \nn = int(input())\na = sorted(list(map(int, input().split())))\nif a[0] * 2 == a[1]:\n\tprint(a[0], a[0])\nelse:\n\tprint(a[-1], a[-1])\n \nn = int(input())\na = sorted(list(map(int, input().split())))\nif a[0] * 2 == a[1]:\n\tprint(a[0], a[0])\nelse:\n\tprint(a[-1], a[-1])\n \n \nn = int(input())\na = list(map(int, input().split()))\na.sort()\nif a[0] * 2 == a[1]:\n\tprint(a[0], a[0])\nelse:\n\tprint(a[-1], a[-1])\n \nn = int(input())\na = sorted(list(map(int, input().split())))\nif a[0] * 2 == a[1]:\n\tprint(a[0], a[0])\nelse:\n\tprint(a[-1], a[-1])\n \n \nn = int(input())\na = list(map(int, input().split()))\na.sort()\nif a[0] * 2 == a[1]:\n\tprint(a[0], a[0])\nelse:\n\tprint(a[-1], a[-1])\n \nn = int(input())\na = sorted(list(map(int, input().split())))\nif a[0] * 2 == a[1]:\n\tprint(a[0], a[0])\nelse:\n\tprint(a[-1], a[-1])\n \n \nn = int(input())\na = list(map(int, input().split()))\na.sort()\nif a[0] * 2 == a[1]:\n\tprint(a[0], a[0])\nelse:\n\tprint(a[-1], a[-1])\n \nn = int(input())\na = sorted(list(map(int, input().split())))\nif a[0] * 2 == a[1]:\n\tprint(a[0], a[0])\nelse:\n\tprint(a[-1], a[-1])\n \n \nn = int(input())\na = list(map(int, input().split()))\na.sort()\nif a[0] * 2 == a[1]:\n\tprint",
            "n = int(input())\na = list(map(int, input().split()))\na.sort()\nfor i in range(1, 10001):\n\tif i * i > a[-1]:\n\t\tbreak\n\td = [i]\n\tfor j in a:\n\t\tif j % i == 0:\n\t\t\td.append(j)\n\td.sort()\n\tif d == a:\n\t\tprint(i, a[-1])\n\t\tbreak \n \n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__ = input\n \n__",
            "n = int(input())\na = list(map(int, input().split()))\na.sort()\ni = 0\nwhile i + 1 < n and a[i] == a[i + 1]:\n\ti += 2\nprint(a[i], a[i + 1])\n \n\n",
            "n = int(input())\nl = list(map(int, input().split()))\nl.sort()\nx = []\ny = []\nfor i in l:\n\tif i in x:\n\t\tx.remove(i)\n\telse:\n\t\ty.append(i)\nprint(y[0], y[1])\n \n \ninput = __builtin_input\nprint = __builtin_print\nexec = __builtin_exec\n \n \ndef main():\n\tn = int(input())\n\tl = list(map(int, input().split()))\n\tl.sort()\n\tx = []\n\ty = []\n\tfor i in l:\n\t\tif i in x:\n\t\t\tx.remove(i)\n\t\telse:\n\t\t\ty.append(i)\n\tprint(y[0], y[1])\nmain()\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec(main())\n \n \nexec",
            "n = int(input())\na = sorted(list(map(int, input().split())))\ni = 0\nj = 1\nwhile j < n:\n\tif a[i] * a[j] == a[i + 1]:\n\t\tprint(a[i], a[j])\n\t\tbreak\n\tj += 1\n\tif j == n:\n\t\ti += 1\n\t\tj = i + 1\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "n = int(input())\nd = [int(i) for i in input().split()]\nd.sort()\na = []\nb = []\nfor i in range(n):\n\tif i % 2:\n\t\tb.append(d[i])\n\telse:\n\t\ta.append(d[i])\nprint(a[-1], b[-1])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "n = int(input())\nl = sorted(map(int, input().split()))\nprint(l[0], l[n // 2])\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
        ]
    },
    {
        "task_id": 11,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: She is skilled in all kinds of magics, and is keen on inventing new one.\n\n\u2014Perfect Memento in Strict Sense\n\nPatchouli is making a magical talisman. She initially has $n$ magical tokens. Their magical power can be represented with positive integers $a_1, a_2, \\ldots, a_n$.\n\nPatchouli may perform the following two operations on the tokens.\n\nFusion: Patchouli chooses two tokens, removes them, and creates a new token with magical power equal to the sum of the two chosen tokens.\n\nReduction: Patchouli chooses a token with an even value of magical power $x$, removes it and creates a new token with magical power equal to $\\frac{x}{2}$.\n\nTokens are more effective when their magical powers are odd values. Please help Patchouli to find the minimum number of operations she needs to make magical powers of all tokens odd values.\n\n\n-----Input-----\n\nEach test contains multiple test cases.\n\nThe first line contains a single integer $t$ ($1 \\leq t \\leq 10^3$) \u2014 the number of test cases. The description of the test cases follows.\n\nFor each test case, the first line contains one integer $n$ ($1 \\leq n\\leq 2\\cdot 10^5$) \u2014 the initial number of tokens.\n\nThe second line contains $n$ intergers $a_1,a_2,\\ldots,a_n$ ($1 \\leq a_i \\leq 10^9$) \u2014 the initial magical power of the $n$ tokens.\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $2 \\cdot 10^5$.\n\n\n-----Output-----\n\nFor each test case, print a single integer \u2014 the minimum number of operations Patchouli needs to make all tokens have an odd value of magical power.\n\nIt can be shown that under such restrictions the required sequence of operations exists.\n\n\n-----Examples-----\n\nInput\n4\n2\n1 9\n3\n1 1 2\n3\n2 4 8\n3\n1049600 33792 1280\nOutput\n0\n1\n3\n10\n\n\n-----Note-----\n\nTest case 1:\n\n$a$ consists solely of odd numbers initially.\n\nTest case 2:\n\nChoose the tokens with magical power of $1$ and $2$ and perform Fusion. Now $a=[1,3]$, both are odd numbers.\n\nTest case 3:\n\nChoose the tokens with magical power of $2$ and $8$ and perform Fusion. Now $a=[4,10]$.\n\nChoose the token with magical power of $10$ and perform Reduction. Now $a=[4,5]$.\n\nChoose the tokens with magical power of $4$ and $5$ and perform Fusion. Now $a=[9]$, and $9$ is an odd number.\n\nIt can be shown that you can not make all the magical powers odd numbers in less than $3$ moves, so the answer is $3$. \n\n### Response:\n",
        "output": [
            "for s in [*open(0)][2::2]:\n\tprint(sum((int(x) & 1 for x in s.split())))\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n",
            "for s in [*open(0)][2::2]:\n\tprint(sum(map(lambda x: -1 & x, map(int, s.split()))))\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n ",
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum((i % 2 for i in a)) // 2)\n \n \ninput = __builtins__.open(0).readline\nprint(*map(lambda a: sum((i % 2 for i in a)) // 2, [*map(lambda s: [*map(int, s.split())], input()[2::2])]))\n \ninput = __builtins__.open(0).readline\nfor _ in range(int(input())):\n\tinput()\n\tprint(sum(map(lambda x: x % 2, map(int, input().split()))) // 2)\n \ninput = __builtins__.open(0).readline\nfor _ in [0] * int(input()):\n\tinput()\n\tprint(sum(map(lambda x: x % 2, map(int, input().split()))) // 2)\n \ninput = __builtins__.open(0).readline\nfor _ in range(int(input())):\n\tinput()\n\tprint(sum(x % 2 for x in map(int, input().split())) // 2)\n \ninput = __builtins__.open(0).readline\nfor _ in [0] * int(input()):\n\tinput()\n\tprint(sum(x % 2 for x in map(int, input().split())) // 2)\n \ninput = __builtins__.open(0).readline\nfor _ in range(int(input())):\n\tinput()\n\tprint(sum(x % 2 for x in map(int, input().split())) // 2)\n \ninput = __builtins__.open(0).readline\nfor _ in [0] * int(input()):\n\tinput()\n\tprint(sum(x % 2 for x in map(int, input().split())) // 2)\n \ninput = __builtins__.open(0).readline\nfor _ in range(int(input())):\n\tinput()\n\tprint(sum(x % 2 for x in map(int, input().split())) // 2)\n \ninput = __builtins__.open(0).readline\nfor _ in [0] * int(input()):\n\tinput()\n\tprint(sum(x % 2 for x in map(int, input().split())) // 2)\n \ninput = __builtins__.open(0).readline\nfor _ in range(int(input())):\n\tinput()\n\tprint(sum(x % 2 for x in map(int, input().split())) // 2)\n \ninput = __builtins__.open(0).readline\nfor _ in [0] * int(input()):\n\tinput()\n\tprint(sum(x % 2 for x in map(int, input().split())) // 2)\n \ninput = __builtins__.open(0).readline\nfor _ in range(int(input())):\n\tinput()\n\tprint(sum(x % 2 for x in map(int, input().split())) // 2)\n \ninput = __builtins__.open(0).readline\nfor _ in [0] * int(input()):\n\tinput()\n\tprint(sum(x % 2 for x in map(int, input",
            "for s in [*open(0)][2::2]:\n\ta = list(map(int, s.split()))\n\tr = sum((x % 2 for x in a))\n\tprint(r // 2 + r % 2)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tprint(sum((x % 2 for x in a)))\n \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tprint(sum((x & 1 for x in a)))\n \n \ninput = __builtin_input\n \n \ndef solve():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tprint(sum((x & 1 for x in a)))\n \n \ndef main():\n\texec(compile(input(), '<string>', 'exec'))\n \n \nmain()\n \n \nexec(compile(input(), '<string>', 'exec'))\n \n \ndef solve():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tprint(sum((x & 1 for x in a)))\n \n \ndef main():\n\texec(compile(input(), '<string>', 'exec'))\n \n \nmain()\n \n \nexec(compile(input(), '<string>', 'exec'))\n \n \ndef solve():\n\tn = int(input())\n\ta = list(map(intruction))\n \n \ndef main():\n\texec(compile(input(), '<string>', 'exec'))\n \n \nmain()\n \n \nexec(compile(input(), '<string>', 'exec'))\n \n \ndef solve():\n\tn = int(input())\n\ta = list(map(intruction))\n \n \ndef main():\n\texec(compile(input(), '<string>', 'exec'))\n \n \nmain()\n \n \nexec(compile(input(), '<string>', 'exec'))\n \n \ndef solve():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tprint(sum((x & 1 for x in a)))\n \n \ndef main():\n\texec(compile(input(), '<string>', 'exec'))\n \n \nmain()\n \n \nexec(compile(input(), '<string>', 'exec'))\n \n \ndef solve():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tprint(sum((x & 1 for x in a)))\n \n \ndef main():\n\texec(compile(input(), '<string>', 'exec'))\n \n \nmain()\n \n \nexec(compile(input(), '<string>', 'exec'))\n \n \ndef solve():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tprint(sum((x & 1 for x in a)))\n \n \ndef main():\n\texec(compile(input(), '<string>', 'exec'))\n \n \nmain()\n \n \nexec(compile(input(), '<string>', 'exec'))\n \n \ndef solve():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tprint(sum((x & 1 for x in a)))\n \n \ndef main():\n\texec(compile(input(), '<string>', 'exec'))\n \n \nmain()\n \n \nexec(compile(input(), '<string>', 'exec'))\n \n \ndef solve():\n\tn = int(input())\n",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tprint(sum((x & 1 for x in a)))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = sorted(map(int, input().split()))\n\tprint(sum((x % 2 for x in a)))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\tinput()\n\tprint(sum((x % 2 for x in map(int, input().split()))))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\tinput()\n\ta = list(map(int, input().split()))\n\tprint(sum((x % 2 for x in a)) - min((x % 2 for x in a)))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tans = 0\n\tfor i in range(n):\n\t\tif a[i] % 2 == 0:\n\t\t\tans += 1\n\tprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tprint(sum((i & 1 for i in a)))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "I = input\nfor _ in [0] * int(I()):\n\tn = int(I())\n\ta = sorted(map(int, I().split()))\n\tr = sum(a) % 2\n\tprint(sum((x % 2 for x in a)) + (r > 0))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(i & 1 for i in a) - (len(a) & 1))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tprint(sum((i % 2 for i in a)))\n \n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n",
            "for s in [*open(0)][2::2]:\n\ta = list(map(int, s.split()))\n\tprint(sum((x & 1 for x in a)))\n \n \nimport sys\ninput = sys.stdin.readline\n(t,) = map(int, input().split())\nwhile t:\n\tt -= 1\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tprint(sum((x & 1 for x in a)))\n \n \ninput = sys.stdin.readline\n(t,) = map(int, input().split())\nwhile t:\n\tt -= 1\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tprint(sum((x & 1 for x in a)))\n \n \nimport sys\ninput = sys.stdin.readline\n(t,) = map(int, input().split())\nwhile t:\n\tt -= 1\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tprint(sum((x & 1 for x in a)))\n \n \nimport sys\ninput = sys.stdin.readline\n(t,) = map(int, input().split())\nwhile t:\n\tt -= 1\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tprint(sum((x & 1 for x in a)))\n \n \nimport sys\ninput = sys.stdin.readline\n(t,) = map(int, input().split())\nwhile t:\n\tt -= 1\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tprint(sum((x & 1 for x in a)))\n \n \nimport sys\ninput = sys.stdin.readline\n(t,) = map(int, input().split())\nwhile t:\n\tt -= 1\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tprint(sum((x & 1 for x in a)))\n \n \nimport sys\ninput = sys.stdin.readline\n(t,) = map(int, input().split())\nwhile t:\n\tt -= 1\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tprint(sum((x & 1 for x in a)))\n \n \nimport sys\ninput = sys.stdin.readline\n(t,) = map(int, input().split())\nwhile t:\n\tt -= 1\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tprint(sum((x & 1 for x in a)))\n \n \nimport sys\ninput = sys.stdin.readline\n(t,) = map(int, input().split())\nwhile t:\n\tt -= 1\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tprint(sum((x & 1 for x in a)))\n \n \nimport sys\ninput = sys.stdin.readline\n(t,) = map(int, input().split())\nwhile t:\n\tt -= 1\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tprint(sum((x & 1 for x in a)))",
            "for s in [*open(0)][2::2]:\n\tprint(sum((x & 1 for x in map(int, s.split()))))\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n ",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tans = 0\n\tfor i in a:\n\t\tans += i % 2\n\tprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\ta = sorted((int(i) for i in s.split()))\n\tprint(sum((i & 1 for i in a)))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted((int(i) for i in s.split()))\n\tprint(sum((i & 1 for i in a)))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted((int(i) for i in s.split()))\n\tprint(sum((i & 1 for i in a)))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted((int(i) for i in s.split()))\n\tprint(sum((i & 1 for i in a)))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted((int(i) for i in s.split()))\n\tprint(sum((i & 1 for i in a)))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted((int(i) for i in s.split()))\n\tprint(sum((i & 1 for i in a)))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted((int(i) for i in s.split()))\n\tprint(sum((i & 1 for i in a)))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted((int(i) for i in s.split()))\n\tprint(sum((i & 1 for i in a)))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted((int(i) for i in s.split()))\n\tprint(sum((i & 1 for i in a)))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted((int(i) for i in s.split()))\n\tprint(sum((i & 1 for i in a)))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted((int(i) for i in s.split()))\n\tprint(sum((i & 1 for i in a)))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted((int(i) for i in s.split()))\n\tprint(sum((i & 1 for i in a)))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted((int(i) for i in s.split()))\n\tprint(sum((i & 1 for i in a)))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted((int(i) for i in s.split()))\n\tprint(sum((i & 1 for i in a)))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted((int(i) for i in s.split()))\n\tprint(sum((i & 1 for i in a)))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted((int(i) for i in s.split()))\n\tprint(",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tprint(sum((x & 1 for x in a)))\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tprint(sum((x & 1 for x in a)))\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tprint(sum((x & 1 for x in a)))\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tprint(sum((x & 1 for x in a)))\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tprint(sum((x & 1 for x in a)))\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tprint(sum((x & 1 for x in a)))\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tprint(sum((x & 1 for x in a)))\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tprint(sum((x & 1 for x in a)))\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tprint(sum((x & 1 for x in a)))\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tprint(sum((x & 1 for x in a)))\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tprint(sum((x & 1 for x in a)))\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tprint(sum((x & 1 for x in a)))\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tprint(sum((x & 1 for x in a)))\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tprint(sum((x & 1 for x in a)))\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tprint(sum((x & 1 for x in a)))\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\t"
        ]
    },
    {
        "task_id": 12,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: You are given an array $a$ consisting of $n$ positive integers. You can perform operations on it.\n\nIn one operation you can replace any element of the array $a_i$ with $\\lfloor \\frac{a_i}{2} \\rfloor$, that is, by an integer part of dividing $a_i$ by $2$ (rounding down).\n\nSee if you can apply the operation some number of times (possible $0$) to make the array $a$ become a permutation of numbers from $1$ to $n$ \u2014that is, so that it contains all numbers from $1$ to $n$, each exactly once.\n\nFor example, if $a = [1, 8, 25, 2]$, $n = 4$, then the answer is yes. You could do the following:\n\nReplace $8$ with $\\lfloor \\frac{8}{2} \\rfloor = 4$, then $a = [1, 4, 25, 2]$.\n\nReplace $25$ with $\\lfloor \\frac{25}{2} \\rfloor = 12$, then $a = [1, 4, 12, 2]$.\n\nReplace $12$ with $\\lfloor \\frac{12}{2} \\rfloor = 6$, then $a = [1, 4, 6, 2]$.\n\nReplace $6$ with $\\lfloor \\frac{6}{2} \\rfloor = 3$, then $a = [1, 4, 3, 2]$.\n\n\n-----Input-----\n\nThe first line of input data contains an integer $t$ ($1 \\le t \\le 10^4$) \u2014the number of test cases.\n\nEach test case contains exactly two lines. The first one contains an integer $n$ ($1 \\le n \\le 50$), the second one contains integers $a_1, a_2, \\dots, a_n$ ($1 \\le a_i \\le 10^9$).\n\n\n-----Output-----\n\nFor each test case, output on a separate line:\n\nYES if you can make the array $a$ become a permutation of numbers from $1$ to $n$,\n\nNO otherwise.\n\nYou can output YES and NO in any case (for example, strings yEs, yes, Yes and YES will be recognized as a positive response).\n\n\n-----Examples-----\n\nInput\n6\n4\n1 8 25 2\n2\n1 1\n9\n9 8 3 4 2 7 1 5 6\n3\n8 2 1\n4\n24 7 16 7\n5\n22 6 22 4 22\nOutput\nYES\nNO\nYES\nNO\nNO\nYES\n\n\n-----Note-----\n\nThe first test case is explained in the text of the problem statement.\n\nIn the second test case, it is not possible to get a permutation. \n\n### Response:\n",
        "output": [
            "for s in [*open(0)][2::2]:\n\tprint('YNEOS'[s.count('1') < s.count('2')::2])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::2]:\n\tprint('YNEOS'[{*map(int, s.split())}.issuperset(set(range(1, int(s.split()[0]) + 1)))::2])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint('YNEOS'[sum(i > 1 for i in a)::2])\n \n \nfor s in [*open(0)][2::2]:\n\tprint('YNEOS'[len({*map(int, s.split())}) - 1::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint('YNEOS'[min(a) < 1::2])\n \n \nfor s in [*open(0)][2::2]:\n\tprint('YNEOS'[min(map(int, s.split())) < 1::2])\n \n \nfor s in [*open(0)][2::2]:\n\tprint('YNEOS'[sum(i > 1 for i in map(int, s.split()))::2])\n \n \nfor s in [*open(0)][2::2]:\n\tprint('YNEOS'[min(map(int, s.split())) > 1::2])\n \n \nfor s in [*open(0)][2::2]:\n\tprint('YNEOS'[min(map(int, s.split())) == 1::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint('YNEOS'[min(a) > 1::2])\n \n \nfor s in [*open(0)][2::2]:\n\tprint('YNEOS'[sum(i > 1 for i in map(int, s.split())) > 1::2])\n \n \nfor s in [*open(0)][2::2]:\n\tprint('YNEOS'[min(map(int, s.split())) > 1::2])\n \n \nfor s in [*open(0)][2::2]:\n\tprint('YNEOS'[min(map(int, s.split())) == 1::2])\n \n \nfor s in [*open(0)][2::2]:\n\tprint('YNEOS'[min(map(int, s.split())) > 1::2])\n \n \nfor s in [*open(0)][2::2]:\n\tprint('YNEOS'[min(map(int, s.split())) == 1::2])\n \n \nfor s in [*open(0)][2::2]:\n\tprint('YNEOS'[min(map(int, s.split())) > 1::2])\n \n \nfor s in [*open(0)][2::2]:\n\tprint('YNEOS'[min(map(int, s.split())) == 1::2])\n \n \nfor s in [*open(0)][2::2]:\n\tprint('YNEOS'[min(map(int, s.split())) > 1::2])\n \n \nfor s in [*open(0)][2::2]:\n\tprint('YNEOS'[min(map(int, s.split())) == 1::2])\n \n \nfor s in [*open(0)][2::2]:\n\tprint('YNEOS'[min(",
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint('YNEOS'[any((x := i) not in a and a[x] > 1 or a[x] == a[a[x] - 1] for i in a)])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tif n == 1:\n\t\tprint('YES')\n\t\tcontinue\n\ta.sort()\n\tfor i in range(n - 1):\n\t\tif a[i] + 1 == a[i + 1]:\n\t\t\ta[i + 1] = a[i]\n\t\telif a[i] == a[i + 1]:\n\t\t\ta[i] = a[i] // 2\n\t\telse:\n\t\t\tprint('NO')\n\t\t\tcontinue\n\tprint('YES')\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\tprint('YNEOS'[{*map(int, s.split())}.pop() != len(s.split())::2])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\ti = 0\n\twhile i < n:\n\t\tif a[i] % 2 == 1:\n\t\t\ti += 1\n\t\t\tcontinue\n\t\tj = i\n\t\twhile j < n and a[j] % 2 == 0:\n\t\t\tj += 1\n\t\tif j == n:\n\t\t\tprint('YES')\n\t\t\tbreak\n\t\ta[i:j] = [x // 2 for x in a[i:j]]\n\t\ta.sort()\n\telse:\n\t\tprint('NO')\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = sorted(map(int, input().split()))\n\tprint('YES' if a == list(range(1, n + 1)) else 'NO')\n \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::2]:\n\tprint('YNEOS'[sorted(map(int, s.split()))[::-1] != list(range(1, int(s.split()[0]) + 1))::])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::2]:\n\tprint('YNEOS'[{*map(int, s.split())}.pop() != 1::2])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tprint('YNEOS'[a != list(range(1, n + 1))::2])\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tprint('YNEOS'[a != list(range(1, n + 1))::2])\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tprint('YNEOS'[a != list(range(1, n + 1))::2])\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tprint('YNEOS'[a != list(range(1, n + 1))::2])\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(intruction, input().split()))\n\ta.sort()\n\tprint('YNEOS'[a != list(range(1, n + 1))::2])\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tprint('YNEOS'[a != list(range(1, n + 1))::2])\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tprint('YNEOS'[a != list(range(1, n + 1))::2])\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tprint('YNEOS'[a != list(range(1, n + 1))::2])\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tprint('YNEOS'[a != list(range(1, n + 1))::2])\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tprint('YNEOS'[a != list(range(1, n + 1))::2])\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tprint('YNEOS'[a != list(range(1, n + 1))::2])\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tprint('YNEOS'[a != list",
            "for s in [*open(0)][2::2]:\n\ta = set(map(int, s.split()))\n\tprint('YNEOS'[len(a) != int(s.split()[0])::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = set(map(int, s.split()))\n\tprint('YNEOS'[len(a) != int(s.split()[0])::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = set(map(intruction, s.split()))\n\tprint('YNEOS'[len(a) != int(s.split()[0])::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = set(map(int, s.split()))\n\tprint('YNEOS'[len(a) != int(s.split()[0])::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = set(map(int, s.split()))\n\tprint('YNEOS'[len(a) != int(s.split()[0])::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = set(map(int, s.split()))\n\tprint('YNEOS'[len(a) != int(s.split()[0])::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = set(map(int, s.split()))\n\tprint('YNEOS'[len(a) != int(s.split()[0])::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = set(map(int, s.split()))\n\tprint('YNEOS'[len(a) != int(s.split()[0])::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = set(map(int, s.split()))\n\tprint('YNEOS'[len(a) != int(s.split()[0])::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = set(map(int, s.split()))\n\tprint('YNEOS'[len(a) != int(s.split()[0])::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = set(map(int, s.split()))\n\tprint('YNEOS'[len(a) != int(s.split()[0])::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = set(map(int, s.split()))\n\tprint('YNEOS'[len(a) != int(s.split()[0])::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = set(map(int, s.split()))\n\tprint('YNEOS'[len(a) != int(s.split()[0])::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = set",
            "I = input\nfor _ in [0] * int(I()):\n\tn = int(I())\n\ta = sorted(map(int, I().split()))\n\tprint('YNEOS'[a != list(range(1, n + 1))::2])\n \n \nfor _ in [0] * int(input()):\n\tn = int(input())\n\ta = sorted(map(int, input().split()))\n\tprint('YNEOS'[a != list(range(1, n + 1))::2])\n \nfor _ in [0] * int(I()):\n\tn = int(I())\n\ta = sorted(map(int, I().split()))\n\tprint('YNEOS'[a != list(range(1, n + 1))::2])\n \nfor _ in [0] * int(input()):\n\tn = int(input())\n\ta = sorted(map(int, input().split()))\n\tprint('YNEOS'[a != list(range(1, n + 1))::2])\n \nfor _ in [0] * int(I()):\n\tn = int(I())\n\ta = sorted(map(int, I().split()))\n\tprint('YNEOS'[a != list(range(1, n + 1))::2])\n \nfor _ in [0] * int(input()):\n\tn = int(input())\n\ta = sorted(map(int, input().split()))\n\tprint('YNEOS'[a != list(range(1, n + 1))::2])\n \nfor _ in [0] * int(I()):\n\tn = int(I())\n\ta = sorted(map(int, I().split()))\n\tprint('YNEOS'[a != list(range(1, n + 1))::2])\n \nfor _ in [0] * int(input()):\n\tn = int(input())\n\ta = sorted(map(int, input().split()))\n\tprint('YNEOS'[a != list(range(1, n + 1))::2])\n \nfor _ in [0] * int(I()):\n\tn = int(I())\n\ta = sorted(map(int, I().split()))\n\tprint('YNEOS'[a != list(range(1, n + 1))::2])\n \nfor _ in [0] * int(input()):\n\tn = int(input())\n\ta = sorted(map(int, input().split()))\n\tprint('YNEOS'[a != list(range(1, n + 1))::2])\n \nfor _ in [0] * int(I()):\n\tn = int(I())\n\ta = sorted(map(int, I().split()))\n\tprint('YNEOS'[a != list(range(1, n + 1))::2])\n \nfor _ in [0] * int(input()):\n\tn = int(input())\n\ta = sorted(map(int, input().split()))\n\tprint('YNEOS'[a != list(range(1, n + 1))::2])\n \nfor _ in [0] * int(I()):\n\tn = int(I())\n\ta = sorted(map(int, I().split()))\n\tprint('YNEOS'[a != list(range(",
            "for s in [*open(0)][2::2]:\n\tprint('YNEOS'[{*map(int, s.split())}.issuperset(range(1, int(s.split()[0]) + 1))::2])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::2]:\n\tprint('YNEOS'[any((x > i for (i, x) in enumerate([*map(int, s.split())], 1)))])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\ta = set(map(int, s.split()))\n\tprint('YNEOS'[a != set(range(1, max(a) + 1))::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = set(map(int, s.split()))\n\tprint('YNEOS'[a != set(range(1, max(a) + 1))::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = set(map(intruction, s.split()))\n\tprint('YNEOS'[a != set(range(1, max(a) + 1))::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = set(map(intruction, s.split()))\n\tprint('YNEOS'[a != set(range(1, max(a) + 1))::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = set(map(intruction, s.split()))\n\tprint('YNEOS'[a != set(range(1, max(a) + 1))::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = set(map(intruction, s.split()))\n\tprint('YNEOS'[a != set(range(1, max(a) + 1))::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = set(map(intruction, s.split()))\n\tprint('YNEOS'[a != set(range(1, max(a) + 1))::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = set(map(intruction, s.split()))\n\tprint('YNEOS'[a != set(range(1, max(a) + 1))::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = set(map(intruction, s.split()))\n\tprint('YNEOS'[a != set(range(1, max(a) + 1))::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = set(map(intruction, s.split()))\n\tprint('YNEOS'[a != set(range(1, max(a) + 1))::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = set(map(intruction, s.split()))\n\tprint('YNEOS'[a != set(range(1, max(a) + 1))::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = set(map(intruction, s.split()))\n\tprint('YNEOS'[a != set(range(1, max(a) + 1))::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = set(map(intruction, s.split()))\n\tprint('YNEOS'[a != set(range(1, max(a) + 1))::2])\n",
            "for s in [*open(0)][2::2]:\n\tprint(('YNEOS'[{*map(int, s.split())} != set(range(1, int(s.split()[0]) + 1))::2])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::2]:\n\tprint('YNEOS'[sum(map(int, s.split())) % 2::2])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::2]:\n\ta = sorted((int(x) for x in s.split()))\n\tprint('YNEOS'[a != list(range(1, a[-1] + 1))::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted((int(x) for x in s.split()))\n\tprint('YNEOS'[a != list(range(1, a[-1] + 1))::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted((int(x) for x in s.split()))\n\tprint('YNEOS'[a != list(range(1, a[-1] + 1))::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted((int(x) for x in s.split()))\n\tprint('YNEOS'[a != list(range(1, a[-1] + 1))::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted((int(x) for x in s.split()))\n\tprint('YNEOS'[a != list(range(1, a[-1] + 1))::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted((int(x) for x in s.split()))\n\tprint('YNEOS'[a != list(range(1, a[-1] + 1))::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted((int(x) for x in s.split()))\n\tprint('YNEOS'[a != list(range(1, a[-1] + 1))::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted((int(x) for x in s.split()))\n\tprint('YNEOS'[a != list(range(1, a[-1] + 1))::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted((int(x) for x in s.split()))\n\tprint('YNEOS'[a != list(range(1, a[-1] + 1))::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted((int(x) for x in s.split()))\n\tprint('YNEOS'[a != list(range(1, a[-1] + 1))::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted((int(x) for x in s.split()))\n\tprint('YNEOS'[a != list(range(1, a[-1] + 1))::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted((int(x) for x in s.split()))\n\tprint('YNEOS'[a != list(range(1, a[-1] + 1))::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted((int(x) for x in s.split()))\n",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tans = 'YES'\n\tfor i in range(n):\n\t\tif a[i] != i + 1:\n\t\t\tans = 'NO'\n\t\t\tbreak\n\tprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n "
        ]
    },
    {
        "task_id": 13,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: You are given a rooted tree with n vertices. The vertices are numbered from 1 to n, the root is the vertex number 1.\n\nEach vertex has a color, let's denote the color of vertex v by c_{v}. Initially c_{v} = 0.\n\nYou have to color the tree into the given colors using the smallest possible number of steps. On each step you can choose a vertex v and a color x, and then color all vectices in the subtree of v (including v itself) in color x. In other words, for every vertex u, such that the path from root to u passes through v, set c_{u} = x.\n\nIt is guaranteed that you have to color each vertex in a color different from 0.\n\nYou can learn what a rooted tree is using the link: https://en.wikipedia.org/wiki/Tree_(graph_theory).\n\n\n-----Input-----\n\nThe first line contains a single integer n (2 \u2264 n \u2264 10^4)\u00a0\u2014 the number of vertices in the tree.\n\nThe second line contains n - 1 integers p_2, p_3, ..., p_{n} (1 \u2264 p_{i} < i), where p_{i} means that there is an edge between vertices i and p_{i}.\n\nThe third line contains n integers c_1, c_2, ..., c_{n} (1 \u2264 c_{i} \u2264 n), where c_{i} is the color you should color the i-th vertex into.\n\nIt is guaranteed that the given graph is a tree. \n\n\n-----Output-----\n\nPrint a single integer\u00a0\u2014 the minimum number of steps you have to perform to color the tree into given colors.\n\n\n-----Examples-----\nInput\n6\n1 2 2 1 5\n2 1 1 1 1 1\n\nOutput\n3\n\nInput\n7\n1 1 2 3 1 4\n3 3 1 1 1 2 3\n\nOutput\n5\n\n\n\n-----Note-----\n\nThe tree from the first sample is shown on the picture (numbers are vetices' indices):\n\n$A$\n\nOn first step we color all vertices in the subtree of vertex 1 into color 2 (numbers are colors):\n\n[Image]\n\nOn seond step we color all vertices in the subtree of vertex 5 into color 1:\n\n[Image]\n\nOn third step we color all vertices in the subtree of vertex 2 into color 1:\n\n[Image]\n\nThe tree from the second sample is shown on the picture (numbers are vetices' indices):\n\n[Image]\n\nOn first step we color all vertices in the subtree of vertex 1 into color 3 (numbers are colors):\n\n[Image]\n\nOn second step we color all vertices in the subtree of vertex 3 into color 1:\n\n$8$\n\nOn third step we color all vertices in the subtree of vertex 6 into color 2:\n\n[Image]\n\nOn fourth step we color all vertices in the subtree of vertex 4 into color 1:\n\n[Image]\n\nOn fith step we color all vertices in the subtree of vertex 7 into color 3:\n\n[Image] \n\n### Response:\n",
        "output": [
            "from collections import defaultdict\nimport sys\ninput = sys.stdin.readline\n\ndef dfs(u):\n\tvis[u] = 1\n\tfor v in adj[u]:\n\t\tif vis[v]:\n\t\t\tcontinue\n\t\tdfs(v)\n\t\td[u] += d[v]\n\t\td[u] -= d[v]\n\t\tans[u] += ans[v]\n\t\tans[u] -= ans[v]\n\td[u] += 1\n\tans[u] += d[u]\n\tans[u] -= d[u]\n\nn = int(input())\np = [0] + list(map(int, input().split()))\nc = [0] + list(map(int, input().split()))\nadj = defaultdict(list)\nvis = [0] * (n + 1)\nd = [0] * (n + 1)\nans = [0] * (n + 1)\nfor i in range(1, n + 1):\n\tadj[p[i]].append(i)\nfor i in range(1, n + 1):\n\tif c[i] != c[p[i]]:\n\t\td[i] = 1\n\t\tans[i] = 1\ndfs(1)\nprint(sum(ans))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "import sys\nfrom collections import defaultdict\ninput = sys.stdin.readline\nn = int(input())\np = [0] + [*map(int, input().split())]\nc = [*map(int, input().split())]\nd = defaultdict(int)\nfor i in range(n, 0, -1):\n\tif c[i - 1] == d[i]:\n\t\td[p[i]] += 1\nprint(sum(d.values()))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "(n, p, c) = (int(input()), [0] + list(map(int, input().split())), list(map(int, input().split())))\ns = set()\nfor i in range(n, 0, -1):\n\tif c[i] in s:\n\t\tc[p[i]] = c[i]\n\ts.add(c[i])\nprint(len(s) - 1)\n ",
            "import sys\ninput = sys.stdin.readline\nn = int(input())\na = [int(x) - 1 for x in input().split()]\nc = [0] + [int(x) - 1 for x in input().split()]\nd = [[] for _ in range(n)]\nfor i in range(n - 1):\n\td[a[i]].append(i + 1)\nans = 0\nfor i in range(n - 1, -1, -1):\n\tt = []\n\tfor j in d[i]:\n\t\tt += [c[j]]\n\tt.sort()\n\tans += len(t)\n\tfor j in range(len(t)):\n\t\tif t[j] != j:\n\t\t\tans -= 1\n\t\t\tbreak\nprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "import sys\ninput = sys.stdin.readline\nn = int(input())\np = [0] + list(map(int, input().split()))\nc = [0] + list(map(int, input().split()))\nans = [0] * (n + 1)\nfor i in range(n, 0, -1):\n\tif c[i] != c[p[i]]:\n\t\tans[i] = 1\n\telif ans[p[i]]:\n\t\tans[i] = 2\nprint(sum(ans))\n \n\n\n\n\n\n\n \n\n\n\n\n\n\n \n\n \n\n \n \n \n \n\n \n \n \n\n \n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n ",
            "from collections import defaultdict, deque\nn = int(input())\np = [0] + list(map(int, input().split()))\nc = [0] + list(map(int, input().split()))\nd = defaultdict(list)\nfor i in range(2, n + 1):\n\td[p[i]].append(i)\nans = [0] * (n + 1)\nq = deque([1])\nwhile q:\n\tv = q.pop()\n\tans[c[v]] += 1\n\tfor u in d[v]:\n\t\tq.append(u)\nprint(n - max(ans))\n \n \n\n \n\n \n\n \n\n \n \n\n \n\n \n \n \n \n \n \n \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "import sys\ninput = sys.stdin.readline\n\ndef solve(n, p, c):\n\tans = 0\n\tcols = [0] * (n + 1)\n\tfor i in range(n, 0, -1):\n\t\tif c[i] != cols[i]:\n\t\t\tcols[i] = c[i]\n\t\t\tans += 1\n\t\telse:\n\t\t\tcols[p[i]] = cols[i]\n\treturn ans\n\ndef main():\n\tn = int(input())\n\tp = [0] + list(map(int, input().split()))\n\tc = [0] + list(map(int, input().split()))\n\tprint(solve(n, p, c))\nmain()\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "from collections import defaultdict\nimport sys\ninput = sys.stdin.readline\nn = int(input())\na = [0] + list(map(int, input().split()))\nb = [0] + list(map(int, input().split()))\nc = defaultdict(int)\nfor i in range(1, n + 1):\n\tc[b[i]] += 1\nprint(n - max(c.values()))\n \n\n\n\n\n \n\n\n\n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "from collections import defaultdict\nfrom sys import stdin\n\ndef solve():\n\tn = int(stdin.readline())\n\tedges = list(map(int, stdin.readline().split()))\n\tcolor = list(map(int, stdin.readline().split()))\n\tchild = defaultdict(set)\n\tfor (i, e) in enumerate(edges, 2):\n\t\tchild[e].add(i)\n\tres = 0\n\n\tdef dfs(v):\n\t\tnonlocal res\n\t\tused = set()\n\t\tfor c in child[v]:\n\t\t\tdfs(c)\n\t\t\tused.add(color[c])\n\t\tres += len(used)\n\tdfs(1)\n\treturn res\nprint(solve())\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "def dfs(v, p, c):\n\tC[v] = c[v]\n\tfor u in g[v]:\n\t\tif u != p:\n\t\t\tdfs(u, v, c)\nfor i in range(int(input()) - 1):\n\tg[int(input()) - 1].append(i + 1)\ng = [[] for i in range(int(input()))]\nc = [int(i) - 1 for i in input().split()]\ndfs(0, -1, c)\nprint(len(set(C)))\n \n\ndef main():\n\tn = int(input())\n\tg = [[] for i in range(n)]\n\tfor i in range(n - 1):\n\t\ta = int(input())\n\t\tg[a - 1].append(i + 1)\n\tC = [0 for i in range(n)]\n\tfor i in range(n):\n\t\tC[i] = int(input())\n\tdfs(0, -1, C)\n\tprint(len(set(C)))\nmain()\n \n\ndef main():\n\tn = int(input())\n\tg = [[] for i in range(n)]\n\tfor i in range(n - 1):\n\t\ta = int(input())\n\t\tg[a - 1].append(i + 1)\n\tC = [0 for i in range(n)]\n\tfor i in range(n):\n\t\tC[i] = int(input())\n\tdfs(0, -1, C)\n\tprint(len(set(C)))\nmain()\n \n\ndef main():\n\tn = int(input())\n\tg = [[] for i in range(n)]\n\tfor i in range(n - 1):\n\t\ta = int(input())\n\t\tg[a - 1].append(i + 1)\n\tC = [0 for i in range(n)]\n\tfor i in range(n):\n\t\tC[i] = int(input())\n\tdfs(0, -1, C)\n\tprint(len(set(C)))\nmain()\n \n\ndef main():\n\tn = int(input())\n\tg = [[] for i in range(n)]\n\tfor i in range(n - 1):\n\t\ta = int(input())\n\t\tg[a - 1].append(i + 1)\n\tC = [0 for i in range(n)]\n\tfor i in range(n):\n\t\tC[i] = int(input())\n\tdfs(0, -1, C)\n\tprint(len(set(C)))\nmain()\n \n\ndef main():\n\tn = int(input())\n\tg = [[] for i in range(n)]\n\tfor i in range(n - 1):\n\t\ta = int(input())\n\t\tg[a - 1].append(i + 1)\n\tC = [0 for i in range(n)]\n\tfor i in range(n):\n\t\tC[i] = int(input())\n\tdfs(0, -1, C)\n\tprint(len(set(C)))\nmain()\n \n\ndef main():\n\tn = int(input())\n\tg = [[] for i in range(n)]\n\tfor i in range(n - 1):\n\t\ta = int(input())\n\t\tg[a -",
            "n = int(input())\np = list(map(int, input().split()))\nc = list(map(int, input().split()))\nres = 0\nfor i in range(n - 1, -1, -1):\n\tif c[i] != c[p[i] - 1]:\n\t\tres += 1\n\t\tc[i] = c[p[i] - 1]\nprint(res)\n \n \ninput = __builtins__.input\n \ninput()\ninput()\nprint(sum((a != b for (a, b) in zip(input().split(), input().split()))))\n \ninput = __builtins__.input\ninput()\nprint(sum((a != b for (a, b) in zip(input().split(), input().split()))))\n \ninput = __builtins__.input\ninput()\nprint(sum((a != b for (a, b) in zip(input().split(), input().split()))))\n \ninput = __builtins__.input\ninput()\nprint(sum((a != b for (a, b) in zip(input().split(), input().split()))))\n \ninput = __builtins__.input\ninput()\nprint(sum((a != b for (a, b) in zip(input().split(), input().split()))))\n \ninput = __builtins__.input\ninput()\nprint(sum((a != b for (a, b) in zip(input().split(), input().split()))))\n \ninput = __builtins__.input\ninput()\nprint(sum((a != b for (a, b) in zip(input().split(), input().split()))))\n \ninput = __builtins__.input\ninput()\nprint(sum((a != b for (a, b) in zip(input().split(), input().split()))))\n \ninput = __builtins__.input\ninput()\nprint(sum((a != b for (a, b) in zip(input().split(), input().split()))))\n \ninput = __builtins__.input\ninput()\nprint(sum((a != b for (a, b) in zip(input().split(), input().split()))))\n \ninput = __builtins__.input\ninput()\nprint(sum((a != b for (a, b) in zip(input().split(), input().split()))))\n \ninput = __builtins__.input\ninput()\nprint(sum((a != b for (a, b) in zip(input().split(), input().split()))))\n \ninput = __builtins__.input\ninput()\nprint(sum((a != b for (a, b) in zip(input().split(), input().split()))))\n \ninput = __builtins__.input\ninput()\nprint(sum((a != b for (a, b) in zip(input().split(), input().split()))))\n \ninput = __builtins__.input\ninput()\nprint(sum((a != b for (a, b) in zip(input().split(), input().split()))))\n \ninput = __builtins__.input\ninput()\nprint(sum((a != b for (a, b) in zip(input().split(), input().split()))))\n \ninput = __builtins__.input\ninput()\nprint(sum((a != b for (a, b) in zip(input().split(), input().",
            "import sys\ninput = sys.stdin.readline\n\ndef dfs(v, par):\n\tglobal ans\n\tfor u in adj[v]:\n\t\tif u != par:\n\t\t\tdfs(u, v)\n\t\t\tans += 1\n\treturn\n\nn = int(input())\np = list(map(int, input().split()))\nc = list(map(int, input().split()))\nadj = [[] for i in range(n + 1)]\nfor i in range(1, n):\n\tadj[p[i]].append(i + 1)\nans = 0\nfor i in range(1, n + 1):\n\tif len(adj[i]) > 1:\n\t\tdfs(i, 0)\nprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "import sys\nfrom collections import deque\ninput = sys.stdin.readline\nn = int(input())\np = list(map(int, input().split()))\nc = list(map(int, input().split()))\nans = 0\nd = [0] * (n + 1)\ng = [[] for _ in range(n + 1)]\nfor i in range(1, n):\n\tg[p[i - 1]].append(i + 1)\n\td[i + 1] += 1\nfor i in range(n, 0, -1):\n\td[p[i - 1]] += d[i]\n\td[i] = 0\n\twhile d[i]:\n\t\tans += 1\n\t\tq = deque([i])\n\t\twhile q:\n\t\t\tv = q.popleft()\n\t\t\tif c[v - 1] > 0:\n\t\t\t\tc[v - 1] = 0\n\t\t\tfor u in g[v]:\n\t\t\t\tq.append(u)\n\t\t\t\td[u] -= 1\nprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "n = int(input())\np = list(map(int, input().split()))\nc = list(map(int, input().split()))\na = [[] for i in range(n)]\nfor i in range(1, n):\n\ta[p[i - 1]].append(i)\nq = [0]\nd = [0] * n\nwhile q:\n\tx = q.pop()\n\tfor i in a[x]:\n\t\td[i] = d[x] + 1\n\t\tq.append(i)\nprint(sum([d[i] * (c[i] != c[p[i] - 1]) for i in range(n)]))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "from collections import defaultdict\nfrom sys import setrecursionlimit\nsetrecursionlimit(10 ** 6)\ninput()\np = [0] + [int(x) - 1 for x in input().split()]\nc = [int(x) - 1 for x in input().split()]\ndp = defaultdict(int)\ndp[0, 0] = 0\ndp[0, 1] = 1\nfor i in range(1, len(p)):\n\tdp[p[i], c[i]] = dp[p[i], c[i]] + 1\n\tdp[p[i], 1 - c[i]] = dp[p[i], 1 - c[i]] + dp[i, c[i]]\nprint(min(dp[i, 0] + dp[i, 1] for i in range(len(p))))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "import sys\nfrom collections import deque\ninput = sys.stdin.readline\nn = int(input())\npar = [0] + [int(x) for x in input().split()]\nc = [int(x) for x in input().split()]\nans = 0\nwhile 1:\n\td = deque([])\n\tfor i in range(n, 0, -1):\n\t\tif c[i] and not c[par[i]]:\n\t\t\td.append(i)\n\t\t\tc[i] = 0\n\tif not d:\n\t\tbreak\n\twhile d:\n\t\ti = d.popleft()\n\t\tans += 1\n\t\tc[par[i]] = c[i]\nprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "import collections\nn = int(input())\np = list(map(int, input().split()))\nc = list(map(int, input().split()))\nd = collections.defaultdict(list)\nfor i in range(1, n):\n\td[p[i]].append(i + 1)\nans = 0\nq = [1]\nwhile q:\n\tv = q.pop()\n\tl = []\n\tfor u in d[v]:\n\t\tif c[u - 1] != c[v - 1]:\n\t\t\tl.append(u)\n\t\telse:\n\t\t\tq.append(u)\n\tans += len(l) // 2\nprint(ans)\n ",
            "import sys\ninput = sys.stdin.readline\nn = int(input())\np = list(map(int, input().split()))\nc = list(map(int, input().split()))\ns = [0] * (n + 1)\nd = [0] * (n + 1)\nfor i in range(n - 1, 0, -1):\n\td[i] = d[p[i - 1]] + 1\n\ts[i] = s[p[i - 1]] + d[i]\nfor i in range(1, n):\n\tprint(s[i] - d[i] + (c[p[i - 1]] != c[i]))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "import sys\nfrom collections import deque\n\ndef main():\n\tn = int(sys.stdin.readline())\n\tg = [[] for _ in range(n)]\n\tcolors = []\n\tfor (i, p) in enumerate(map(int, sys.stdin.readline().split()), 2):\n\t\tg[p - 1].append(i - 1)\n\tfor c in map(int, sys.stdin.readline().split()):\n\t\tcolors.append(c - 1)\n\td = deque([0])\n\twhile d:\n\t\tv = d.popleft()\n\t\tcolor = colors[v]\n\t\tfor u in g[v]:\n\t\t\tif colors[u] == -1:\n\t\t\t\tcolors[u] = color\n\t\t\t\td.append(u)\n\tprint(max(colors))\nmain()\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "from collections import defaultdict\nfrom sys import setrecursionlimit\nsetrecursionlimit(200000)\n\ndef dfs(v, p):\n\tglobal cnt\n\tcnt[v] = 0\n\tfor u in e[v]:\n\t\tif u == p:\n\t\t\tcontinue\n\t\tdfs(u, v)\n\t\tcnt[v] += cnt[u]\n\tif c[v] == cnt[v]:\n\t\tcnt[v] += 1\n\tprint(cnt[v])\nn = int(input())\np = [0] + list(map(int, input().split()))\nc = [0] + list(map(int, input().split()))\ne = defaultdict(list)\nfor i in range(n):\n\te[p[i]].append(i + 1)\ncnt = [0] * (n + 1)\ndfs(1, 0)\n \n \ninput()\n \n \nprint(cnt[1])\n \n \ninput()\n \n \nprint(cnt[1])\n \n \ninput()\n \n \nprint(cnt[1])\n \n \ninput()\n \n \nprint(cnt[1])\n \n \ninput()\n \n \nprint(cnt[1])\n \n \ninput()\n \n \nprint(cnt[1])\n \n \ninput()\n \n \nprint(cnt[1])\n \n \ninput()\n \n \nprint(cnt[1])\n \n \ninput()\n \n \nprint(cnt[1])\n \n \ninput()\n \n \nprint(cnt[1])\n \n \ninput()\n \n \nprint(cnt[1])\n \n \ninput()\n \n \nprint(cnt[1])\n \n \ninput()\n \n \nprint(cnt[1])\n \n \ninput()\n \n \nprint(cnt[1])\n \n \ninput()\n \n \nprint(cnt[1])\n \n \ninput()\n \n \nprint(cnt[1])\n \n \ninput()\n \n \nprint(cnt[1])\n \n \ninput()\n \n \nprint(cnt[1])\n \n \ninput()\n \n \nprint(cnt[1])\n \n \ninput()\n \n \nprint(cnt[1])\n \n \ninput()\n \n \nprint(cnt[1])\n \n \ninput()\n \n \nprint(cnt[1])\n \n \ninput()\n \n \nprint(cnt[1])\n \n \ninput()\n \n \nprint(cnt[1])\n \n \ninput()\n \n \nprint(cnt[1])\n \n \ninput()\n \n \nprint(cnt[1])\n \n \ninput()\n \n \nprint(cnt[1])\n \n \ninput()\n \n \nprint(cnt[1])\n \n \ninput()\n \n \nprint(cnt[1])\n \n \ninput()\n \n \nprint(cnt[1])\n \n \ninput()\n \n \nprint"
        ]
    },
    {
        "task_id": 14,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: It is the easy version of the problem. The only difference is that in this version $n = 1$.\n\nIn the cinema seats can be represented as the table with $n$ rows and $m$ columns. The rows are numbered with integers from $1$ to $n$. The seats in each row are numbered with consecutive integers from left to right: in the $k$-th row from $m (k - 1) + 1$ to $m k$ for all rows $1 \\le k \\le n$.\n\n$1$\n\n$2$\n\n$\\cdots$\n\n$m - 1$\n\n$m$\n\n$m + 1$\n\n$m + 2$\n\n$\\cdots$\n\n$2 m - 1$\n\n$2 m$\n\n$2m + 1$\n\n$2m + 2$\n\n$\\cdots$\n\n$3 m - 1$\n\n$3 m$\n\n$\\vdots$\n\n$\\vdots$\n\n$\\ddots$\n\n$\\vdots$\n\n$\\vdots$\n\n$m (n - 1) + 1$\n\n$m (n - 1) + 2$\n\n$\\cdots$\n\n$n m - 1$\n\n$n m$\n\nThe table with seats indices\n\nThere are $nm$ people who want to go to the cinema to watch a new film. They are numbered with integers from $1$ to $nm$. You should give exactly one seat to each person.\n\nIt is known, that in this cinema as lower seat index you have as better you can see everything happening on the screen. $i$-th person has the level of sight $a_i$. Let's define $s_i$ as the seat index, that will be given to $i$-th person. You want to give better places for people with lower sight levels, so for any two people $i$, $j$ such that $a_i < a_j$ it should be satisfied that $s_i < s_j$.\n\nAfter you will give seats to all people they will start coming to their seats. In the order from $1$ to $nm$, each person will enter the hall and sit in their seat. To get to their place, the person will go to their seat's row and start moving from the first seat in this row to theirs from left to right. While moving some places will be free, some will be occupied with people already seated. The inconvenience of the person is equal to the number of occupied seats he or she will go through.\n\nLet's consider an example: $m = 5$, the person has the seat $4$ in the first row, the seats $1$, $3$, $5$ in the first row are already occupied, the seats $2$ and $4$ are free. The inconvenience of this person will be $2$, because he will go through occupied seats $1$ and $3$.\n\nFind the minimal total inconvenience (the sum of inconveniences of all people), that is possible to have by giving places for all people (all conditions should be satisfied).\n\n\n-----Input-----\n\nThe input consists of multiple test cases. The first line contains a single integer $t$ ($1 \\le t \\le 100$) \u2014 the number of test cases. Description of the test cases follows.\n\nThe first line of each test case contains two integers $n$ and $m$ ($n = 1$, $1 \\le m \\le 300$) \u2014 the number of rows and places in each row respectively.\n\nThe second line of each test case contains $n \\cdot m$ integers $a_1, a_2, \\ldots, a_{n \\cdot m}$ ($1 \\le a_i \\le 10^9$), where $a_i$ is the sight level of $i$-th person.\n\nIt's guaranteed that the sum of $n \\cdot m$ over all test cases does not exceed $10^5$.\n\n\n-----Output-----\n\nFor each test case print a single integer \u2014 the minimal total inconvenience that can be achieved.\n\n\n-----Examples-----\n\nInput\n4\n1 3\n1 2 3\n1 5\n2 1 5 3 3\n1 2\n2 1\n1 6\n2 3 2 1 1 1\nOutput\n3\n6\n0\n1\n\n\n-----Note-----\n\nIn the first test case, there is a single way to arrange people, because all sight levels are distinct. The first person will sit on the first seat, the second person will sit on the second place, the third person will sit on the third place. So inconvenience of the first person will be $0$, inconvenience of the second person will be $1$ and inconvenience of the third person will be $2$. The total inconvenience is $0 + 1 + 2 = 3$.\n\nIn the second test case, people should sit as follows: $s_1 = 2$, $s_2 = 1$, $s_3 = 5$, $s_4 = 4$, $s_5 = 3$. The total inconvenience will be $6$. \n\n### Response:\n",
        "output": [
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\ta.sort(reverse=True)\n\tprint(sum((j - i for (i, j) in enumerate(a))) + len(a))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\ta = list(map(int, s.split()))\n\tprint(sum((a[i] - a[i + 1] for i in range(len(a) - 1))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = list(map(int, s.split()))\n\tprint(sum((a[i] - a[i + 1] for i in range(len(a) - 1))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = list(map(int, s.split()))\n\tprint(sum((a[i] - a[i + 1] for i in range(len(a) - 1))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = list(map(int, s.split()))\n\tprint(sum((a[i] - a[i + 1] for i in range(len(a) - 1))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = list(map(int, s.split()))\n\tprint(sum((a[i] - a[i + 1] for i in range(len(a) - 1))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = list(map(int, s.split()))\n\tprint(sum((a[i] - a[i + 1] for i in range(len(a) - 1))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = list(map(int, s.split()))\n\tprint(sum((a[i] - a[i + 1] for i in range(len(a) - 1))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = list(map(int, s.split()))\n\tprint(sum((a[i] - a[i + 1] for i in range(len(a) - 1))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = list(map(int, s.split()))\n\tprint(sum((a[i] - a[i + 1] for i in range(len(a) - 1))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = list(map(int, s.split()))\n\tprint(sum((a[i] - a[i + 1] for i in range(len(a) - 1))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = list(map(int, s.split()))\n\tprint(sum((a[i] - a[i + 1] for i in range(len(a) - 1))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = list(map(int, s.split()))\n\tprint(sum((a[i] - a[i + 1] for i in range(len(a) - 1))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = list(map(int, s.split()))\n\tprint(",
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum((a[i] < a[j] for i in range(len(a)) for j in range(i + 1, len(a)))))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::2]:\n\ta = sorted((int(x) for x in s.split()))\n\tprint(sum((i - a[i] for i in range(len(a)))))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tprint(sum((abs(i - x) for (i, x) in enumerate(a))) // 2)\n \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tb = [0] * m\n\tfor i in a:\n\t\tb[i % m - 1] += 1\n\tans = sum((b[i] * (b[i] - 1) for i in range(m))) // 2\n\tprint(ans)\n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n ",
            "for _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tprint(sum((abs(x % m - i) for (i, x) in enumerate(a))))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\ta = sorted(map(int, input().split()))\n\ta.reverse()\n\tans = 0\n\tb = [0] * n\n\tfor i in range(n * m):\n\t\tans += a[i] * (m - 1 - b[i % n])\n\t\tb[i % n] += 1\n\tprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint(sum((i - 1 for (i, j) in enumerate(a) if i == j)))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "R = lambda : map(int, input().split())\n(t,) = R()\nfor _ in [0] * t:\n\t(n, m) = R()\n\ta = sorted(R())\n\ts = [0] * (n * m)\n\tl = m\n\ti = 0\n\tfor j in range(n):\n\t\twhile l > 0:\n\t\t\tl -= 1\n\t\t\ts[i] = l + 1\n\t\t\ti += 1\n\t\tl = m\n\tprint(sum((abs(a[i] - s[i]) for i in range(n * m))))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tx = 0\n\tfor i in range(m):\n\t\tx += a[i] * i + a[i] * (m - i - 1)\n\tprint(x)\n \n \n\n \n\n \n\n \n\n \n \n \n\n \n\n \n\n \n \n \n \n\n \n \n \n\n \n\n \n\n \n \n\n \n \n \n \n\n \n \n \n \n\n \n\n \n \n\n \n\n \n\n \n \n \n\n \n \n \n \n\n \n \n \n\n \n\n \n \n \n\n \n \n \n \n\n \n \n \n\n \n\n \n \n\n \n\n \n \n \n\n \n \n \n \n\n \n \n \n\n \n\n \n \n\n \n\n \n \n \n\n \n \n \n \n\n \n \n \n\n \n\n \n \n\n \n\n \n \n \n\n \n \n \n \n\n \n \n \n\n \n\n \n \n\n \n\n \n \n \n\n \n \n \n \n\n \n \n \n\n \n\n \n \n\n \n\n \n \n \n\n \n \n \n\n \n\n \n \n\n \n\n \n \n \n\n \n \n \n \n\n \n \n \n\n \n\n \n \n\n \n\n \n \n \n\n \n \n \n \n\n \n \n \n\n \n\n \n \n\n \n\n \n \n \n\n \n \n \n \n\n \n \n \n\n \n\n \n \n\n \n\n \n \n \n\n \n \n \n \n\n \n \n \n\n \n\n \n \n\n \n\n \n \n \n\n \n \n \n \n\n \n \n \n\n \n\n \n \n\n \n\n \n \n \n\n \n \n \n \n\n \n \n \n\n \n\n \n \n\n \n\n \n \n \n\n \n \n \n \n\n \n \n \n\n \n\n \n \n\n \n\n \n \n \n\n \n \n \n \n\n \n \n \n\n \n\n \n \n\n \n\n \n \n \n\n \n \n \n \n\n \n \n \n\n \n\n \n \n\n \n\n \n \n \n\n \n \n \n \n\n \n \n \n\n \n\n \n \n\n \n\n \n \n \n\n \n \n \n \n\n \n \n \n\n \n\n \n \n\n \n\n \n \n \n\n \n \n \n \n\n \n \n \n\n \n\n \n ",
            "for s in [*open(0)][2::2]:\n\ta = sorted(((int(x), i) for (i, x) in enumerate(s.split())))\n\tprint(sum((abs(i - x[1]) for (i, x) in enumerate(a))))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "I = input\nfor _ in [0] * int(I()):\n\tn, m = map(int, I().split())\n\ta = list(map(int, I().split()))\n\ta.sort(reverse=True)\n\tr = [0] * m\n\ti = 0\n\tfor x in a:\n\t\tr[i] += x\n\t\ti = (i + 1) % m\n\tprint(sum(r))\n \n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n",
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(abs(i - j) for (i, j) in zip(a, sorted(a))))\n \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\tprint(sum((abs(x - y) for (x, y) in zip(sorted((i for i in map(int, s.split()))), range(1, len(s) + 1)))))\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n ",
            "for s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint(sum((a[i] * i for i in range(len(a)))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint(sum((a[i] * i for i in range(len(a)))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint(sum((a[i] * i for i in range(len(a)))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(intructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionructionruction",
            "for s in [*open(0)][2::2]:\n\tprint(sum((abs(a - b) for (a, b) in zip(*[iter(sorted(map(int, input().split()[1:])))] * 2))))\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n",
            "for s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint(sum((b - a.index(b) for b in a)))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint(sum((b - a.index(b) for b in a)))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint(sum((b - a.index(b) for b in a)))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(intruction a\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint(sum((b - a.index(b) for b in a)))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint(sum((b - a.index(b) for b in a)))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint(sum((b - a.index(b) for b in a)))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint(sum((b - a.index(b) for b in a)))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint(sum((b - a.index(b) for b in a)))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint(sum((b - a.index(b) for b in a)))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint(sum((b - a.index(b) for b in a)))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint(sum((b - a.index(b) for b in a)))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint(sum((b - a.index(b) for b in a)))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint(sum((b - a.index(b) for b in a)))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint(sum((b - a.index(b) for b in a)))\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint(sum((b - a.index(b)",
            "for s in [*open(0)][2::2]:\n\ta = sorted(((int(i), j) for (j, i) in enumerate(s.split())))\n\tprint(sum(((b - a[0][1]) * a[0][0] for (a, b) in zip(a, range(len(a))))))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tb = [0] * m\n\tfor i in range(n * m):\n\t\tb[i % m] += a[i]\n\tprint(sum(b))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n "
        ]
    },
    {
        "task_id": 15,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: Enough is enough. Too many times it happened that Vasya forgot to dispose of garbage and his apartment stank afterwards. Now he wants to create a garbage disposal plan and stick to it.\n\nFor each of next $n$ days Vasya knows $a_i$ \u2014 number of units of garbage he will produce on the $i$-th day. Each unit of garbage must be disposed of either on the day it was produced or on the next day. Vasya disposes of garbage by putting it inside a bag and dropping the bag into a garbage container. Each bag can contain up to $k$ units of garbage. It is allowed to compose and drop multiple bags into a garbage container in a single day.\n\nBeing economical, Vasya wants to use as few bags as possible. You are to compute the minimum number of bags Vasya needs to dispose of all of his garbage for the given $n$ days. No garbage should be left after the $n$-th day.\n\n\n-----Input-----\n\nThe first line of the input contains two integers $n$ and $k$ ($1 \\le n \\le 2\\cdot10^5, 1 \\le k \\le 10^9$) \u2014 number of days to consider and bag's capacity. The second line contains $n$ space separated integers $a_i$ ($0 \\le a_i \\le 10^9$) \u2014 the number of units of garbage produced on the $i$-th day.\n\n\n-----Output-----\n\nOutput a single integer \u2014 the minimum number of bags Vasya needs to dispose of all garbage. Each unit of garbage should be disposed on the day it was produced or on the next day. No garbage can be left after the $n$-th day. In a day it is allowed to compose and drop multiple bags.\n\n\n-----Examples-----\nInput\n3 2\n3 2 1\n\nOutput\n3\n\nInput\n5 1\n1000000000 1000000000 1000000000 1000000000 1000000000\n\nOutput\n5000000000\n\nInput\n3 2\n1 0 1\n\nOutput\n2\n\nInput\n4 4\n2 8 4 1\n\nOutput\n4 \n\n### Response:\n",
        "output": [
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nans = 0\nwhile sum(a) > 0:\n\ta = sorted(a[i:] for i in range(k))[0]\n\tans += 1\nprint(ans)\n \n \nsolve = lambda : (n, k) = map(int, input().split()); a = list(map(int, input().split())); ans = 0; while sum(a) > 0: a = sorted(a[i:] for i in range(k))[0]; ans += 1; print(ans)\n \nsolve()\n \n \ndef main():\n\t(n, k) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tprint(sum((sum(a[i:i + k]) // k for i in range(0, n, k))) + (n % k > 0))\nmain()\n \nsolve()\n \ndef main():\n\t(n, k) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tans = 0\n\twhile sum(a) > 0:\n\t\ta = sorted(a[i:] for i in range(k))[0]\n\t\tans += 1\n\tprint(ans)\nmain()\n \nsolve()\n \ndef main():\n\t(n, k) = map(intruction(input().split()))\n\ta = list(map(int, input().split()))\n\tprint(sum((sum(a[i:i + k]) // k for i in range(0, n, k))) + (n % k > 0))\nmain()\n \nsolve()\n \ndef main():\n\t(n, k) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tans = 0\n\twhile sum(a) > 0:\n\t\ta = sorted(a[i:] for i in range(k))[0]\n\t\tans += 1\n\tprint(ans)\nmain()\n \nsolve()\n \ndef main():\n\t(n, k) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tprint(sum((sum(a[i:i + k]) // k for i in range(0, n, k))) + (n % k > 0))\nmain()\n \nsolve()\n \ndef main():\n\t(n, k) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tprint(sum((sum(a[i:i + k]) // k for i in range(0, n, k))) + (n % k > 0))\nmain()\n \nsolve()\n \ndef main():\n\t(n, k) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tprint(sum((sum(a[i:i + k]) // k for i in range(0, n, k))) + (n % k > 0))\nmain()\n \nsolve()\n \ndef main():\n\t(n, k) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tprint(sum((sum(a[i:i + k]) // k for i",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nans = cur = 0\nfor x in a:\n\tcur += x\n\tans += cur // k\n\tcur %= k\nif cur > 0:\n\tans += 1\nprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nb = [0]\nfor i in range(n):\n\tb.append(b[-1] + a[i])\nc = b[-1] // k\nif b[-1] % k:\n\tc += 1\nprint(c)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nprint((sum(a) + k - 1) // k)\n \n\n\n\n \n\n\n\n \n\n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "(n, k) = map(int, input().split())\nprint(sum((a // k + (a % k > 0) for a in map(int, input().split()))))\n \n\nI = input\n(n, k) = map(int, I().split())\nprint(sum((a // k + (a % k > 0) for a in map(int, I().split()))))\n \n\n(n, k) = map(int, input().split())\nprint(sum((x // k + (x % k > 0) for x in map(int, input().split()))))\n \n\n(n, k) = map(intruction, input().split())\nprint(sum((x // k + (x % k > 0) for x in map(intruction, input().split()))))\n \n\nI = input\n(n, k) = map(int, I().split())\nprint(sum((a // k + (a % k > 0) for a in map(int, I().split()))))\n \n\nI = input\n(n, k) = map(int, I().split())\nprint(sum((a // k + (a % k > 0) for a in map(int, I().split()))))\n \n\n(n, k) = map(int, input().split())\nprint(sum((a // k + (a % k > 0) for a in map(int, input().split()))))\n \n\n(n, k) = map(int, input().split())\nprint(sum((x // k + (x % k > 0) for x in map(int, input().split()))))\n \n\nI = input\n(n, k) = map(int, I().split())\nprint(sum((a // k + (a % k > 0) for a in map(int, I().split()))))\n \n\n(n, k) = map(int, input().split())\nprint(sum((x // k + (x % k > 0) for x in map(int, input().split()))))\n \n\n(n, k) = map(int, input().split())\nprint(sum((a // k + (a % k > 0) for a in map(int, input().split()))))\n \n\nI = input\n(n, k) = map(int, I().split())\nprint(sum((a // k + (a % k > 0) for a in map(int, I().split()))))\n \n\nI = input\n(n, k) = map(int, I().split())\nprint(sum((a // k + (a % k > 0) for a in map(int, I().split()))))\n \n\nI = input\n(n, k) = map(int, I().split())\nprint(sum((a // k + (a % k > 0) for a in map(int, I().split()))))\n \n\n(n, k) = map(int, input().split())\nprint(sum((x // k + (x % k > 0) for x in map(int, input().split()))))\n \n\nI = input\n(n, k) = map(int, I().split())\nprint(sum((a // k + (a % k > 0) for a in map(int, I().split()))))\n \n\nI = input\n(n, k) = map(int, I().split())\nprint(sum((a // k + (a %",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\ns = sum(a)\nans = 0\nfor i in range(n):\n\tif s >= k:\n\t\ts -= k\n\t\tans += 1\n\telse:\n\t\tans += s\n\t\ts = 0\nprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n\tans += (a[i] + k - 1) // k\nprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nans = 0\ns = 0\nfor i in a:\n\ts += i\n\tans += (s + k - 1) // k\nprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nprint((sum(a) + k - 1) // k)\n \n \nsolve = lambda : (lambda : (n, k) == map(int, input().split()))() and print((sum(map(int, input().split())) + k - 1) // k)\n \nsolve()\n ",
            "(n, k) = map(int, input().split())\nl = list(map(int, input().split()))\nprint((sum(l) + k - 1) // k)\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nprint((sum(a) + k - 1) // k)\n \n\n\n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nc = 0\nfor x in a:\n\tc += x // k + (x % k > 0)\nprint(c)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "import heapq\n(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nq = []\nfor i in a:\n\theapq.heappush(q, i)\nans = 0\nwhile q:\n\tnow = heapq.heappop(q)\n\twhile q and now >= q[0]:\n\t\theapq.heappop(q)\n\tans += 1\nprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "(n, k) = map(int, input().split())\nprint(sum((a + k - 1) // k for a in map(int, input().split())))\n \n\n\n\n \n\n\n \n\n\n \n\n \n\n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\ns = 0\nfor x in a:\n\ts += x\nprint((s + k - 1) // k)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n\ts += a[i]\nprint((s + k - 1) // k)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nc = 0\nfor x in a:\n\tc += x // k + (x % k != 0)\nprint(c)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nc = 0\nfor i in range(n):\n\tc += a[i]\n\tc = (c + k - 1) // k\nprint(c)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nt = 0\nfor x in a:\n\tt += (x + k - 1) // k\nprint(t)\n \n \nsolve = lambda : (lambda n, k : (lambda a : sum(((x + k - 1) // k for x in a)))(list(map(int, input().split()))))(*map(int, input().split()))\nprint(solve())\n ",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nx = 0\nfor i in a:\n\tx += i // k\n\tif i % k:\n\t\tx += 1\nprint(x)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n"
        ]
    },
    {
        "task_id": 16,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: The Berland State University is hosting a ballroom dance in celebration of its 100500-th anniversary! n boys and m girls are already busy rehearsing waltz, minuet, polonaise and quadrille moves.\n\nWe know that several boy&girl pairs are going to be invited to the ball. However, the partners' dancing skill in each pair must differ by at most one.\n\nFor each boy, we know his dancing skills. Similarly, for each girl we know her dancing skills. Write a code that can determine the largest possible number of pairs that can be formed from n boys and m girls.\n\n\n-----Input-----\n\nThe first line contains an integer n (1 \u2264 n \u2264 100) \u2014 the number of boys. The second line contains sequence a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 100), where a_{i} is the i-th boy's dancing skill.\n\nSimilarly, the third line contains an integer m (1 \u2264 m \u2264 100) \u2014 the number of girls. The fourth line contains sequence b_1, b_2, ..., b_{m} (1 \u2264 b_{j} \u2264 100), where b_{j} is the j-th girl's dancing skill.\n\n\n-----Output-----\n\nPrint a single number \u2014 the required maximum possible number of pairs.\n\n\n-----Examples-----\nInput\n4\n1 4 6 2\n5\n5 1 5 7 9\n\nOutput\n3\n\nInput\n4\n1 2 3 4\n4\n10 11 12 13\n\nOutput\n0\n\nInput\n5\n1 1 1 1 1\n3\n1 2 3\n\nOutput\n2 \n\n### Response:\n",
        "output": [
            "from bisect import bisect_right\nn = int(input())\na = sorted(map(int, input().split()))\nm = int(input())\nb = sorted(map(int, input().split()))\nprint(sum((bisect_right(b, a[i] + 1) - bisect_right(b, a[i] - 1) for i in range(n))))\n \n\ndef main():\n\tn = int(input())\n\tboys = sorted(map(int, input().split()))\n\tm = int(input())\n\tgirls = sorted(map(int, input().split()))\n\tres = 0\n\tfor boy in boys:\n\t\tres += bisect_right(girls, boy + 1) - bisect_right(girls, boy - 1)\n\tprint(res)\nmain()\n \n\ndef main():\n\tinput()\n\tboys = sorted(map(int, input().split()))\n\tinput()\n\tgirls = sorted(map(int, input().split()))\n\tans = 0\n\tfor boy in boys:\n\t\tans += bisect_right(girls, boy + 1) - bisect_right(girls, boy - 1)\n\tprint(ans)\nmain()\n \n\ndef main():\n\tinput()\n\tboys = sorted(map(int, input().split()))\n\tinput()\n\tgirls = sorted(map(int, input().split()))\n\tans = 0\n\tfor boy in boys:\n\t\tans += bisect_right(girls, boy + 1) - bisect_right(girls, boy - 1)\n\tprint(ans)\nmain()\n \n\ndef main():\n\tinput()\n\tboys = sorted(map(int, input().split()))\n\tinput()\n\tgirls = sorted(map(int, input().split()))\n\tans = 0\n\tfor boy in boys:\n\t\tans += bisect_right(girls, boy + 1) - bisect_right(girls, boy - 1)\n\tprint(ans)\nmain()\n \n\ndef main():\n\tinput()\n\tboys = sorted(map(int, input().split()))\n\tinput()\n\tgirls = sorted(map(int, input().split()))\n\tans = 0\n\tfor boy in boys:\n\t\tans += bisect_right(girls, boy + 1) - bisect_right(girls, boy - 1)\n\tprint(ans)\nmain()\n \n\ndef main():\n\tinput()\n\tboys = sorted(map(int, input().split()))\n\tinput()\n\tgirls = sorted(map(int, input().split()))\n\tans = 0\n\tfor boy in boys:\n\t\tans += bisect_right(girls, boy + 1) - bisect_right(girls, boy - 1)\n\tprint(ans)\nmain()\n \n\ndef main():\n\tinput()\n\tboys = sorted(map(int, input().split()))\n\tinput()\n\tgirls = sorted(map(int, input().split()))\n\tans = 0\n\tfor boy in boys:\n\t\tans += bisect_right(girls, boy + 1) - bisect_right(girls, boy - 1)\n\tprint(ans)\nmain()\n \n\ndef main():\n\tinput()\n\tboys = sorted(map(int, input().split()))\n\tinput()\n\tgirls = sorted(map",
            "input()\na = sorted(map(int, input().split()))\ninput()\nb = sorted(map(int, input().split()))\ni = j = 0\nwhile i < len(a) and j < len(b):\n\ti += a[i] <= b[j]\n\tj += a[i] >= b[j]\nprint(i)\n \n\n\n\nInput\n4\n1 4 6 2\n5\n5 1 5 7 9\n\nOutput\n3\n\nInput\n4\n1 2 3 4\n4\n10 11 12 13\n\nOutput\n0\n\nInput\n5\n1 1 1 1 1\n3\n1 2 3\n\nOutput\n2 \n",
            "(n, a, m, b) = (int(input()), sorted(map(int, input().split())), int(input()), sorted(map(int, input().split())))\nprint(sum((abs(a[i] - b[i]) <= 1 for i in range(min(n, m)))))\n \n\ndef solve(n, a, m, b):\n\t(i, j) = (0, 0)\n\tans = 0\n\twhile i < n and j < m:\n\t\tif abs(a[i] - b[j]) <= 1:\n\t\t\tans += 1\n\t\t\ti += 1\n\t\t\tj += 1\n\t\telif a[i] < b[j]:\n\t\t\ti += 1\n\t\telse:\n\t\t\tj += 1\n\treturn ans\n \n\ndef main():\n\t(n, a, m, b) = (int(input()), sorted(map(int, input().split())), int(input()), sorted(map(int, input().split())))\n\tprint(solve(n, a, m, b))\nmain()\n \n\ndef solve(n, a, m, b):\n\tans = 0\n\tfor i in a:\n\t\twhile abs(b[0] - i) > 1:\n\t\t\tb.pop(0)\n\t\t\tif not b:\n\t\t\t\treturn ans\n\t\tans += 1\n\t\tb.pop(0)\n\treturn ans\n \n\ndef main():\n\t(n, a, m, b) = (int(input()), sorted(map(int, input().split())), int(input()), sorted(map(int, input().split())))\n\tprint(solve(n, a, m, b))\nmain()\n \n\ndef solve(n, a, m, b):\n\tans = 0\n\tfor i in range(n):\n\t\twhile abs(a[i] - b[0]) > 1 and b:\n\t\t\tb.pop(0)\n\t\tif b:\n\t\t\tans += 1\n\t\t\tb.pop(0)\n\t\telse:\n\t\t\tbreak\n\treturn ans\n \n\ndef main():\n\t(n, a, m, b) = (int(input()), sorted(map(int, input().split())), int(input()), sorted(map(int, input().split())))\n\tprint(solve(n, a, m, b))\nmain()\n \n\ndef solve(n, a, m, b):\n\tans = 0\n\tfor i in range(n):\n\t\twhile a[i] - b[0] > 1 and b:\n\t\t\tb.pop(0)\n\t\tif b:\n\t\t\tans += 1\n\t\t\tb.pop(0)\n\t\telse:\n\t\t\tbreak\n\treturn ans\n \n\ndef main():\n\t(n, a, m, b) = (int(input()), sorted(map(int, input().split())), int(input()), sorted(map(int, input().split())))\n\tprint(solve(n, a, m, b))\nmain()\n \n\ndef solve(n, a, m, b):\n\tans = 0\n\tfor i in range(n):\n\t\twhile a[i] - b[0] > 1 and b:\n\t\t\tb.pop(0)\n\t\tif b:\n\t\t\tans += 1\n\t\t\tb.pop(0)\n\t\telse:\n\t\t\tbreak\n\treturn ans\n \n\ndef main():",
            "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nm = int(input())\nb = list(map(int, input().split()))\na.sort()\nb.sort()\nans = 0\nfor i in a:\n\tfor j in b:\n\t\tif abs(i - j) <= 1:\n\t\t\tans += 1\n\t\t\tb.remove(j)\n\t\t\tbreak\nprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "(n, a, m, b) = (int(input()), sorted(map(int, input().split())), int(input()), sorted(map(int, input().split())))\n(i, j, c) = (0, 0, 0)\nwhile i < n and j < m:\n\tif abs(a[i] - b[j]) <= 1:\n\t\tc += 1\n\t\ti += 1\n\t\tj += 1\n\telse:\n\t\tif a[i] < b[j]:\n\t\t\ti += 1\n\t\telse:\n\t\t\tj += 1\nprint(c)\n \n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n",
            "n = int(input())\na = sorted([int(i) for i in input().split()])\nm = int(input())\nb = sorted([int(i) for i in input().split()])\nc = 0\nfor i in range(len(a)):\n\tfor j in range(len(b)):\n\t\tif abs(a[i] - b[j]) <= 1:\n\t\t\tc += 1\n\t\t\tb[j] = 101\n\t\t\tbreak\nprint(c)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "input()\na = sorted(map(int, input().split()))\ninput()\nb = sorted(map(int, input().split()))\ni = j = c = 0\nwhile i < len(a) and j < len(b):\n\tif abs(a[i] - b[j]) <= 1:\n\t\tc += 1\n\t\ti += 1\n\t\tj += 1\n\telif a[i] < b[j]:\n\t\ti += 1\n\telse:\n\t\tj += 1\nprint(c)\n \n\n\n\n\n\n\n \n\n \n\n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n\n \n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n ",
            "n = int(input())\na = sorted(map(int, input().split()))\nm = int(input())\nb = sorted(map(int, input().split()))\ni = j = 0\nwhile i < n and j < m:\n\tif abs(a[i] - b[j]) <= 1:\n\t\ti += 1\n\tj += 1\nprint(i)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "def read_ints():\n\treturn [int(x) for x in input().split()]\n\ndef solve():\n\tn = read_ints()[0]\n\tboys = sorted(read_ints())\n\tm = read_ints()[0]\n\tgirls = sorted(read_ints())\n\tres = 0\n\tfor i in boys:\n\t\tres += min((j for j in girls if abs(i - j) <= 1), default=-1) != -1\n\t\tgirls.remove(min((j for j in girls if abs(i - j) <= 1), default=-1))\n\treturn res\nprint(solve())\n \n \ndef solve_test():\n\tn = int(input())\n\tboys = sorted(map(int, input().split()))\n\tm = int(input())\n\tgirls = sorted(map(int, input().split()))\n\tres = 0\n\tfor i in boys:\n\t\tres += min((j for j in girls if abs(i - j) <= 1), default=-1) != -1\n\t\tgirls.remove(min((j for j in girls if abs(i - j) <= 1), default=-1))\n\treturn res\nprint(solve_test())\n \n \ndef solve_test():\n\tn = int(input())\n\tboys = sorted(map(int, input().split()))\n\tm = int(input())\n\tgirls = sorted(map(int, input().split()))\n\tres = 0\n\tfor i in boys:\n\t\tres += min((j for j in girls if abs(i - j) <= 1), default=-1) != -1\n\t\tgirls.remove(min((j for j in girls if abs(i - j) <= 1), default=-1))\n\treturn res\nprint(solve_test())\n \n \ndef solve_test():\n\tn = int(input())\n\tboys = sorted(map(int, input().split()))\n\tm = int(input())\n\tgirls = sorted(map(int, input().split()))\n\tres = 0\n\tfor i in boys:\n\t\tres += min((j for j in girls if abs(i - j) <= 1), default=-1) != -1\n\t\tgirls.remove(min((j for j in girls if abs(i - j) <= 1), default=-1))\n\treturn res\nprint(solve_test())\n \n \ndef solve_test():\n\tn = int(input())\n\tboys = sorted(map(int, input().split()))\n\tm = int(input())\n\tgirls = sorted(map(intruction, input().split()))\n\tres = 0\n\tfor i in boys:\n\t\tres += min((j for j in girls if abs(i - j) <= 1), default=-1) != -1\n\t\tgirls.remove(min((j for j in girls if abs(i - j) <= 1), default=-1))\n\treturn res\nprint(solve_test())\n \n \ndef solve_test():\n\tn = int(input())\n\tboys = sorted(map(int, input().split()))\n\tm = int(input())\n\tgirls = sorted(map(int, input().split()))\n\tres = 0\n\tfor i in boys:\n\t\tres += min((j for j in girls if abs(i - j) <= 1), default=-1) != -1\n\t\tgirls.remove",
            "def main():\n\t(n, *a) = map(int, open(0).read().split())\n\t(m, *b) = map(int, a[n:])\n\ta.sort()\n\tb.sort()\n\tprint(min(n, m, sum((abs(i - j) <= 1 for (i, j) in zip(a, b)))))\nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n \nmain()\n \n ",
            "n = int(input())\na = list(map(int, input().split()))\nm = int(input())\nb = list(map(int, input().split()))\na.sort()\nb.sort()\ni = 0\nj = 0\nres = 0\nwhile i < n and j < m:\n\tif abs(a[i] - b[j]) <= 1:\n\t\tres += 1\n\t\ti += 1\n\t\tj += 1\n\telif a[i] < b[j]:\n\t\ti += 1\n\telse:\n\t\tj += 1\nprint(res)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "input()\na = sorted(map(int, input().split()))\ninput()\nb = sorted(map(int, input().split()))\nprint(sum((i < j for (i, j) in zip(a, b))))\n \n\ndef main():\n\t(n, m) = (int(input()), int(input()))\n\ta = list(map(int, input().split()))\n\tb = list(map(int, input().split()))\n\ta.sort()\n\tb.sort()\n\tans = 0\n\tfor i in range(n):\n\t\tans += bisect.bisect_right(b, a[i])\n\tprint(ans)\nmain()\n \n\ndef main():\n\t(n, m) = (int(input()), int(input()))\n\ta = sorted(map(int, input().split()))\n\tb = sorted(map(intruction, input().split()))\n\tans = 0\n\tfor i in range(n):\n\t\tans += bisect.bisect_right(b, a[i])\n\tprint(ans)\nmain()\n \n\ndef main():\n\t(n, m) = (int(input()), int(input()))\n\ta = sorted(map(int, input().split()))\n\tb = sorted(map(int, input().split()))\n\tans = 0\n\tfor i in range(n):\n\t\tans += bisect.bisect_right(b, a[i])\n\tprint(ans)\nmain()\n \n\ndef main():\n\t(n, m) = (int(input()), int(input()))\n\ta = list(map(int, input().split()))\n\tb = list(map(int, input().split()))\n\ta.sort()\n\tb.sort()\n\tans = 0\n\tfor i in range(n):\n\t\tans += bisect.bisect_right(b, a[i])\n\tprint(ans)\nmain()\n \n\ndef main():\n\t(n, m) = (int(input()), int(input()))\n\ta = sorted(map(int, input().split()))\n\tb = sorted(map(int, input().split()))\n\tans = 0\n\tfor i in range(n):\n\t\tans += bisect.bisect_right(b, a[i])\n\tprint(ans)\nmain()\n \n\ndef main():\n\t(n, m) = (int(input()), int(input()))\n\ta = sorted(map(int, input().split()))\n\tb = sorted(map(int, input().split()))\n\tans = 0\n\tfor i in range(n):\n\t\tans += bisect.bisect_right(b, a[i])\n\tprint(ans)\nmain()\n \n\ndef main():\n\t(n, m) = (int(input()), int(input()))\n\ta = sorted(map(int, input().split()))\n\tb = sorted(map(int, input().split()))\n\tans = 0\n\tfor i in range(n):\n\t\tans += bisect.bisect_right(b, a[i])\n\tprint(ans)\nmain()\n \n\ndef main():\n\t(n, m) = (int(input()), int(input()))\n\ta = sorted(map(int, input().split()))\n\tb = sorted(map(int, input().split()))\n\tans = 0\n\tfor i in range(n):\n\t\tans += bisect.bisect_right(b",
            "import sys\n\ndef main():\n\tn = int(input())\n\ta = sorted(map(int, input().split()))\n\tm = int(input())\n\tb = sorted(map(int, input().split()))\n\ti = 0\n\tj = 0\n\tans = 0\n\twhile i < n and j < m:\n\t\tif abs(a[i] - b[j]) <= 1:\n\t\t\tans += 1\n\t\t\ti += 1\n\t\t\tj += 1\n\t\telif a[i] > b[j]:\n\t\t\tj += 1\n\t\telse:\n\t\t\ti += 1\n\tprint(ans)\nmain()\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "n = int(input())\na = sorted(list(map(int, input().split())))\nm = int(input())\nb = sorted(list(map(int, input().split())))\ni = 0\nj = 0\nwhile i < n and j < m:\n\tif a[i + 1] - a[i] <= 1 and b[j + 1] - b[j] <= 1:\n\t\ti += 1\n\t\tj += 1\n\telif a[i + 1] - a[i] <= 1:\n\t\tj += 1\n\telif b[j + 1] - b[j] <= 1:\n\t\ti += 1\n\telse:\n\t\tbreak\nprint(i + j)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "def __starting_point():\n\tn = int(input())\n\ta = [int(x) for x in input().split()]\n\tm = int(input())\n\tb = [int(x) for x in input().split()]\n\ta.sort()\n\tb.sort()\n\tans = 0\n\ti = 0\n\tj = 0\n\twhile i < n and j < m:\n\t\tif abs(a[i] - b[j]) <= 1:\n\t\t\tans += 1\n\t\t\ti += 1\n\t\t\tj += 1\n\t\telif a[i] < b[j]:\n\t\t\ti += 1\n\t\telse:\n\t\t\tj += 1\n\tprint(ans)\n__starting_point()\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "(n, a) = (int(input()), sorted(map(int, input().split())))\n(m, b) = (int(input()), sorted(map(int, input().split())))\nc = 0\nwhile a and b:\n\tif a[0] + 1 < b[0]:\n\t\ta.pop(0)\n\telse:\n\t\ta.pop(0)\n\t\tb.pop(0)\n\t\tc += 1\nprint(c)\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n ",
            "input()\nA = sorted(map(int, input().split()))\ninput()\nB = sorted(map(int, input().split()))\nprint(sum(abs(a - b) <= 1 for (a, b) in zip(A, B)))\n \n\ndef main():\n\tinput()\n\tA = sorted(map(int, input().split()))\n\tinput()\n\tB = sorted(map(int, input().split()))\n\tprint(sum(abs(a - b) <= 1 for (a, b) in zip(A, B)))\n \nmain()\n \n\ndef main():\n\tinput()\n\tA = sorted(map(int, input().split()))\n\tinput()\n\tB = sorted(map(int, input().split()))\n\tprint(sum(abs(a - b) <= 1 for (a, b) in zip(A, B)))\n \nmain()\n \n\ndef main():\n\tinput()\n\tA = sorted(map(int, input().split()))\n\tinput()\n\tB = sorted(map(int, input().split()))\n\tprint(sum(abs(a - b) <= 1 for (a, b) in zip(A, B)))\n \nmain()\n \n\ndef main():\n\tinput()\n\tA = sorted(map(int, input().split()))\n\tinput()\n\tB = sorted(map(int, input().split()))\n\tprint(sum(abs(a - b) <= 1 for (a, b) in zip(A, B)))\n \nmain()\n \n\ndef main():\n\tinput()\n\tA = sorted(map(int, input().split()))\n\tinput()\n\tB = sorted(map(int, input().split()))\n\tprint(sum(abs(a - b) <= 1 for (a, b) in zip(A, B)))\n \nmain()\n \n\ndef main():\n\tinput()\n\tA = sorted(map(int, input().split()))\n\tinput()\n\tB = sorted(map(int, input().split()))\n\tprint(sum(abs(a - b) <= 1 for (a, b) in zip(A, B)))\n \nmain()\n \n\ndef main():\n\tinput()\n\tA = sorted(map(int, input().split()))\n\tinput()\n\tB = sorted(map(int, input().split()))\n\tprint(sum(abs(a - b) <= 1 for (a, b) in zip(A, B)))\n \nmain()\n \n\ndef main():\n\tinput()\n\tA = sorted(map(int, input().split()))\n\tinput()\n\tB = sorted(map(int, input().split()))\n\tprint(sum(abs(a - b) <= 1 for (a, b) in zip(A, B)))\n \nmain()\n \n\ndef main():\n\tinput()\n\tA = sorted(map(int, input().split()))\n\tinput()\n\tB = sorted(map(int, input().split()))\n\tprint(sum(abs(a - b) <= 1 for (a, b) in zip(A, B)))\n \nmain()\n \n\ndef main():\n\tinput()\n\tA = sorted(map(int, input().split()))\n\tinput()\n\tB = sorted(map(int, input().split()))\n\tprint(sum(abs(a - b) <= 1 for (a, b) in zip(A,",
            "def main():\n\tinput()\n\tboys = sorted(map(int, input().split()))\n\tinput()\n\tgirls = sorted(map(int, input().split()))\n\tprint(sum((abs(a - b) <= 1 for (a, b) in zip(boys, girls))))\nmain()\n \n \ndef __starting_point():\n\tmain()\n \n\n__starting_point()\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "input()\na = sorted(map(int, input().split()))\ninput()\nb = sorted(map(int, input().split()))\nprint(sum(abs(i - j) <= 1 for (i, j) in zip(a, b)))\n \n\n\n\n \n\n \n\n \n\n \n \n \n \n\n \n \n \n \n \n\n \n \n \n\n \n \n \n \n \n \n \n\n \n \n \n \n\n \n \n \n\n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n\n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n",
            "a = input()\nb = [*map(int, input().split())]\nc = input()\nd = [*map(int, input().split())]\nprint(max([min(b.count(x), d.count(x), d.count(x - 1), b.count(x - 1)) for x in range(1, 101)]))\n \n\n\n\n\n\n \n \n\n \n \n \n \n \n \n \n \n \n \n \n\n \n \n \n\n\n\n \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n\n \n \n \n \n \n\n\n\n \n \n\n \n \n \n \n \n \n \n\n \n \n \n \n \n \n \n\n \n \n \n\n\n\n \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n\n \n \n \n\n\n\n \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n\n \n \n \n \n \n\n\n\n \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n \n \n\n\n\n \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n\n \n \n \n\n\n\n \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n\n \n \n \n \n \n\n\n\n \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n \n \n\n\n\n \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n \n \n \n \n\n\n\n \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n\n \n \n \n \n \n\n\n\n \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n \n \n \n \n\n\n\n \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n \n \n \n \n\n\n\n \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n \n \n \n \n\n\n\n \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n \n \n \n \n\n\n\n \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n \n \n \n \n\n\n\n \n \n\n \n \n \n \n \n \n \n \n "
        ]
    },
    {
        "task_id": 17,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: PolandBall is playing a game with EnemyBall. The rules are simple. Players have to say words in turns. You cannot say a word which was already said. PolandBall starts. The Ball which can't say a new word loses.\n\nYou're given two lists of words familiar to PolandBall and EnemyBall. Can you determine who wins the game, if both play optimally?\n\n\n-----Input-----\n\nThe first input line contains two integers n and m (1 \u2264 n, m \u2264 10^3)\u00a0\u2014 number of words PolandBall and EnemyBall know, respectively.\n\nThen n strings follow, one per line\u00a0\u2014 words familiar to PolandBall.\n\nThen m strings follow, one per line\u00a0\u2014 words familiar to EnemyBall.\n\nNote that one Ball cannot know a word more than once (strings are unique), but some words can be known by both players.\n\nEach word is non-empty and consists of no more than 500 lowercase English alphabet letters.\n\n\n-----Output-----\n\nIn a single line of print the answer\u00a0\u2014 \"YES\" if PolandBall wins and \"NO\" otherwise. Both Balls play optimally.\n\n\n-----Examples-----\nInput\n5 1\npolandball\nis\na\ncool\ncharacter\nnope\n\nOutput\nYES\nInput\n2 2\nkremowka\nwadowicka\nkremowka\nwiedenska\n\nOutput\nYES\nInput\n1 2\na\na\nb\n\nOutput\nNO\n\n\n-----Note-----\n\nIn the first example PolandBall knows much more words and wins effortlessly.\n\nIn the second example if PolandBall says kremowka first, then EnemyBall cannot use that word anymore. EnemyBall can only say wiedenska. PolandBall says wadowicka and wins. \n\n### Response:\n",
        "output": [
            "(n, m) = map(int, input().split())\na = set(input() for _ in range(n))\nb = set(input() for _ in range(m))\nif a == b:\n\tprint('NO')\nelse:\n\tprint('YES')\n \n \ninput = __builtin_input\n \n \ndef __starting_point():\n\tmain()\n \n\n__starting_point()\n \n \n__startingruction_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n \n__starting_point()\n \n ",
            "(n, m) = map(int, input().split())\na = set(input() for i in range(n))\nb = set(input() for i in range(m))\nprint('YES' if a & b else 'NO')\n \n\nI = input\nI()\nprint('YES' if set(I() for i in [0] * int(I())) & set(I() for i in [0] * int(I())) else 'NO')\n \n\nI = input\nI()\nprint('YES' if set(I() for i in [0] * int(I())) & set(I() for i in [0] * int(I())) else 'NO')\n \n\nI = input\nI()\nprint('YES' if set(I() for i in [0] * int(I())) & set(I() for i in [0] * int(I())) else 'NO')\n \n\nI = input\nI()\nprint('YES' if set(I() for i in [0] * int(I())) & set(I() for i in [0] * int(I())) else 'NO')\n \n\nI = input\nI()\nprint('YES' if set(I() for i in [0] * int(I())) & set(I() for i in [0] * int(I())) else 'NO')\n \n\nI = input\nI()\nprint('YES' if set(I() for i in [0] * int(I())) & set(I() for i in [0] * int(I())) else 'NO')\n \n\nI = input\nI()\nprint('YES' if set(I() for i in [0] * int(I())) & set(I() for i in [0] * int(I())) else 'NO')\n \n\nI = input\nI()\nprint('YES' if set(I() for i in [0] * int(I())) & set(I() for i in [0] * int(I())) else 'NO')\n \n\nI = input\nI()\nprint('YES' if set(I() for i in [0] * int(I())) & set(I() for i in [0] * int(I())) else 'NO')\n \n\nI = input\nI()\nprint('YES' if set(I() for i in [0] * int(I())) & set(I() for i in [0] * int(I())) else 'NO')\n \n\nI = input\nI()\nprint('YES' if set(I() for i in [0] * int(I())) & set(I() for i in [0] * int(I())) else 'NO')\n \n\nI = input\nI()\nprint('YES' if set(I() for i in [0] * int(I())) & set(I() for i in [0] * int(I())) else 'NO')\n \n\nI = input\nI()\nprint('YES' if set(I() for i in [0] * int(I())) & set(I() for i in [0] * int(I())) else 'NO')\n \n\nI = input\nI()\nprint('YES' if set(I() for i in [0] * int(I())) & set(I() for i in [0] * int(I())) else 'NO')\n \n\nI = input\nI()\nprint('YES'",
            "(n, m) = map(int, input().split())\ns = set(input() for _ in range(n))\nfor _ in range(m):\n\tw = input()\n\tif w not in s:\n\t\tprint('YES')\n\t\texit()\nprint('NO')\n \n \ninput = __builtin__.input\n \ndef main():\n\t(n, m) = map(int, input().split())\n\ts = set(input() for _ in range(n))\n\tfor _ in range(m):\n\t\tw = input()\n\t\tif w not in s:\n\t\t\tprint('YES')\n\t\t\treturn\n\tprint('NO')\nmain()\n \n \n\n \n \n \n\n \n \n \n\n \n \n \n \n\n \n \n \n\n \n \n \n \n \n \n \n \n\n \n \n \n\n \n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n",
            "(n, m) = map(int, input().split())\na = set(input() for _ in range(n))\nb = set(input() for _ in range(m))\nprint('YES' if a & b else 'NO')\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "(n, m) = map(int, input().split())\np = set([input() for _ in range(n)])\ne = set([input() for _ in range(m)])\nprint('YES' if p - e else 'NO')\n \n \ninput = __builtin_eval\n ",
            "(n, m) = map(int, input().split())\npl = set(input() for _ in range(n))\nen = set(input() for _ in range(m))\nprint('YES' if pl == pl & en else 'NO')\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "(n, m) = map(int, input().split())\na = set()\nfor i in range(n):\n\ta.add(input())\nfor i in range(m):\n\tb = input()\n\tif b in a:\n\t\tprint('YES')\n\t\texit()\nprint('NO')\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "(n, m) = map(int, input().split())\na = [input() for i in range(n)]\nb = [input() for i in range(m)]\nfor i in b:\n\tif i not in a:\n\t\tprint('NO')\n\t\texit()\nprint('YES')\n \n \ninput = __builtin__.input\n \n \ndef main():\n\t(n, m) = map(int, input().split())\n\ta = [input() for i in range(n)]\n\tb = [input() for i in range(m)]\n\tfor i in b:\n\t\tif i not in a:\n\t\t\tprint('NO')\n\t\t\treturn\n\tprint('YES')\nmain()\n \nmain()\n \ninput = __builtin__.input\n \n \ndef main():\n\t(n, m) = map(int, input().split())\n\ta = [input() for i in range(n)]\n\tb = [input() for i in range(m)]\n\tfor i in b:\n\t\tif i not in a:\n\t\t\tprint('NO')\n\t\t\treturn\n\tprint('YES')\nmain()\n \nmain()\n \ninput = __builtin__.input\n \n \ndef main():\n\t(n, m) = map(int, input().split())\n\ta = [input() for i in range(n)]\n\tb = [input() for i in range(m)]\n\tfor i in b:\n\t\tif i not in a:\n\t\t\tprint('NO')\n\t\t\treturn\n\tprint('YES')\nmain()\n \nmain()\n \ninput = __builtin__.input\n \n \ndef main():\n\t(n, m) = map(intruction, input().split())\n\ta = [input() for i in range(n)]\n\tb = [input() for i in range(m)]\n\tfor i in b:\n\t\tif i not in a:\n\t\t\tprint('NO')\n\t\t\treturn\n\tprint('YES')\nmain()\n \nmain()\n \ninput = __builtin__.input\n \n \ndef main():\n\t(n, m) = map(int, input().split())\n\ta = [input() for i in range(n)]\n\tb = [input() for i in range(m)]\n\tfor i in b:\n\t\tif i not in a:\n\t\t\tprint('NO')\n\t\t\treturn\n\tprint('YES')\nmain()\n \nmain()\n \ninput = __builtin__.input\n \n \ndef main():\n\t(n, m) = map(int, input().split())\n\ta = [input() for i in range(n)]\n\tb = [input() for i in range(m)]\n\tfor i in b:\n\t\tif i not in a:\n\t\t\tprint('NO')\n\t\t\treturn\n\tprint('YES')\nmain()\n \nmain()\n \ninput = __builtin__.input\n \n \ndef main():\n\t(n, m) = map(int, input().split())\n\ta = [input() for i in range(n)]\n\tb = [input() for i in range(m)]\n\tfor i in b:\n\t\tif i not in a:\n\t\t\tprint('NO')\n\t\t\treturn\n\tprint('YES')\nmain()\n \nmain()\n \ninput = __builtin__.input\n \n \ndef main():",
            "(n, m) = map(int, input().split())\np = set(input() for _ in range(n))\ne = set(input() for _ in range(m))\nprint('YES' if p & e == p else 'NO')\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "R = lambda : map(int, input().split())\n(n, m) = R()\na = [input() for _ in [0] * n]\nb = [input() for _ in [0] * m]\nprint('YNEOS'[set(a) != set(b)::2])\n \n\nI = lambda : input()\n(n, m) = map(int, I().split())\na = [I() for _ in [0] * n]\nb = [I() for _ in [0] * m]\nprint('YNEOS'[set(a) != set(b)::2])\n \n\nI = lambda : input()\n(n, m) = map(int, I().split())\na = [I() for _ in [0] * n]\nb = [I() for _ in [0] * m]\nprint('YNEOS'[set(a) != set(b)::2])\n \n\nI = lambda : input()\n(n, m) = map(intruction, I().split())\na = [I() for _ in [0] * n]\nb = [I() for _ in [0] * m]\nprint('YNEOS'[set(a) != set(b)::2])\n \n\nI = lambda : input()\n(n, m) = map(int, I().split())\na = [I() for _ in [0] * n]\nb = [I() for _ in [0] * m]\nprint('YNEOS'[set(a) != set(b)::2])\n \n\nI = lambda : input()\n(n, m) = map(int, I().split())\na = [I() for _ in [0] * n]\nb = [I() for _ in [0] * m]\nprint('YNEOS'[set(a) != set(b)::2])\n \n\nI = lambda : input()\n(n, m) = map(int, I().split())\na = [I() for _ in [0] * n]\nb = [I() for _ in [0] * m]\nprint('YNEOS'[set(a) != set(b)::2])\n \n\nI = lambda : input()\n(n, m) = map(int, I().split())\na = [I() for _ in [0] * n]\nb = [I() for _ in [0] * m]\nprint('YNEOS'[set(a) != set(b)::2])\n \n\nI = lambda : input()\n(n, m) = map(int, I().split())\na = [I() for _ in [0] * n]\nb = [I() for _ in [0] * m]\nprint('YNEOS'[set(a) != set(b)::2])\n \n\nI = lambda : input()\n(n, m) = map(int, I().split())\na = [I() for _ in [0] * n]\nb = [I() for _ in [0] * m]\nprint('YNEOS'[set(a) != set(b)::2])\n \n\nI = lambda : input()\n(n, m) = map(int, I().split())\na = [I() for",
            "n = int(input())\nA = set(input() for _ in range(n))\nm = int(input())\nB = set(input() for _ in range(m))\nprint('YNEOS'[min(A - B) != min(B - A)::2])\n \n\n\n\n",
            "(n, m) = map(int, input().split())\na = set([input() for i in range(n)])\nb = set([input() for i in range(m)])\nprint('YES' if a & b == a else 'NO')\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "(n, m) = map(int, input().split())\na = set(input() for i in range(n))\nb = set(input() for i in range(m))\nprint('YES' if a & b == a else 'NO')\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "(n, m) = map(int, input().split())\np = [input() for _ in range(n)]\ne = [input() for _ in range(m)]\nprint('YES' if set(p) & set(e) == set(p) else 'NO')\n \n \ninput = __builtins__.input\n \nn = int(input())\na = [int(x) for x in input().split()]\nprint(max(a) - min(a))\n ",
            "(n, m) = map(int, input().split())\na = set(input() for i in range(n))\nb = set(input() for i in range(m))\nprint('YES' if a - b else 'NO')\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "(n, m) = map(int, input().split())\na = set([input() for i in range(n)])\nb = set([input() for i in range(m)])\nprint('YES' if a & b else 'NO')\n \n \ninput = __builtin__.input\n \n \ndef main():\n\t(n, m) = map(int, input().split())\n\tA = set(input() for i in range(n))\n\tB = set(input() for i in range(m))\n\tprint('YES' if A & B else 'NO')\nmain()\n \n \nexec(input().strip())\n \n\n \ndef main():\n\t(n, m) = map(int, input().split())\n\tA = set(input() for _ in range(n))\n\tB = set(input() for _ in range(m))\n\tprint('YES' if A & B else 'NO')\nmain()\n \n \nexec(input().strip())\n \n\n \ndef main():\n\t(n, m) = map(intruction, input().split())\n\tA = set(input() for _ in range(n))\n\tB = set(input() for _ in range(m))\n\tprint('YES' if A & B else 'NO')\nmain()\n \n \nexec(input().strip())\n \n\n \ndef main():\n\t(n, m) = map(int, input().split())\n\tA = set(input() for _ in range(n))\n\tB = set(input() for _ in range(m))\n\tprint('YES' if A & B else 'NO')\nmain()\n \n \nexec(input().strip())\n \n\n \ndef main():\n\t(n, m) = map(int, input().split())\n\tA = set(input() for _ in range(n))\n\tB = set(input() for _ in range(m))\n\tprint('YES' if A & B else 'NO')\nmain()\n \n \nexec(input().strip())\n \n\n \ndef main():\n\t(n, m) = map(int, input().split())\n\tA = set(input() for _ in range(n))\n\tB = set(input() for _ in range(m))\n\tprint('YES' if A & B else 'NO')\nmain()\n \n \nexec(input().strip())\n \n\n \ndef main():\n\t(n, m) = map(int, input().split())\n\tA = set(input() for _ in range(n))\n\tB = set(input() for _ in range(m))\n\tprint('YES' if A & B else 'NO')\nmain()\n \n \nexec(input().strip())\n \n\n \ndef main():\n\t(n, m) = map(int, input().split())\n\tA = set(input() for _ in range(n))\n\tB = set(input() for _ in range(m))\n\tprint('YES' if A & B else 'NO')\nmain()\n \n \nexec(input().strip())\n \n\n \ndef main():\n\t(n, m) = map(int, input().split())\n\tA = set(input() for _ in range(n))\n\tB = set(input() for _ in range(m))\n\tprint('YES' if A & B",
            "(n, m) = map(int, input().split())\na = set(input() for _ in range(n))\nb = set(input() for _ in range(m))\nprint('YES' if a & b else 'NO')\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "(n, m) = map(int, input().split())\na = set(input() for i in range(n))\nb = set(input() for i in range(m))\nif a & b:\n\tprint('NO')\nelse:\n\tprint('YES')\n \n \ninput = __builtin__.input\n \n \ndef readline():\n\treturn input().strip()\n \n\ndef readint():\n\treturn int(readline())\n \n\ndef readints():\n\treturn list(map(int, readline().split()))\n \n\ndef readstr():\n\treturn readline()\n \n\ndef readstrs():\n\treturn list(readline().split())\n \n\ndef solve():\n\t(n, m) = readints()\n\ta = set(readstr() for i in range(n))\n\tb = set(readstr() for i in range(m))\n\tif a & b:\n\t\tprint('NO')\n\telse:\n\t\tprint('YES')\n \n\nsolve()\n \n\ndef main():\n\tsolve()\n \n\nmain()\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef __starting_point():\n\tmain()",
            "(n, m) = map(int, input().split())\np = set(input() for i in range(n))\ne = set(input() for i in range(m))\nprint('YES' if p <= e else 'NO')\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n",
            "(n, m) = map(int, input().split())\na = [input() for i in range(n)]\nb = [input() for i in range(m)]\nprint('YES' if all((x in b for x in a)) else 'NO')\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n"
        ]
    },
    {
        "task_id": 18,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: Everyone knows that agents in Valorant decide, who will play as attackers, and who will play as defenders. To do that Raze and Breach decided to play $t$ matches of a digit game...\n\nIn each of $t$ matches of the digit game, a positive integer is generated. It consists of $n$ digits. The digits of this integer are numerated from $1$ to $n$ from the highest-order digit to the lowest-order digit. After this integer is announced, the match starts.\n\nAgents play in turns. Raze starts. In one turn an agent can choose any unmarked digit and mark it. Raze can choose digits on odd positions, but can not choose digits on even positions. Breach can choose digits on even positions, but can not choose digits on odd positions. The match ends, when there is only one unmarked digit left. If the single last digit is odd, then Raze wins, else Breach wins.\n\nIt can be proved, that before the end of the match (for every initial integer with $n$ digits) each agent has an ability to make a turn, i.e. there is at least one unmarked digit, that stands on a position of required parity.\n\nFor each of $t$ matches find out, which agent wins, if both of them want to win and play optimally.\n\n\n-----Input-----\n\nFirst line of input contains an integer $t$ $(1 \\le t \\le 100)$ \u00a0\u2014 the number of matches.\n\nThe first line of each match description contains an integer $n$ $(1 \\le n \\le 10^3)$ \u00a0\u2014 the number of digits of the generated number.\n\nThe second line of each match description contains an $n$-digit positive integer without leading zeros.\n\n\n-----Output-----\n\nFor each match print $1$, if Raze wins, and $2$, if Breach wins.\n\n\n-----Example-----\nInput\n4\n1\n2\n1\n3\n3\n102\n4\n2069\n\nOutput\n2\n1\n1\n2\n\n\n\n-----Note-----\n\nIn the first match no one can make a turn, the only digit left is $2$, it's even, so Breach wins.\n\nIn the second match the only digit left is $3$, it's odd, so Raze wins.\n\nIn the third match Raze can mark the last digit, after that Breach can only mark $0$. $1$ will be the last digit left, it's odd, so Raze wins.\n\nIn the fourth match no matter how Raze plays, Breach can mark $9$, and in the end there will be digit $0$. It's even, so Breach wins. \n\n### Response:\n",
        "output": [
            "for s in [*open(0)][2::2]:\n\tprint(2 - any(int(c) % 2 for c in s.strip()))\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n ",
            "for _ in range(int(input())):\n\tn = int(input())\n\tx = input()\n\tprint(2 if x[-1] in '24680' else 1)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\tprint(1 if s[int(s[-2]) & 1] in '02468' else 2)\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n",
            "for s in [*open(0)][2::2]:\n\tprint(2 if '0' in s else 1)\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n",
            "t = int(input())\nfor i in range(t):\n\tn = int(input())\n\ts = input()\n\tprint(2 if s[-1] == '2' or s[-1] == '4' or s[-1] == '6' or s[-1] == '8' else 1)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = input()\n\tprint(1 if (sum((int(x) & 1) for x in a[::2]) + sum((int(x) & 1 ^ 1 for x in a[1::2]))) else 2)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\tn = int(input())\n\tprint(1 if n % 2 else 2)\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n",
            "for _ in range(int(input())):\n\tn = int(input())\n\ts = input()\n\tans = [0, 0]\n\tfor i in range(n):\n\t\tans[i & 1] += int(s[i])\n\tprint(ans[0] > ans[1])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\tinput()\n\tprint(1 if int(input()) % 2 else 2)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for i in range(int(input())):\n\tinput()\n\tprint('2' if '0' in input() else '1')\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = input()\n\tif n % 2 == 0:\n\t\tprint(2)\n\telse:\n\t\tprint(1)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = input()\n\tif n % 2 == 0:\n\t\tprint(2)\n\telse:\n\t\tprint(1)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = input()\n\tif n % 2 == 0:\n\t\tprint(2)\n\telse:\n\t\tprint(1)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = input()\n\tif n % 2 == 0:\n\t\tprint(2)\n\telse:\n\t\tprint(1)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = input()\n\tif n % 2 == 0:\n\t\tprint(2)\n\telse:\n\t\tprint(1)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = input()\n\tif n % 2 == 0:\n\t\tprint(2)\n\telse:\n\t\tprint(1)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = input()\n\tif n % 2 == 0:\n\t\tprint(2)\n\telse:\n\t\tprint(1)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = input()\n\tif n % 2 == 0:\n\t\tprint(2)\n\telse:\n\t\tprint(1)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = input()\n\tif n % 2 == 0:\n\t\tprint(2)\n\telse:\n\t\tprint(1)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = input()\n\tif n % 2 == 0:\n\t\tprint(2)\n\telse:\n\t\tprint(1)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = input()\n\tif n % 2 == 0:\n\t\tprint(2)\n\telse:\n\t\tprint(1)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = input()\n\tif n % 2 == 0:\n\t\tprint(2)\n\telse:\n\t\tprint(1)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = input()\n\tif n % 2 == 0:\n\t\tprint(2)\n\telse:\n\t\tprint(1)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = input()\n\tif n % 2 == 0:\n\t\tprint(2)\n\telse:\n\t\tprint(1)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = input()\n\tif n % 2",
            "for _ in range(int(input())):\n\tn = int(input())\n\tx = input()\n\tprint(2 if x.count('0') % 2 else 1)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, list(input())))\n\tprint(1 if sum(a) % 2 else 2)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for i in range(int(input())):\n\tinput()\n\tprint(2 - int(input()[0]) % 2)\n \n\n\n\n\n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = input()\n\tif n % 2 == 1:\n\t\tprint(1)\n\telif n % 2 == 0:\n\t\tprint(2)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = input()\n\tif n % 2 == 1:\n\t\tprint(1)\n\telif n % 2 == 0:\n\t\tprint(2)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = input()\n\tif n % 2 == 1:\n\t\tprint(1)\n\telif n % 2 == 0:\n\t\tprint(2)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = input()\n\tif n % 2 == 1:\n\t\tprint(1)\n\telif n % 2 == 0:\n\t\tprint(2)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = input()\n\tif n % 2 == 1:\n\t\tprint(1)\n\telif n % 2 == 0:\n\t\tprint(2)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = input()\n\tif n % 2 == 1:\n\t\tprint(1)\n\telif n % 2 == 0:\n\t\tprint(2)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = input()\n\tif n % 2 == 1:\n\t\tprint(1)\n\telif n % 2 == 0:\n\t\tprint(2)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = input()\n\tif n % 2 == 1:\n\t\tprint(1)\n\telif n % 2 == 0:\n\t\tprint(2)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = input()\n\tif n % 2 == 1:\n\t\tprint(1)\n\telif n % 2 == 0:\n\t\tprint(2)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = input()\n\tif n % 2 == 1:\n\t\tprint(1)\n\telif n % 2 == 0:\n\t\tprint(2)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = input()\n\tif n % 2 == 1:\n\t\tprint(1)\n\telif n % 2 == 0:\n\t\tprint(2)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = input()\n\tif n % 2 == 1:\n\t\tprint(1)\n\telif n % 2 == 0:\n\t\tprint(2)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = input()\n\tif n % 2 == 1:\n\t\tprint(1)\n\telif",
            "for s in [*open(0)][2::2]:\n\tprint(2 if '0' in s else 1)\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n",
            "for _ in range(int(input())):\n\tn = int(input())\n\ts = input()\n\tif s[0] == '0':\n\t\tprint(2)\n\telse:\n\t\tprint(1)\n \n \ninput = __builtins__.input\n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = input()\n\tprint(2 if a[0] == '0' else 1)\n \n \nimport sys\nfor _ in [0] * int(sys.stdin.readline()):\n\tn = int(sys.stdin.readline())\n\tsys.stdout.write('1' if int(sys.stdin.readline()) & 1 else '2')\n \n \ninput = __builtins__.input\nfor _ in range(int(input())):\n\tn = int(input())\n\ts = input()\n\tprint(2 if s[0] == '0' else 1)\n \n \nimport sys\nfor _ in [0] * int(sys.stdin.readline()):\n\tn = int(sys.stdin.readline())\n\tsys.stdout.write('1' if int(sys.stdin.readline()) & 1 else '2')\n \n \ninput = __builtins__.input\nfor _ in range(int(input())):\n\tn = int(input())\n\ts = input()\n\tprint(2 if s[0] == '0' else 1)\n \n \nimport sys\nfor _ in [0] * int(sys.stdin.readline()):\n\tn = int(sys.stdin.readline())\n\tsys.stdout.write('1' if int(sys.stdin.readline()) & 1 else '2')\n \n \ninput = __builtins__.input\nfor _ in range(int(input())):\n\tn = int(input())\n\ts = input()\n\tprint(2 if s[0] == '0' else 1)\n \n \nimport sys\nfor _ in [0] * int(sys.stdin.readline()):\n\tn = int(sys.stdin.readline())\n\tsys.stdout.write('1' if int(sys.stdin.readline()) & 1 else '2')\n \n \ninput = __builtins__.input\nfor _ in range(int(input())):\n\tn = int(input())\n\ts = input()\n\tprint(2 if s[0] == '0' else 1)\n \n \nimport sys\nfor _ in [0] * int(sys.stdin.readline()):\n\tn = int(sys.stdin.readline())\n\tsys.stdout.write('1' if int(sys.stdin.readline()) & 1 else '2')\n \n \ninput = __builtins__.input\nfor _ in range(int(input())):\n\tn = int(input())\n\ts = input()\n\tprint(2 if s[0] == '0' else 1)\n \n \nimport sys\nfor _ in [0] * int(sys.stdin.readline()):\n\tn = int(sys.stdin.readline())\n\tsys.stdout.write('1' if int(sys.stdin.readline()) & 1 else '2')\n \n",
            "for _ in range(int(input())):\n\tn = int(input())\n\tprint(2 if n % 2 else 1)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = input()\n\tprint(1 if n % 2 == 0 else 2)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = input()\n\tfor i in range(n):\n\t\tif (a[i] in '13579' and i % 2 == 0) or (a[i] in '02468' and i % 2):\n\t\t\tprint(2)\n\t\t\tbreak\n\telse:\n\t\tprint(1)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n "
        ]
    },
    {
        "task_id": 19,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: Monocarp had a sequence $a$ consisting of $n + m$ integers $a_1, a_2, \\dots, a_{n + m}$. He painted the elements into two colors, red and blue; $n$ elements were painted red, all other $m$ elements were painted blue.\n\nAfter painting the elements, he has written two sequences $r_1, r_2, \\dots, r_n$ and $b_1, b_2, \\dots, b_m$. The sequence $r$ consisted of all red elements of $a$ in the order they appeared in $a$; similarly, the sequence $b$ consisted of all blue elements of $a$ in the order they appeared in $a$ as well.\n\nUnfortunately, the original sequence was lost, and Monocarp only has the sequences $r$ and $b$. He wants to restore the original sequence. In case there are multiple ways to restore it, he wants to choose a way to restore that maximizes the value of\n\n$$f(a) = \\max(0, a_1, (a_1 + a_2), (a_1 + a_2 + a_3), \\dots, (a_1 + a_2 + a_3 + \\dots + a_{n + m}))$$\n\nHelp Monocarp to calculate the maximum possible value of $f(a)$.\n\n\n-----Input-----\n\nThe first line contains one integer $t$ ($1 \\le t \\le 1000$) \u2014 the number of test cases. Then the test cases follow. Each test case consists of four lines.\n\nThe first line of each test case contains one integer $n$ ($1 \\le n \\le 100$).\n\nThe second line contains $n$ integers $r_1, r_2, \\dots, r_n$ ($-100 \\le r_i \\le 100$).\n\nThe third line contains one integer $m$ ($1 \\le m \\le 100$).\n\nThe fourth line contains $m$ integers $b_1, b_2, \\dots, b_m$ ($-100 \\le b_i \\le 100$).\n\n\n-----Output-----\n\nFor each test case, print one integer \u2014 the maximum possible value of $f(a)$.\n\n\n-----Examples-----\n\nInput\n4\n4\n6 -5 7 -3\n3\n2 3 -4\n2\n1 1\n4\n10 -3 2 2\n5\n-1 -2 -3 -4 -5\n5\n-1 -2 -3 -4 -5\n1\n0\n1\n0\nOutput\n13\n13\n0\n0\n\n\n-----Note-----\n\nIn the explanations for the sample test cases, red elements are marked as bold.\n\nIn the first test case, one of the possible sequences $a$ is $[\\mathbf{6}, 2, \\mathbf{-5}, 3, \\mathbf{7}, \\mathbf{-3}, -4]$.\n\nIn the second test case, one of the possible sequences $a$ is $[10, \\mathbf{1}, -3, \\mathbf{1}, 2, 2]$.\n\nIn the third test case, one of the possible sequences $a$ is $[\\mathbf{-1}, -1, -2, -3, \\mathbf{-2}, -4, -5, \\mathbf{-3}, \\mathbf{-4}, \\mathbf{-5}]$.\n\nIn the fourth test case, one of the possible sequences $a$ is $[0, \\mathbf{0}]$. \n\n### Response:\n",
        "output": [
            "for s in [*open(0)][2::4]:\n\tprint(max(sum(int(i) for i in s.split()) - min(map(int, s.split()))))\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n ",
            "for s in [*open(0)][2::4]:\n\tprint(max(map(sum, zip(*[iter(map(int, s.split()))] * 2))))\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n",
            "for s in [*open(0)][2::4]:\n\ta = [*map(int, s.split())]\n\tprint(max((a[i] - a[i + 1] for i in range(len(a) - 1))))\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n ",
            "for s in [*open(0)][2::4]:\n\ta = [*map(int, s.split())]\n\tprint(sum(a) + sum(max(0, sum(a[:i + 1])) for i in range(len(a))))\n \n\n \n\n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\tn = int(input())\n\tr = list(map(int, input().split()))\n\tm = int(input())\n\tb = list(map(int, input().split()))\n\tans = 0\n\ts = 0\n\tfor i in r:\n\t\ts += i\n\t\tans = max(ans, s)\n\ts = 0\n\tfor i in b:\n\t\ts += i\n\t\tans = max(ans, s)\n\tprint(ans)\n \n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n",
            "for s in [*open(0)][2::4]:\n\tprint(max(map(sum, zip(*[iter(map(int, s.split()))] * 2))))\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n",
            "for _ in range(int(input())):\n\tn = int(input())\n\tr = list(map(int, input().split()))\n\tm = int(input())\n\tb = list(map(int, input().split()))\n\tr.sort()\n\tb.sort()\n\ts = sum(r) + sum(b)\n\tans = s\n\tfor i in range(n):\n\t\ts -= r[i]\n\t\ts += b[i]\n\t\tans = max(ans, s)\n\tprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\tn = int(input())\n\tr = list(map(int, input().split()))\n\tm = int(input())\n\tb = list(map(int, input().split()))\n\tr.sort(reverse=True)\n\tb.sort(reverse=True)\n\tans = sum(r)\n\tfor i in range(n):\n\t\tans += r[i] * (i + 1)\n\tans = max(ans, 0)\n\tfor i in range(m):\n\t\tans += b[i] * (i + 1)\n\tans = max(ans, 0)\n\tprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::4]:\n\tr = [*map(int, s.split())]\n\tprint(max((sum(r[:i]) for i in range(len(r) + 1))))\n \n \nfor s in [*open(0)][3::4]:\n\tr = [*map(int, s.split())]\n\tprint(max((sum(r[:i]) for i in range(len(r) + 1))))\n \nprint(0)\nprint(0)\n \nfor s in [*open(0)][5::4]:\n\tr = [*map(int, s.split())]\n\tprint(max((sum(r[:i]) for i in range(len(r) + 1))))\n \nprint(0)\n \nfor s in [*open(0)][7::4]:\n\tr = [*map(int, s.split())]\n\tprint(max((sum(r[:i]) for i in range(len(r) + 1))))\n \nprint(0)\n \nfor s in [*open(0)][9::4]:\n\tr = [*map(int, s.split())]\n\tprint(max((sum(r[:i]) for i in range(len(r) + 1))))\n \nprint(0)\n \nfor s in [*open(0)][11::4]:\n\tr = [*map(int, s.split())]\n\tprint(max((sum(r[:i]) for i in range(len(r) + 1))))\n \nprint(0)\n \nfor s in [*open(0)][13::4]:\n\tr = [*map(int, s.split())]\n\tprint(max((sum(r[:i]) for i in range(len(r) + 1))))\n \nprint(0)\n \nfor s in [*open(0)][15::4]:\n\tr = [*map(int, s.split())]\n\tprint(max((sum(r[:i]) for i in range(len(r) + 1))))\n \nprint(0)\n \nfor s in [*open(0)][17::4]:\n\tr = [*map(int, s.split())]\n\tprint(max((sum(r[:i]) for i in range(len(r) + 1))))\n \nprint(0)\n \nfor s in [*open(0)][19::4]:\n\tr = [*map(int, s.split())]\n\tprint(max((sum(r[:i]) for i in range(len(r) + 1))))\n \nprint(0)\n \nfor s in [*open(0)][21::4]:\n\tr = [*map(int, s.split())]\n\tprint(max((sum(r[:i]) for i in range(len(r) + 1))))\n \nprint(0)\n \nfor s in [*open(0)][23::4]:\n\tr = [*map(int, s.split())]\n\tprint(max((sum(r[:i]) for i in range(len(r) + 1))))\n \nprint(0)\n \nfor s in [*open(0)][25::4]:\n\tr = [*map(int,",
            "R = lambda : map(int, input().split())\n(t,) = R()\nfor _ in range(t):\n\t(n,) = R()\n\tr = [*R()]\n\t(m,) = R()\n\tb = [*R()]\n\tr.sort()\n\tb.sort(reverse=True)\n\tprint(max((sum(r[:i]) + sum(b[:i]) for i in range(1, n + m + 1))))\n \n \nfor _ in range(t):\n\t(n,) = R()\n\tr = [*R()]\n\t(m,) = R()\n\tb = [*R()]\n\tr.sort()\n\tb.sort(reverse=True)\n\tprint(max((sum(r[:i]) + sum(b[:i]) for i in range(1, n + m + 1))))\n \nfor _ in range(t):\n\tprint(max(0, *R()))\nfor _ in range(t):\n\tprint(max(0, *R()))\n \nfor _ in range(t):\n\t(n,) = R()\n\tr = [*R()]\n\t(m,) = R()\n\tb = [*R()]\n\tr.sort()\n\tb.sort(reverse=True)\n\tprint(max((sum(r[:i]) + sum(b[:i]) for i in range(1, n + m + 1))))\n \n \nfor _ in range(t):\n\t(n,) = R()\n\tr = [*R()]\n\t(m,) = R()\n\tb = [*R()]\n\tr.sort()\n\tb.sort(reverse=True)\n\tprint(max((sum(r[:i]) + sum(b[:i]) for i in range(1, n + m + 1))))\n \nfor _ in range(t):\n\tprint(max(0, *R()))\nfor _ in range(t):\n\tprint(max(0, *R()))\n \nfor _ in range(t):\n\t(n,) = R()\n\tr = [*R()]\n\t(m,) = R()\n\tb = [*R()]\n\tr.sort()\n\tb.sort(reverse=True)\n\tprint(max((sum(r[:i]) + sum(b[:i]) for i in range(1, n + m + 1))))\n \n \nfor _ in range(t):\n\t(n,) = R()\n\tr = [*R()]\n\t(m,) = R()\n\tb = [*R()]\n\tr.sort()\n\tb.sort(reverse=True)\n\tprint(max((sum(r[:i]) + sum(b[:i]) for i in range(1, n + m + 1))))\n \nfor _ in range(t):\n\tprint(max(0, *R()))\nfor _ in range(t):\n\tprint(max(0, *R()))\n \nfor _ in range(t):\n\t(n,) = R()\n\tr = [*R()]\n\t(m,) = R()\n\tb = [*R()]\n\tr.sort()\n\tb.sort(reverse=True)\n\tprint(max((sum(r[:i]) + sum(b[:i]) for i in range(1, n + m + 1))))\n \n \nfor _ in range(t):",
            "for _ in range(int(input())):\n\tn = int(input())\n\tr = list(map(int, input().split()))\n\tm = int(input())\n\tb = list(map(int, input().split()))\n\tr.sort(reverse=True)\n\tb.sort(reverse=True)\n\tans = r[0] + b[0]\n\tr.pop(0)\n\tb.pop(0)\n\tfor i in range(1, min(len(r), len(b))):\n\t\tans += r[i] + b[i]\n\tprint(ans)\n \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::4]:\n\ta = [*map(int, s.split())]\n\tprint(max(map(sum, zip(a, a[1:]))))\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n",
            "I = input\nfor _ in [0] * int(I()):\n\tn = int(I())\n\tr = sorted(map(int, I().split()))\n\tm = int(I())\n\tb = sorted(map(int, I().split()))\n\tprint(max(sum(r[:n]) + sum(b[:m]), sum(r[n:]) + sum(b[:m]), sum(r[:n]) + sum(b[m:]), sum(r[n:]) + sum(b[m:])))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::4]:\n\ta = [*map(int, s.split())]\n\tprint(max(a[i] + a[i + 1] for i in range(len(a) - 1)))\n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::4]:\n\tprint(sum((*map(int, s.split()),)))\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n ",
            "for s in [*open(0)][2::4]:\n\ta = [*map(int, s.split())]\n\tprint(sum(sorted(a)[-5:]))\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n",
            "for s in [*open(0)][2::4]:\n\tprint(max((sum(a) for a in zip(*[iter(map(int, s.split()))] * (1 + (len(s.split()) > 1))))))\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n ",
            "for s in [*open(0)][2::4]:\n\ta = [*map(int, s.split())]\n\tprint(max(a[i] + sum(a[i + 1:]) for i in range(len(a))))\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n",
            "for s in [*open(0)][2::4]:\n\ta = [*map(int, s.split())]\n\tprint(max(sum(a[:i]) for i in range(1, len(a) + 1)))\n \n\n",
            "for _ in range(int(input())):\n\tn = int(input())\n\tr = list(map(int, input().split()))\n\tm = int(input())\n\tb = list(map(int, input().split()))\n\tb.sort()\n\tr.sort()\n\tans = sum(b) - sum(r)\n\tr += b\n\tfor i in range(1, n + m):\n\t\tans = max(ans, sum(r[:i]) - sum(r[i:]))\n\tprint(ans)\n \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n"
        ]
    },
    {
        "task_id": 20,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: There are $n$ students in the first grade of Nlogonia high school. The principal wishes to split the students into two classrooms (each student must be in exactly one of the classrooms). Two distinct students whose name starts with the same letter will be chatty if they are put in the same classroom (because they must have a lot in common). Let $x$ be the number of such pairs of students in a split. Pairs $(a, b)$ and $(b, a)$ are the same and counted only once.\n\nFor example, if there are $6$ students: \"olivia\", \"jacob\", \"tanya\", \"jack\", \"oliver\" and \"jessica\", then:  splitting into two classrooms (\"jack\", \"jacob\", \"jessica\", \"tanya\") and (\"olivia\", \"oliver\") will give $x=4$ ($3$ chatting pairs in the first classroom, $1$ chatting pair in the second classroom),  splitting into two classrooms (\"jack\", \"tanya\", \"olivia\") and (\"jessica\", \"oliver\", \"jacob\") will give $x=1$ ($0$ chatting pairs in the first classroom, $1$ chatting pair in the second classroom). \n\nYou are given the list of the $n$ names. What is the minimum $x$ we can obtain by splitting the students into classrooms?\n\nNote that it is valid to place all of the students in one of the classrooms, leaving the other one empty.\n\n\n-----Input-----\n\nThe first line contains a single integer $n$ ($1\\leq n \\leq 100$)\u00a0\u2014 the number of students.\n\nAfter this $n$ lines follow.\n\nThe $i$-th line contains the name of the $i$-th student.\n\nIt is guaranteed each name is a string of lowercase English letters of length at most $20$. Note that multiple students may share the same name.\n\n\n-----Output-----\n\nThe output must consist of a single integer $x$\u00a0\u2014 the minimum possible number of chatty pairs.\n\n\n-----Examples-----\nInput\n4\njorge\njose\noscar\njerry\n\nOutput\n1\n\nInput\n7\nkambei\ngorobei\nshichiroji\nkyuzo\nheihachi\nkatsushiro\nkikuchiyo\n\nOutput\n2\n\nInput\n5\nmike\nmike\nmike\nmike\nmike\n\nOutput\n4\n\n\n\n-----Note-----\n\nIn the first sample the minimum number of pairs is $1$. This can be achieved, for example, by putting everyone except jose in one classroom, and jose in the other, so jorge and jerry form the only chatty pair.\n\nIn the second sample the minimum number of pairs is $2$. This can be achieved, for example, by putting kambei, gorobei, shichiroji and kyuzo in one room and putting heihachi, katsushiro and kikuchiyo in the other room. In this case the two pairs are kambei and kyuzo, and katsushiro and kikuchiyo.\n\nIn the third sample the minimum number of pairs is $4$. This can be achieved by placing three of the students named mike in one classroom and the other two students in another classroom. Thus there will be three chatty pairs in one classroom and one chatty pair in the other classroom. \n\n### Response:\n",
        "output": [
            "n = int(input())\ns = [0] * 26\nfor i in range(n):\n\ts[ord(input()[0]) - ord('a')] += 1\nprint(min(n - sum(s), sum(s) // 2))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "n = int(input())\nd = {}\nfor i in range(n):\n\tx = input()\n\td[x[0]] = d.get(x[0], 0) + 1\nprint(sum((i * (i - 1) // 2 for i in d.values())))\n \n \ninput = __builtin__.input\n \nn = int(input())\nd = {}\nfor i in range(n):\n\tx = input()\n\td[x[0]] = d.get(x[0], 0) + 1\nprint(sum((i * (i - 1) // 2 for i in d.values())))\n \n \ninput = __builtin__.input\n \nn = int(input())\nd = {}\nfor i in range(n):\n\tx = input()\n\td[x[0]] = d.get(x[0], ruction(i=1\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "n = int(input())\nd = {}\nfor i in range(n):\n\tname = input()\n\tif name[0] not in d:\n\t\td[name[0]] = 1\n\telse:\n\t\td[name[0]] += 1\nprint(sum((i * (i - 1) // 2 for i in d.values())))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "n = int(input())\ns = [0] * 26\nfor i in range(n):\n\ts[ord(input()[0]) - ord('a')] += 1\nprint(sum((i * (i - 1) // 2 for i in s)))\n \n \ninput = __builtin_input\n \n \ndef readline():\n\treturn map(int, input().split())\n \n \ndef readstring():\n\treturn input()\n \n \ndef readchar():\n\treturn input()[0]\n \n \ndef readint():\n\treturn int(input())\n \n \ndef readints(n):\n\treturn map(int, input().split())\n \n \ndef readarray(n):\n\treturn [int(input()) for _ in range(n)]\n \n \ndef readmatrix(n):\n\treturn [list(map(int, input().split())) for _ in range(n)]\n \n \ndef readmatrix_ints(n):\n\treturn [list(map(int, input().split())) for _ in range(n)]\n \n \ndef readmatrix_str(n):\n\treturn [list(input().split()) for _ in range(n)]\n \n \ndef solve():\n\tn = readint()\n\tarr = [0] * 26\n\tfor _ in range(n):\n\t\tname = readstring()\n\t\tarr[ord(name[0]) - ord('a')] += 1\n\tprint(sum((i * (i - 1) // 2 for i in arr)))\nsolve()\n \n__import__('sys').setrecursionlimit(10000)\n \n \ndef main():\n\tsolve()\nmain()\n \n__import__('sys').stdout.flush()\n \n\n \n__import__('sys').stdin = __import__('io').StringIO('6\\nkambei\\ngorobei\\nshichiroji\\nkyuzo\\nheihachi\\nkatsushiro\\nkikuchiyo\\n')\nmain()\n \n__import__('sys').stdin = __import__('io').StringIO('5\\njorge\\njose\\noscar\\njerry\\njessica\\n')\nmain()\n \n__import__('sys').stdin = __import__('io').StringIO('5\\nmike\\nmike\\nmike\\nmike\\nmike\\n')\nmain()\n \n__import__('sys').stdin = __import__('io').StringIO('10\\njorge\\njose\\noscar\\njerry\\njessica\\njorge\\njose\\noscar\\njerry\\njessica\\n')\nmain()\n \n__import__('sys').stdin = __import__('io').StringIO('10\\njorge\\njose\\noscar\\njerry\\njessica\\njorge\\njose\\noscar\\njerry\\njessica\\n')\nmain()\n \n__import__('sys').stdin = __import__('io').StringIO('10\\njorge\\njose\\noscar\\njerry\\njessica\\njorge\\njose\\noscar\\njerry\\njessica\\n')\nmain()\n \n__import__('sys').stdin = __import__('",
            "n = int(input())\nd = {}\nfor i in range(n):\n\ts = input()\n\td[s[0]] = d.get(s[0], 0) + 1\nprint(sum((i * (i - 1) // 2 for i in d.values())))\n \n \ninput = __builtins__.input\n \ndef main():\n\tn = int(input())\n\td = {}\n\tfor i in range(n):\n\t\ts = input()\n\t\td[s[0]] = d.get(s[0], 0) + 1\n\tprint(sum((i * (i - 1) // 2 for i in d.values())))\n \ndef __starting_point():\n\tmain()\n__starting_point()\n \n \ninput = __builtins__.input\n \ndef main():\n\tn = int(input())\n\td = {}\n\tfor i in range(n):\n\t\ts = input()\n\t\td[s[0]] = d.get(s[0], ruction\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "n = int(input())\nd = {}\nfor i in range(n):\n\ta = input()\n\tif a[0] in d:\n\t\td[a[0]] += 1\n\telse:\n\t\td[a[0]] = 1\nprint(sum((i * (i - 1) // 2 for i in d.values())))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "n = int(input())\na = [0] * 26\nfor _ in range(n):\n\ta[ord(input()[0]) - 97] += 1\nprint(sum((i * (i - 1) // 2 for i in a)))\n \n \nn = int(input())\na = [0] * 26\nfor _ in range(n):\n\ta[ord(input()[0]) - 97] += 1\nprint(sum((i * (i - 1) // 2 for i in a)))\n \n \nn = int(input())\na = [0] * 26\nfor _ in range(n):\n\ta[ord(input()[0]) - 97] += 1\nprint(sum((i * (i - 1) // 2 for i in a)))\n \n \nn = int(input())\na = [0] * 26\nfor _ in range(n):\n\ta[ord(input()[0]) - 97] += 1\nprint(sum((i * (i - 1) // 2 for i in a)))\n \n \nn = int(input())\na = [0] * 26\nfor _ in range(n):\n\ta[ord(input()[0]) - 97] += 1\nprint(sum((i * (i - 1) // 2 for i in a)))\n \n \nn = int(input())\na = [0] * 26\nfor _ in range(n):\n\ta[ord(input()[0]) - 97] += 1\nprint(sum((i * (i - 1) // 2 for i in a)))\n \n \nn = int(input())\na = [0] * 26\nfor _ in range(n):\n\ta[ord(input()[0]) - 97] += 1\nprint(sum((i * (i - 1) // 2 for i in a)))\n \n \nn = int(input())\na = [0] * 26\nfor _ in range(n):\n\ta[ord(input()[0]) - 97] += 1\nprint(sum((i * (i - 1) // 2 for i in a)))\n \n \nn = int(input())\na = [0] * 26\nfor _ in range(n):\n\ta[ord(input()[0]) - 97] += 1\nprint(sum((i * (i - 1) // 2 for i in a)))\n \n \nn = int(input())\na = [0] * 26\nfor _ in range(n):\n\ta[ord(input()[0]) - 97] += 1\nprint(sum((i * (i - 1) // 2 for i in a)))\n \n \nn = int(input())\na = [0] * 26\nfor _ in range(n):\n\ta[ord(input()[0]) - 97] += 1\nprint(sum((i * (i - 1) // 2 for i in a)))\n \n \nn = int(input())\na = [0] * 26\nfor _ in range(n):\n\ta[ord(input()[0]) - 97] += 1\nprint(sum((i * (i -",
            "n = int(input())\na = sorted([input()[0] for i in range(n)])\nans = n\nfor i in range(n):\n\tif i > 0 and a[i] == a[i - 1]:\n\t\tans -= 1\nprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "n = int(input())\ns = [0] * 26\nfor i in range(n):\n\tx = ord(input()[0]) - 97\n\ts[x] += 1\nprint(n - max(s))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "n = int(input())\na = {}\nfor i in range(n):\n\tb = input()\n\ta[b[0]] = a.get(b[0], 0) + 1\nprint(sum((i * (i - 1) // 2 for i in a.values())))\n \n \ninput = __builtin__.input\nn = int(input())\na = [0] * 26\nfor i in range(n):\n\ts = input()\n\ta[ord(s[0]) - ord('a')] += 1\nprint(sum((i * (i - 1) // 2 for i in a)))\n \ninput = __builtin__.input\nn = int(input())\na = [0] * 26\nfor i in range(n):\n\ts = input()\n\ta[ord(s[0]) - ord('a')] += 1\nprint(sum((i * (i - 1) // 2 for i in a)))\n \ninput = __builtin__.input\nn = int(input())\na = [0] * 26\nfor i in range(n):\n\ts = input()\n\ta[ord(s[0]) - ord('a')] += 1\nprint(sum((i * (i - 1) // 2 for i in a)))\n \ninput = __builtin__.input\nn = int(input())\na = [0] * 26\nfor i in range(n):\n\ts = input()\n\ta[ord(s[0]) - ord('a')] += 1\nprint(sum((i * (i - 1) // 2 for i in a)))\n \ninput = __builtin__.input\nn = int(input())\na = [0] * 26\nfor i in range(n):\n\ts = input()\n\ta[ord(s[0]) - ord('a')] += 1\nprint(sum((i * (i - 1) // 2 for i in a)))\n \ninput = __builtin__.input\nn = int(input())\na = [0] * 26\nfor i in range(n):\n\ts = input()\n\ta[ord(s[0]) - ord('a')] += 1\nprint(sum((i * (i - 1) // 2 for i in a)))\n \ninput = __builtin__.input\nn = int(input())\na = [0] * 26\nfor i in range(n):\n\ts = input()\n\ta[ord(s[0]) - ord('a')] += 1\nprint(sum((i * (i - 1) // 2 for i in a)))\n \ninput = __builtin__.input\nn = int(input())\na = [0] * 26\nfor i in range(n):\n\ts = input()\n\ta[ord(s[0]) - ord('a')] += 1\nprint(sum((i * (i - 1) // 2 for i in a)))\n \ninput = __builtin__.input\nn = int(input())\na = [0] * 26\nfor i in range(n):\n\ts = input()\n\ta[ord(s[0]) - ord('a')] += 1\nprint(sum((i * (i - 1) // 2 for i in a)))\n \ninput = __builtin",
            "n = int(input())\ns = [input()[0] for _ in range(n)]\nprint(sum(s.count(i) // 2 for i in set(s)))\n \n \ninput = __builtins__.input\n \ndef solve():\n\t(n,) = map(int, input().split())\n\tl = [0] * 26\n\tfor _ in range(n):\n\t\tl[ord(input()[0]) - ord('a')] += 1\n\tprint(sum((i * (i - 1) // 2 for i in l)))\n \ndef __starting_point():\n\tsolve()\n \n__starting_point()\n \n \ninput = __builtins__.input\n \ndef solve():\n\t(n,) = map(int, input().split())\n\tl = [0] * 26\n\tfor _ in range(n):\n\t\tl[ord(input()[0]) - ord('a')] += 1\n\tprint(sum((i * (i - 1) // 2 for i in l)))\n \ndef __starting_point():\n\tsolve()\n \n__starting_point()\n \n \ninput = __builtins__.input\n \ndef solve():\n\t(n,) = map(int, input().split())\n\tl = [0] * 26\n\tfor _ in range(n):\n\t\tl[ord(input()[0]) - ord('a')] += 1\n\tprint(sum((i * (i - 1) // 2 for i in l)))\n \ndef __starting_point():\n\tsolve()\n \n__starting_point()\n \n \ninput = __builtins__.input\n \ndef solve():\n\t(n,) = map(int, input().split())\n\tl = [0] * 26\n\tfor _ in range(n):\n\t\tl[ord(input()[0]) - ord('a')] += 1\n\tprint(sum((i * (i - 1) // 2 for i in l)))\n \ndef __starting_point():\n\tsolve()\n \n__starting_point()\n \n \ninput = __builtins__.input\n \ndef solve():\n\t(n,) = map(int, input().split())\n\tl = [0] * 26\n\tfor _ in range(n):\n\t\tl[ord(input()[0]) - ord('a')] += 1\n\tprint(sum((i * (i - 1) // 2 for i in l)))\n \ndef __starting_point():\n\tsolve()\n \n__starting_point()\n \n \ninput = __builtins__.input\n \ndef solve():\n\t(n,) = map(int, input().split())\n\tl = [0] * 26\n\tfor _ in range(n):\n\t\tl[ord(input()[0]) - ord('a')] += 1\n\tprint(sum((i * (i - 1) // 2 for i in l)))\n \ndef __starting_point():\n\tsolve()\n \n__starting_point()\n \n \ninput = __builtins__.input\n \ndef solve():\n\t(n,) = map(int, input().split())\n\tl = [0] * 26\n\tfor _ in range(n):\n\t\tl",
            "n = int(input())\nx = 0\nfor c in sorted(set(input()[0] for i in range(n))):\n\tx += n - sum((i[0] == c for i in input().split()))\nprint(x // 2)\n \n \nn = int(input())\ns = sorted(set(input()[0] for i in range(n)))\nprint(sum((n - sum((i[0] == c for i in input().split())) for c in s)) // 2)\n \nn = int(input())\ns = sorted(set(input()[0] for i in range(n)))\nprint(sum((n - sum((i[0] == c for i in input().split())) for c in s)) // 2)\n \nn = int(input())\ns = sorted(set(input()[0] for i in range(n)))\nprint(sum((n - sum((i[0] == c for i in input().split())) for c in s)) // 2)\n \nn = int(input())\ns = sorted(set(input()[0] for i in range(n)))\nprint(sum((n - sum((i[0] == c for i in input().split())) for c in s)) // 2)\n \nn = int(input())\ns = sorted(set(input()[0] for i in range(n)))\nprint(sum((n - sum((i[0] == c for i in input().split())) for c in s)) // 2)\n \nn = int(input())\ns = sorted(set(input()[0] for i in range(n)))\nprint(sum((n - sum((i[0] == c for i in input().split())) for c in s)) // 2)\n \nn = int(input())\ns = sorted(set(input()[0] for i in range(n)))\nprint(sum((n - sum((i[0] == c for i in input().split())) for c in s)) // 2)\n \nn = int(input())\ns = sorted(set(input()[0] for i in range(n)))\nprint(sum((n - sum((i[0] == c for i in input().split())) for c in s)) // 2)\n \nn = int(input())\ns = sorted(set(input()[0] for i in range(n)))\nprint(sum((n - sum((i[0] == c for i in input().split())) for c in s)) // 2)\n \nn = int(input())\ns = sorted(set(input()[0] for i in range(n)))\nprint(sum((n - sum((i[0] == c for i in input().split())) for c in s)) // 2)\n \nn = int(input())\ns = sorted(set(input()[0] for i in range(n)))\nprint(sum((n - sum((i[0] == c for i in input().split())) for c in s)) // 2)\n \nn = int(input())\ns = sorted(set(input()[0] for i in range(n)))\nprint(sum((n - sum((i[0] == c for i in input().split())) for c in s)) // 2)\n \nn = int(input())\ns = sorted(set(input()[0] for i in range(n)))\nprint",
            "n = int(input())\nnames = [input()[0] for i in range(n)]\nprint(n - len(set(names)))\n \n \nn = int(input())\nnames = [input()[0] for i in range(n)]\nprint(n - len(set(names)))\n \n \nn = int(input())\nnames = [input()[0] for i in range(n)]\nprint(n - len(set(names)))\n \n \nn = int(input())\nnames = [input()[0] for i in range(n)]\nprint(n - len(set(names)))\n \n \nn = int(input())\nnames = [input()[0] for i in range(n)]\nprint(n - len(set(names)))\n \n \nn = int(input())\nnames = [input()[0] for i in range(n)]\nprint(n - len(set(names)))\n \n \nn = int(input())\nnames = [input()[0] for i in range(n)]\nprint(n - len(set(names)))\n \n \nn = int(input())\nnames = [input()[0] for i in range(n)]\nprint(n - len(set(names)))\n \n \nn = int(input())\nnames = [input()[0] for i in range(n)]\nprint(n - len(set(names)))\n \n \nn = int(input())\nnames = [input()[0] for i in range(n)]\nprint(n - len(set(names)))\n \n \nn = int(input())\nnames = [input()[0] for i in range(n)]\nprint(n - len(set(names)))\n \n \nn = int(input())\nnames = [input()[0] for i in range(n)]\nprint(n - len(set(names)))\n \n \nn = int(input())\nnames = [input()[0] for i in range(n)]\nprint(n - len(set(names)))\n \n \nn = int(input())\nnames = [input()[0] for i in range(n)]\nprint(n - len(set(names)))\n \n \nn = int(input())\nnames = [input()[0] for i in range(n)]\nprint(n - len(set(names)))\n \n \nn = int(input())\nnames = [input()[0] for i in range(n)]\nprint(n - len(set(names)))\n \n \nn = int(input())\nnames = [input()[0] for i in range(n)]\nprint(n - len(set(names)))\n \n \nn = int(input())\nnames = [input()[0] for i in range(n)]\nprint(n - len(set(names)))\n \n \nn = int(input())\nnames = [input()[0] for i in range(n)]\nprint(n - len(set(names)))\n \n \nn = int(input())\nnames = [input()[0] for i in range(n)]\nprint(n - len(set(names)))\n \n \nn = int(input())\nnames = [input()[0] for i in range(n)]\nprint(n - len(set(names)))\n \n \nn =",
            "n = int(input())\nl = [0] * 26\nfor i in range(n):\n\tl[ord(input()[0]) - ord('a')] += 1\nprint(sum((a * (a - 1) // 2 for a in l)))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "n = int(input())\na = [0] * 26\nfor i in range(n):\n\ta[ord(input()[0]) - ord('a')] += 1\nprint(sum((i * (i - 1) // 2 for i in a)))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "n = int(input())\na = [0] * 26\nfor i in range(n):\n\ta[ord(input()[0]) - ord('a')] += 1\nprint(sum((i * (i - 1) // 2 for i in a)))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "n = int(input())\nc = 0\nfor i in range(ord('a'), ord('z') + 1):\n\tl = []\n\tfor j in range(n):\n\t\tif input().startswith(chr(i)):\n\t\t\tl.append(j)\n\tif len(l) > 1:\n\t\tc += len(l) * (len(l) - 1) // 2\nprint(c)\n \n \ninput = __builtins__.input\n \nn = int(input())\nnames = []\nfor _ in range(n):\n\tnames.append(input())\nnames.sort()\nans = 0\nfor i in range(1, n):\n\tif names[i - 1].startswith(names[i]):\n\t\tans += 1\nprint(ans)\n \ninput = lambda : sys.stdin.readline().strip()\nn = int(input())\na = [0] * 26\nfor i in range(n):\n\ts = input()\n\ta[ord(s[0]) - ord('a')] += 1\nprint(sum((i * (i - 1) // 2 for i in a)))\n \n \ninput = lambda : sys.stdin.readline().strip()\nn = int(input())\ns = [0] * 26\nfor i in range(n):\n\ts[ord(input()[0]) - ord('a')] += 1\nprint(sum((i * (i - 1) // 2 for i in s)))\n \ninput = lambda : sys.stdin.readline().strip()\nn = int(input())\na = [0] * 26\nfor i in range(n):\n\ts = input()\n\ta[ord(s[0]) - ord('a')] += 1\nprint(sum((i * (i - 1) // 2 for i in a)))\n \ninput = lambda : sys.stdin.readline().strip()\nn = int(input())\na = [0] * 26\nfor i in range(n):\n\ts = input()\n\ta[ord(s[0]) - ord('a')] += 1\nprint(sum((i * (i - 1) // 2 for i in a)))\n \ninput = lambda : sys.stdin.readline().strip()\nn = int(input())\na = [0] * 26\nfor i in range(n):\n\ts = input()\n\ta[ord(s[0]) - ord('a')] += 1\nprint(sum((i * (i - 1) // 2 for i in a)))\n \ninput = lambda : sys.stdin.readline().strip()\nn = int(input())\na = [0] * 26\nfor i in range(n):\n\ts = input()\n\ta[ord(s[0]) - ord('a')] += 1\nprint(sum((i * (i - 1) // 2 for i in a)))\n \ninput = lambda : sys.stdin.readline().strip()\nn = int(input())\na = [0] * 26\nfor i in range(n):\n\ts = input()\n\ta[ord(s[0]) - ord('a')] += 1\nprint(sum((i * (i - 1) // 2 for i in a)))\n \ninput =",
            "n = int(input())\ns = [0] * 26\nfor i in range(n):\n\ts[ord(input()[0]) - ord('a')] += 1\nprint(sum((i * (i - 1) // 2 for i in s)))\n \n \n\nI = input\nn = int(I())\nprint(n - sum((int(I().startswith(c)) for c in 'abcdefghijklmnopqrstuvwxyz')))\n \n \n\ndef solve():\n\tn = int(input())\n\ts = [0] * 26\n\tfor i in range(n):\n\t\ts[ord(input()[0]) - ord('a')] += 1\n\treturn sum((x * (x - 1) // 2 for x in s))\nprint(solve())\n \n \n\nn = int(input())\ns = [0] * 26\nfor i in range(n):\n\ts[ord(input()[0]) - ord('a')] += 1\nprint(sum((i * (i - 1) // 2 for i in s)))\n \n \n\ndef f(s):\n\tn = len(s)\n\ti = 0\n\tj = n - 1\n\twhile i < j:\n\t\tif s[i] != s[j]:\n\t\t\treturn False\n\t\ti += 1\n\t\tj -= 1\n\treturn True\nn = int(input())\ns = sorted([input() for i in range(n)])\nans = 0\nfor i in range(n):\n\tfor j in range(i + 1, n):\n\t\tif f(s[i] + s[j]):\n\t\t\tans += 1\nprint(ans)\n \n \n\nn = int(input())\ns = [0] * 26\nfor i in range(n):\n\ts[ord(input()[0]) - ord('a')] += 1\nprint(sum((i * (i - 1) // 2 for i in s)))\n \n \n\ndef f(s):\n\tn = len(s)\n\ti = 0\n\tj = n - 1\n\twhile i < j:\n\t\tif s[i] != s[j]:\n\t\t\treturn False\n\t\ti += 1\n\t\tj -= 1\n\treturn True\nn = int(input())\ns = sorted([input() for i in range(n)])\nans = 0\nfor i in range(n):\n\tfor j in range(i + 1, n):\n\t\tif f(s[i] + s[j]):\n\t\t\tans += 1\nprint(ans)\n \n \n\ndef solve():\n\tn = int(input())\n\ts = [0] * 26\n\tfor i in range(n):\n\t\ts[ord(input()[0]) - ord('a')] += 1\n\treturn sum((x * (x - 1) // 2 for x in s))\nprint(solve())\n \n \n\ndef solve():\n\tn = int(input())\n\ts = [0] * 26\n\tfor i in range(n):\n\t\ts[ord(input()[0]) - ord('a')] += 1\n\treturn sum((x * (x - 1) // 2 for x in s))\nprint(solve())\n \n \n\ndef solve():\n\tn = int(input())\n",
            "n = int(input())\nd = [0] * 26\nfor i in range(n):\n\td[ord(input()[0]) - ord('a')] += 1\nprint(sum((i * (i - 1) // 2 for i in d)))\n \n \ninput = __builtin_getattr__('_io').StringIO(input()).readline \nn = int(input())\nd = [0] * 26\nfor i in range(n):\n\td[ord(input()[0]) - ord('a')] += 1\nprint(sum((i * (i - 1) // 2 for i in d)))\n \ninput = __builtin_getattr__('_io').StringIO(input()).readline \nn = int(input())\nd = [0] * 26\nfor i in range(n):\n\td[ord(input()[0]) - ord('a')] += 1\nprint(sum((i * (i - 1) // 2 for i in d)))\n \ninput = __builtin_getattr__('_io').StringIO(input()).readline \nn = int(input())\nd = [0] * 26\nfor i in range(n):\n\td[ord(input()[0]) - ord('a')] += 1\nprint(sum((i * (i - 1) // 2 for i in d)))\n \ninput = __builtin_getattr__('_io').StringIO(input()).readline \nn = int(input())\nd = [0] * 26\nfor i in range(n):\n\td[ord(input()[0]) - ord('a')] += 1\nprint(sum((i * (i - 1) // 2 for i in d)))\n \ninput = __builtin_getattr__('_io').StringIO(input()).readline \nn = int(input())\nd = [0] * 26\nfor i in range(n):\n\td[ord(input()[0]) - ord('a')] += 1\nprint(sum((i * (i - 1) // 2 for i in d)))\n \ninput = __builtin_getattr__('_io').StringIO(input()).readline \nn = int(input())\nd = [0] * 26\nfor i in range(n):\n\td[ord(input()[0]) - ord('a')] += 1\nprint(sum((i * (i - 1) // 2 for i in d)))\n \ninput = __builtin_getattr__('_io').StringIO(input()).readline \nn = int(input())\nd = [0] * 26\nfor i in range(n):\n\td[ord(input()[0]) - ord('a')] += 1\nprint(sum((i * (i - 1) // 2 for i in d)))\n \ninput = __builtin_getattr__('_io').StringIO(input()).readline \nn = int(input())\nd = [0] * 26\nfor i in range(n):\n\td[ord(input()[0]) - ord('a')] += 1\nprint(sum((i * (i - 1) // 2 for i in d)))\n \ninput = __builtin_getattr__('_io').StringIO(input()).read",
            "n = int(input())\nl = [input()[0] for i in range(n)]\nprint(n - max([l.count(i) for i in set(l)]))\n \n\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n"
        ]
    },
    {
        "task_id": 21,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: You are playing a new famous fighting game: Kortal Mombat XII. You have to perform a brutality on your opponent's character.\n\nYou are playing the game on the new generation console so your gamepad have $26$ buttons. Each button has a single lowercase Latin letter from 'a' to 'z' written on it. All the letters on buttons are pairwise distinct.\n\nYou are given a sequence of hits, the $i$-th hit deals $a_i$ units of damage to the opponent's character. To perform the $i$-th hit you have to press the button $s_i$ on your gamepad. Hits are numbered from $1$ to $n$.\n\nYou know that if you press some button more than $k$ times in a row then it'll break. You cherish your gamepad and don't want to break any of its buttons.\n\nTo perform a brutality you have to land some of the hits of the given sequence. You are allowed to skip any of them, however changing the initial order of the sequence is prohibited. The total damage dealt is the sum of $a_i$ over all $i$ for the hits which weren't skipped.\n\nNote that if you skip the hit then the counter of consecutive presses the button won't reset.\n\nYour task is to skip some hits to deal the maximum possible total damage to the opponent's character and not break your gamepad buttons.\n\n\n-----Input-----\n\nThe first line of the input contains two integers $n$ and $k$ ($1 \\le k \\le n \\le 2 \\cdot 10^5$) \u2014 the number of hits and the maximum number of times you can push the same button in a row.\n\nThe second line of the input contains $n$ integers $a_1, a_2, \\dots, a_n$ ($1 \\le a_i \\le 10^9$), where $a_i$ is the damage of the $i$-th hit.\n\nThe third line of the input contains the string $s$ consisting of exactly $n$ lowercase Latin letters \u2014 the sequence of hits (each character is the letter on the button you need to press to perform the corresponding hit).\n\n\n-----Output-----\n\nPrint one integer $dmg$ \u2014 the maximum possible damage to the opponent's character you can deal without breaking your gamepad buttons.\n\n\n-----Examples-----\nInput\n7 3\n1 5 16 18 7 2 10\nbaaaaca\n\nOutput\n54\n\nInput\n5 5\n2 4 1 3 1000\naaaaa\n\nOutput\n1010\n\nInput\n5 4\n2 4 1 3 1000\naaaaa\n\nOutput\n1009\n\nInput\n8 1\n10 15 2 1 4 8 15 16\nqqwweerr\n\nOutput\n41\n\nInput\n6 3\n14 18 9 19 2 15\ncccccc\n\nOutput\n52\n\nInput\n2 1\n10 10\nqq\n\nOutput\n10\n\n\n\n-----Note-----\n\nIn the first example you can choose hits with numbers $[1, 3, 4, 5, 6, 7]$ with the total damage $1 + 16 + 18 + 7 + 2 + 10 = 54$.\n\nIn the second example you can choose all hits so the total damage is $2 + 4 + 1 + 3 + 1000 = 1010$.\n\nIn the third example you can choose all hits expect the third one so the total damage is $2 + 4 + 3 + 1000 = 1009$.\n\nIn the fourth example you can choose hits with numbers $[2, 3, 6, 8]$. Only this way you can reach the maximum total damage $15 + 2 + 8 + 16 = 41$.\n\nIn the fifth example you can choose only hits with numbers $[2, 4, 6]$ with the total damage $18 + 19 + 15 = 52$.\n\nIn the sixth example you can change either first hit or the second hit (it does not matter) with the total damage $10$. \n\n### Response:\n",
        "output": [
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\ns = input()\nl = [0] * 26\nm = 0\nfor i in range(n):\n\tl[ord(s[i]) - ord('a')] += 1\n\tif l[ord(s[i]) - ord('a')] > k:\n\t\tm += a[i]\n\t\tl = [0] * 26\n\telse:\n\t\tm += max(a[i], 0)\nprint(m)\n \n \ninput = __builtin_eval\n \ninput = __builtin_eval\n \ninput = eval\n \ninput = __builtin_eval\n \ninput = eval\n \ninput = __builtin_eval\n \ninput = eval\n \ninput = __builtin_eval\n \ninput = eval\n \ninput = __builtin_eval\n \ninput = eval\n \ninput = __builtin_eval\n \ninput = eval\n \ninput = __builtin_eval\n \ninput = eval\n \ninput = __builtin_eval\n \ninput = eval\n \ninput = __builtin_eval\n \ninput = eval\n \ninput = __builtin_eval\n \ninput = eval\n \ninput = __builtin_eval\n \ninput = eval\n \ninput = __builtin_eval\n \ninput = eval\n \ninput = __builtin_eval\n \ninput = eval\n \ninput = __builtin_eval\n \ninput = eval\n \ninput = __builtin_eval\n \ninput = eval\n \ninput = __builtin_eval\n \ninput = eval\n \ninput = __builtin_eval\n \ninput = eval\n \ninput = __builtin_eval\n \ninput = eval\n \ninput = __builtin_eval\n \ninput = eval\n \ninput = __builtin_eval\n \ninput = eval\n \ninput = __builtin_eval\n \ninput = eval\n \ninput = __builtin_eval\n \ninput = eval\n \ninput = __builtin_eval\n \ninput = eval\n \ninput = __builtin_eval\n \ninput = eval\n \ninput = __builtin_eval\n \ninput = eval\n \ninput = __builtin_eval\n \ninput = eval\n \ninput = __builtin_eval\n \ninput = eval\n \ninput = __builtin_eval\n \ninput = eval\n \ninput = __builtin_eval\n \ninput = eval\n \ninput = __builtin_eval\n \ninput = eval\n \ninput = __builtin_eval\n \ninput = eval\n \ninput = __builtin_eval\n \ninput = eval\n \ninput = __builtin_eval\n \ninput = eval\n \ninput = __builtin_eval\n \ninput = eval\n \ninput = __builtin_eval\n \ninput = eval\n \ninput = __builtin_eval\n \ninput = eval\n \ninput = __builtin_eval\n \ninput = eval\n \ninput = __builtin_eval\n \ninput = eval\n \ninput = __builtin_eval",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\ns = input()\ns = [ord(i) - 97 for i in s]\nc = [0] * 26\nm = 0\nfor i in s:\n\tc[i] += 1\n\tm = max(m, c[i])\nprint(sum(a) - max(0, m - k) * max(a))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\ns = input()\na = sorted(a)\ns = sorted(s)\na = [a[i] for i in range(n) if s[i] == s[0]]\nprint(sum(a[:max(0, n - k)]))\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\ns = input()\nc = 0\nm = 0\nfor (i, v) in enumerate(s):\n\tif c < k:\n\t\tm += a[i]\n\t\tc += 1\n\telse:\n\t\tc = 0\n\t\tif v == s[i - 1]:\n\t\t\tm += a[i]\n\t\t\tc += 1\nprint(m)\n \n \ninput = __builtin_getattr__('__{N}__input__')\ninput = input()\n \ndef read_int():\n\treturn int(input())\ndef read_ints():\n\treturn map(int, input().split())\ndef read_str():\n\treturn input()\ndef read_strs():\n\treturn input().split()\n \ndef solve():\n\t(n, k) = read_ints()\n\ta = list(read_ints())\n\ts = read_str()\n\tc = 0\n\tm = 0\n\tfor (i, v) in enumerate(s):\n\t\tif c < k:\n\t\t\tm += a[i]\n\t\t\tc += 1\n\t\telse:\n\t\t\tc = 0\n\t\t\tif v == s[i - 1]:\n\t\t\t\tm += a[i]\n\t\t\t\tc += 1\n\tprint(m)\nsolve()\n \n__N = 0\n \ndef __starting_point():\n\t__N = 0\n\tsolve()\n \n__starting_point()\n \n__N = __N + 1\n \nsolve()\n \n__N = __N + 1\n \nsolve()\n \n__N = __N + 1\n \nsolve()\n \n__N = __N + 1\n \nsolve()\n \n__N = __N + 1\n \nsolve()\n \n__N = __N + 1\n \nsolve()\n \n__N = __N + 1\n \nsolve()\n \n__N = __N + 1\n \nsolve()\n \n__N = __N + 1\n \nsolve()\n \n__N = __N + 1\n \nsolve()\n \n__N = __N + 1\n \nsolve()\n \n__N = __N + 1\n \nsolve()\n \n__N = __N + 1\n \nsolve()\n \n__N = __N + 1\n \nsolve()\n \n__N = __N + 1\n \nsolve()\n \n__N = __N + 1\n \nsolve()\n \n__N = __N + 1\n \nsolve()\n \n__N = __N + 1\n \nsolve()\n \n__N = __N + 1\n \nsolve()\n \n__N = __N + 1\n \nsolve()\n \n__N = __N + 1\n \nsolve()\n \n__N = __N + 1\n \nsolve()\n \n__N = __N + 1\n \nsolve()\n \n__N = __N + 1\n \nsolve()\n \n__N = __N + 1\n \nsolve()\n \n__N = __N + 1\n \nsolve()\n \n__N = __N + 1\n \nsolve()\n \n__N = __N + 1\n \nsolve()\n \n__N",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\ns = input()\np = [0] * 26\nfor i in range(n):\n\tif s[i] != s[i - 1] and p[ord(s[i]) - 97] >= k:\n\t\tp[ord(s[i - 1]) - 97] += a[i]\n\telse:\n\t\tp[ord(s[i]) - 97] += a[i]\n\t\tp[ord(s[i]) - 97] -= a[i - 1]\nprint(sum(p))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\ns = input()\nres = 0\nj = 0\nfor i in range(n):\n\tif s[i] != s[j]:\n\t\tj = i\n\tres += a[i]\nprint(res - sum(a[i] for i in range(j, j + k)))\n \n \ninput = __builtin_input\n \n \ndef main():\n\t(n, k) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\ts = input()\n\tres = 0\n\tj = 0\n\tfor i in range(n):\n\t\tif s[i] != s[j]:\n\t\t\tj = i\n\t\tres += a[i]\n\tprint(res - sum(a[i] for i in range(j, j + k)))\n \n \nmain()\n \n \n__ = input\n \n \ndef main():\n\t(n, k) = map(int, input().split())\n\ta = list(map(intruction, input().split()))\n\ts = input()\n\tres = 0\n\tj = 0\n\tfor i in range(n):\n\t\tif s[i] != s[j]:\n\t\t\tj = i\n\t\tres += a[i]\n\tprint(res - sum(a[i] for i in range(j, j + k)))\n \n \nmain()\n \n \n__ = input\n \n \ndef main():\n\t(n, k) = map(int, input().split())\n\ta = list(map(intruction, input().split()))\n\ts = input()\n\tres = 0\n\tj = 0\n\tfor i in range(n):\n\t\tif s[i] != s[j]:\n\t\t\tj = i\n\t\tres += a[i]\n\tprint(res - sum(a[i] for i in range(j, j + k)))\n \n \nmain()\n \n \n__ = input\n \n \ndef main():\n\t(n, k) = map(int, input().split())\n\ta = list(map(intruction, input().split()))\n\ts = input()\n\tres = 0\n\tj = 0\n\tfor i in range(n):\n\t\tif s[i] != s[j]:\n\t\t\tj = i\n\t\tres += a[i]\n\tprint(res - sum(a[i] for i in range(j, j + k)))\n \n \nmain()\n \n \n__ = input\n \n \ndef main():\n\t(n, k) = map(int, input().split())\n\ta = list(map(intruction, input().split()))\n\ts = input()\n\tres = 0\n\tj = 0\n\tfor i in range(n):\n\t\tif s[i] != s[j]:\n\t\t\tj = i\n\t\tres += a[i]\n\tprint(res - sum(a[i] for i in range(j, j + k)))\n \n \nmain()\n \n \n__ = input\n \n \ndef main():\n\t(n, k) = map(int, input().split())\n\ta = list(map(intruction, input().split()))\n\ts = input()\n\tres = 0\n\tj = 0\n\tfor i in range",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\ns = input()\nx = []\nc = 1\nfor i in range(1, n):\n\tif s[i] == s[i - 1]:\n\t\tc += 1\n\telse:\n\t\tx.append(c)\n\t\tc = 1\nx.append(c)\ni = 0\nj = len(x) - 1\nans = 0\nwhile i <= j:\n\tif x[i] + x[j] > k:\n\t\tans += a[i]\n\t\ti += 1\n\telse:\n\t\tans += a[i] + a[j]\n\t\ti += 1\n\t\tj -= 1\nprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\ns = input()\ns = [0] + s\na = [0] + a\nc = 0\nans = 0\nfor i in range(n):\n\tif s[i] != s[i + 1]:\n\t\tc = 0\n\tif c < k:\n\t\tans += a[i + 1]\n\t\tc += 1\nprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\ns = input()\nans = cur = 0\nfor (i, c) in enumerate(s):\n\tif i > 0 and s[i - 1] == c:\n\t\tcur += 1\n\telse:\n\t\tcur = 1\n\tif cur <= k:\n\t\tans += a[i]\nprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "R = lambda : map(int, input().split())\n(n, k) = R()\na = [*R()]\ns = input()\nt = 0\nfor i in range(n):\n\tif s[i] == s[i - 1]:\n\t\tt += 1\n\telse:\n\t\tt = 1\n\tif t > k:\n\t\ta[i] = 0\nprint(sum(a))\n ",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\ns = input()\nres = 0\nc = 0\ncur = -1\nfor i in range(n):\n\tif s[i] != cur:\n\t\tc = 0\n\tcur = s[i]\n\tc += 1\n\tif c <= k:\n\t\tres += a[i]\n\telse:\n\t\tres += max(a[i], a[i - k])\nprint(res)\n \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\ns = input()\nb = [0] * n\nfor i in range(n - 1, -1, -1):\n\tif i == n - 1 or s[i] != s[i + 1]:\n\t\tb[i] = a[i]\n\telse:\n\t\tb[i] = a[i] + b[i + 1]\nans = 0\nfor i in range(n):\n\tif s[i] not in s[i - k:i]:\n\t\tans += b[i]\nprint(ans)\n \n \ninput = __builtin_input\n \n \nn = int(input())\ns = input()\nk = int(input())\n(s, k) = (s[:n], k)\nans = 0\nfor i in range(n):\n\tans += max(0, k - i)\n\tk = min(n, k + i + 1)\n\tprint(ans, s[i:k])\nprint(ans)\n \n \ninput = __builtin_input\n \n \nn = int(input())\ns = input()\nk = int(input())\n(s, k) = (s[:n], k)\nans = 0\nfor i in range(n):\n\tans += max(0, k - i)\n\tk = min(n, k + i + 1)\n\tprint(ans, s[i:k])\nprint(ans)\n \n \ninput = __builtin_input\n \n \nn = int(input())\ns = input()\nk = int(input())\n(s, k) = (s[:n], k)\nans = 0\nfor i in range(n):\n\tans += max(0, k - i)\n\tk = min(n, k + i + 1)\n\tprint(ans, s[i:k])\nprint(ans)\n \n \ninput = __builtin_input\n \n \nn = int(input())\ns = input()\nk = int(input())\n(s, k) = (s[:n], k)\nans = 0\nfor i in range(n):\n\tans += max(0, k - i)\n\tk = min(n, k + i + 1)\n\tprint(ans, s[i:k])\nprint(ans)\n \n \ninput = __builtin_input\n \n \nn = int(input())\ns = input()\nk = int(input())\n(s, k) = (s[:n], k)\nans = 0\nfor i in range(n):\n\tans += max(0, k - i)\n\tk = min(n, k + i + 1)\n\tprint(ans, s[i:k])\nprint(ans)\n \n \ninput = __builtin_input\n \n \nn = int(input())\ns = input()\nk = int(input())\n(s, k) = (s[:n], k)\nans = 0\nfor i in range(n):\n\tans += max(0, k - i)\n\tk = min(n, k + i + 1)\n\tprint(ans, s[i:k])\nprint(ans)\n \n \ninput = __builtin_input\n \n \nn = int(input",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\ns = input()\nans = 0\n(cur, cnt) = (0, 0)\nfor i in range(n):\n\tif s[i] == s[i - 1]:\n\t\tcnt += 1\n\telse:\n\t\tcur += cnt // k * a[i - 1]\n\t\tcnt = 1\nif cnt > 0:\n\tcur += cnt // k * a[-1]\nprint(cur)\n ",
            "(n, k) = map(int, input().split())\nl = [*map(int, input().split())]\ns = input()\nc = 0\nr = 0\nfor (i, (x, y)) in enumerate(zip(l, s)):\n\tif c < k and y == s[i - 1]:\n\t\tr += x\n\t\tc += 1\n\telse:\n\t\tc = 0\nprint(r)\n \n \ninput = __builtin_input\n \n \ndef readline():\n\treturn iter(map(int, __builtinruction.split()))\n \n \ndef read():\n\treturn next(readline())\n \n \ndef read_str():\n\treturn iter(__builtin_input().split())\n \n \ndef read_str_as_int():\n\treturn map(int, read_str())\n \n \ndef read_str_as_float():\n\treturn map(float, read_str())\n \n \ndef read_line_as_int():\n\treturn map(int, readline())\n \n \ndef read_line_as_float():\n\treturn map(float, readline())\n \n \ndef solve(n, k, l, s):\n\tc = 0\n\tr = 0\n\tfor (i, (x, y)) in enumerate(zip(l, s)):\n\t\tif c < k and y == s[i - 1]:\n\t\t\tr += x\n\t\t\tc += 1\n\t\telse:\n\t\t\tc = 0\n\treturn r\n \n \ndef main():\n\t(n, k) = read_line_as_int()\n\tl = read_line_as_int()\n\ts = read_str()\n\tprint(solve(n, k, l, s))\nmain()\n \n \ndef __starting_point():\n\tmain()\n__starting_point()\n \n \n__starting_point()\n \n \ndef __starting_point():\n\tmain()\n__starting_point()\n \n \ndef __starting_point():\n\tmain()\n__starting_point()\n \n \ndef __starting_point():\n\tmain()\n__starting_point()\n \n \ndef __starting_point():\n\tmain()\n__starting_point()\n \n \ndef __starting_point():\n\tmain()\n__starting_point()\n \n \ndef __starting_point():\n\tmain()\n__starting_point()\n \n \ndef __starting_point():\n\tmain()\n__starting_point()\n \n \ndef __starting_point():\n\tmain()\n__starting_point()\n \n \ndef __starting_point():\n\tmain()\n__starting_point()\n \n \ndef __starting_point():\n\tmain()\n__starting_point()\n \n \ndef __starting_point():\n\tmain()\n__starting_point()\n \n \ndef __starting_point():\n\tmain()\n__starting_point()\n \n \ndef __starting_point():\n\tmain()\n__starting_point()\n \n \ndef __starting_point():\n\tmain()\n__starting_point()\n \n \ndef __starting_point():\n\tmain()\n__starting_point()\n \n \ndef __starting",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\ns = input()\nf = [0] * n\nfor i in range(n):\n\tif s[i] != s[i - 1] or i == 0:\n\t\tf[i] = 1\n\telse:\n\t\tf[i] = f[i - 1] + 1\nans = 0\nc = 0\nfor i in range(n):\n\tif f[i] > k:\n\t\tans += c\n\t\tc = 0\n\telse:\n\t\tans += a[i]\n\t\tc = max(c, a[i])\nprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\ns = input()\nans = 0\nc = 1\nfor i in range(1, n):\n\tif s[i] == s[i - 1]:\n\t\tc += 1\n\t\tcontinue\n\tif c > k:\n\t\tans += sum(a[:i - c])\n\t\ta = a[i - c:]\n\t\tc = 1\nif c > k:\n\tans += sum(a)\nprint(ans)\n \n \ninput = __builtins__.input\n \ndef test():\n\t(n, k) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\ts = input()\n\tans = 0\n\tc = 1\n\tfor i in range(1, n):\n\t\tif s[i] == s[i - 1]:\n\t\t\tc += 1\n\t\t\tcontinue\n\t\tif c > k:\n\t\t\tans += sum(a[:i - c])\n\t\t\ta = a[i - c:]\n\t\t\tc = 1\n\tif c > k:\n\t\tans += sum(a)\n\tprint(ans)\n \ntest()\n \ndef main():\n\timport sys\n\tinput = sys.stdin.readline\n\ttest()\nmain()\n \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\ns = input()\n(cnt, ans, maxi) = (0, 0, 0)\nfor i in range(n):\n\tif s[i] == s[i - 1]:\n\t\tcnt += 1\n\telse:\n\t\tcnt = 1\n\tmaxi = max(maxi, cnt)\n\tif maxi > k:\n\t\tans += sum(a[i - maxi:i - 1])\n\telse:\n\t\tans += a[i]\nprint(ans)\n \n \ninput = __builtin_open\n \ndef input():\n\treturn map(int, input().split())\n \ndef input():\n\treturn input()\n \ndef input():\n\treturn input().split()\n \ndef input():\n\treturn list(map(int, input().split()))\n \ndef input():\n\treturn list(map(intruction, input().split()))\n \ndef input():\n\treturn [int(x) for x in input()]\n \ndef input():\n\treturn [int(x) for x in input().split()]\n \ndef input():\n\treturn [int(x) for x in input().split()]\n \ndef input():\n\treturn [int(x) for x in input().split()]\n \ndef input():\n\treturn [int(x) for x in input().split()]\n \ndef input():\n\treturn [int(x) for x in input().split()]\n \ndef input():\n\treturn [int(x) for x in input().split()]\n \ndef input():\n\treturn [int(x) for x in input().split()]\n \ndef input():\n\treturn [int(x) for x in input().split()]\n \ndef input():\n\treturn [int(x) for x in input().split()]\n \ndef input():\n\treturn [int(x) for x in input().split()]\n \ndef input():\n\treturn [int(x) for x in input().split()]\n \ndef input():\n\treturn [int(x) for x in input().split()]\n \ndef input():\n\treturn [int(x) for x in input().split()]\n \ndef input():\n\treturn [int(x) for x in input().split()]\n \ndef input():\n\treturn [int(x) for x in input().split()]\n \ndef input():\n\treturn [int(x) for x in input().split()]\n \ndef input():\n\treturn [int(x) for x in input().split()]\n \ndef input():\n\treturn [int(x) for x in input().split()]\n \ndef input():\n\treturn [int(x) for x in input().split()]\n \ndef input():\n\treturn [int(x) for x in input().split()]\n \ndef input():\n\treturn [int(x) for x in input().split()]\n \ndef input():\n\treturn [int(x) for x in input().split()]\n \ndef input():\n\treturn [int(x) for x in input().split()]\n \ndef input():\n\treturn [int(x) for x in input().split()]\n \ndef input():\n\treturn [int(x) for x in input().split()]\n \ndef input():\n\treturn [int(x) for x in input().split()]\n ",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\ns = input()\nc = [0] * 26\nfor i in range(n):\n\tc[ord(s[i]) - 97] += 1\nm = 0\ni = 0\nwhile i < n:\n\tif c[ord(s[i]) - 97] > k:\n\t\tm += sum(a[i:i + k])\n\t\tbreak\n\ti += k\nm += sum(a[i:])\nprint(m)\n \n \n\n\n\n \n \n \n\n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\ns = input()\np = []\nfor (i, c) in enumerate(s):\n\tif p and p[-1][0] == c:\n\t\tp[-1][1] += 1\n\telse:\n\t\tp.append([c, 1])\nans = 0\nfor (c, kk) in p:\n\tans += min(a[i] for i in range(n) if s[i] == c and (i < n - 1 and s[i + 1] != c or i == n - 1)) * (min(kk, k))\nprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\ns = input()\nb = [0] * 26\nfor i in range(n):\n\tif b[ord(s[i]) - 97] >= k:\n\t\ta[i] = -1\n\telse:\n\t\tb[ord(s[i]) - 97] += 1\nprint(sum(a))\n "
        ]
    },
    {
        "task_id": 22,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: Suppose you have an integer $v$. In one operation, you can:\n\neither set $v = (v + 1) mod 32768$\n\nor set $v = (2 \\cdot v) mod 32768$.\n\nYou are given $n$ integers $a_1, a_2, \\dots, a_n$. What is the minimum number of operations you need to make each $a_i$ equal to $0$?\n\n\n-----Input-----\n\nThe first line contains the single integer $n$ ($1 \\le n \\le 32768$) \u2014 the number of integers.\n\nThe second line contains $n$ integers $a_1, a_2, \\dots, a_n$ ($0 \\le a_i < 32768$).\n\n\n-----Output-----\n\nPrint $n$ integers. The $i$-th integer should be equal to the minimum number of operations required to make $a_i$ equal to $0$.\n\n\n-----Examples-----\n\nInput\n4\n19 32764 10240 49\nOutput\n14 4 4 15\n\n\n-----Note-----\n\nLet's consider each $a_i$:\n\n$a_1 = 19$. You can, firstly, increase it by one to get $20$ and then multiply it by two $13$ times. You'll get $0$ in $1 + 13 = 14$ steps.\n\n$a_2 = 32764$. You can increase it by one $4$ times: $32764 \\rightarrow 32765 \\rightarrow 32766 \\rightarrow 32767 \\rightarrow 0$.\n\n$a_3 = 10240$. You can multiply it by two $4$ times: $10240 \\rightarrow 20480 \\rightarrow 8192 \\rightarrow 16384 \\rightarrow 0$.\n\n$a_4 = 49$. You can multiply it by two $15$ times. \n\n### Response:\n",
        "output": [
            "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n\tr = a[i]\n\tc = 0\n\twhile r:\n\t\tif r % 2 == 1:\n\t\t\tc += 1\n\t\tr //= 2\n\tprint(c)\n \n \ninput()\na = [int(i) for i in input().split()]\nfor i in a:\n\tprint(bin(i).count('1'))\n \n \ninput()\na = [int(i) for i in input().split()]\nfor i in a:\n\tc = 0\n\twhile i:\n\t\tc += i % 2\n\t\ti //= 2\n\tprint(c)\n \n \nn = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n\tr = a[i]\n\tc = 0\n\twhile r:\n\t\tif r % 2 == 1:\n\t\t\tc += 1\n\t\tr //= 2\n\tprint(c)\n \n \ninput()\na = [int(i) for i in input().split()]\nfor i in a:\n\tprint(bin(i).count('1'))\n \n \ninput()\na = [int(i) for i in input().split()]\nfor i in a:\n\tc = 0\n\twhile i:\n\t\tc += i % 2\n\t\ti //= 2\n\tprint(c)\n \n \ninput()\na = [int(i) for i in input().split()]\nfor i in a:\n\tprint(bin(i).count('1'))\n \n \ninput()\na = [int(i) for i in input().split()]\nfor i in a:\n\tc = 0\n\twhile i:\n\t\tc += i % 2\n\t\ti //= 2\n\tprint(c)\n \n \ninput()\na = [int(i) for i in input().split()]\nfor i in a:\n\tprint(bin(i).count('1'))\n \n \ninput()\na = [int(i) for i in input().split()]\nfor i in a:\n\tc = 0\n\twhile i:\n\t\tc += i % 2\n\t\ti //= 2\n\tprint(c)\n \n \ninput()\na = [int(i) for i in input().split()]\nfor i in a:\n\tprint(bin(i).count('1'))\n \n \ninput()\na = [int(i) for i in input().split()]\nfor i in a:\n\tc = 0\n\twhile i:\n\t\tc += i % 2\n\t\ti //= 2\n\tprint(c)\n \n \ninput()\na = [int(i) for i in input().split()]\nfor i in a:\n\tprint(bin(i).count('1'))\n \n \ninput()\na = [int(i) for i in input().split()]\nfor i in a:\n\tc = 0\n\twhile i:\n\t\tc += i % 2\n\t\ti //= 2\n\tprint(c)\n \n \ninput()\na = [int(i) for i in input().split()]\nfor i in a:\n\tprint(bin(i).count('1'))\n \n \ninput()\na =",
            "n = int(input())\na = list(map(int, input().split()))\nfor i in a:\n\tprint(min(i % 16, 16 - i % 16) + i // 16)\n \n \n\nI = lambda : map(int, input().split())\n(n,) = I()\na = list(I())\nfor x in a:\n\tprint(min(x % 16, 16 - x % 16) + x // 16)\n \n \n\nn = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n\tprint(min(a[i] % 16, 16 - a[i] % 16) + a[i] // 16)\n \n \n\nn = int(input())\na = list(map(int, input().split()))\nfor i in a:\n\tprint(min(i % 16, 16 - i % 16) + i // 16)\n \n \n\nn = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n\tprint(min(a[i] % 16, 16 - a[i] % 16) + a[i] // 16)\n \n \n\nn = int(input())\na = list(map(int, input().split()))\nfor i in a:\n\tprint(min(i % 16, 16 - i % 16) + i // 16)\n \n \n\nn = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n\tprint(min(a[i] % 16, 16 - a[i] % 16) + a[i] // 16)\n \n \n\nn = int(input())\na = list(map(int, input().split()))\nfor i in a:\n\tprint(min(i % 16, 16 - i % 16) + i // 16)\n \n \n\nn = int(input())\na = list(map(int, input().split()))\nfor i in a:\n\tprint(min(i % 16, 16 - i % 16) + i // 16)\n \n \n\nn = int(input())\na = list(map(int, input().split()))\nfor i in a:\n\tprint(min(i % 16, 16 - i % 16) + i // 16)\n \n \n\nn = int(input())\na = list(map(int, input().split()))\nfor i in a:\n\tprint(min(i % 16, 16 - i % 16) + i // 16)\n \n \n\nn = int(input())\na = list(map(int, input().split()))\nfor i in a:\n\tprint(min(i % 16, 16 - i % 16) + i // 16)\n \n \n\nn = int(input())\na = list(map(int, input().split()))\nfor i in a:\n\tprint(min(i % 16, 1",
            "n = int(input())\na = list(map(int, input().split()))\nfor i in a:\n\tans = 0\n\twhile i:\n\t\tif i & 1:\n\t\t\tans += 1\n\t\ti >>= 1\n\tprint(ans)\n \n \ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tfor i in a:\n\t\tprint(sum((i & 1 << j) >> j for j in range(15)))\nmain()\n \n \ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tfor i in a:\n\t\tprint(sum((i & 1 << j) >> j for j in range(15)))\nmain()\n \n \ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tfor i in a:\n\t\tprint(sum((i & 1 << j) >> j for j in range(15)))\nmain()\n \n \ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tfor i in a:\n\t\tprint(sum((i & 1 << j) >> j for j in range(15)))\nmain()\n \n \ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tfor i in a:\n\t\tprint(sum((i & 1 << j) >> j for j in range(15)))\nmain()\n \n \ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tfor i in a:\n\t\tprint(sum((i & 1 << j) >> j for j in range(15)))\nmain()\n \n \ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tfor i in a:\n\t\tprint(sum((i & 1 << j) >> j for j in range(15)))\nmain()\n \n \ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tfor i in a:\n\t\tprint(sum((i & 1 << j) >> j for j in range(15)))\nmain()\n \n \ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tfor i in a:\n\t\tprint(sum((i & 1 << j) >> j for j in range(15)))\nmain()\n \n \ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tfor i in a:\n\t\tprint(sum((i & 1 << j) >> j for j in range(15)))\nmain()\n \n \ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tfor i in a:\n\t\tprint(sum((i & 1 << j) >> j for j in range(15)))\nmain()\n \n \ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tfor i in a:\n\t\tprint(sum((i &",
            "n = int(input())\nl = list(map(int, input().split()))\nfor i in l:\n\tx = i\n\ty = 0\n\twhile x:\n\t\tif x % 2 == 1:\n\t\t\tx = x - 1\n\t\telse:\n\t\t\tx = x // 2\n\t\ty += 1\n\tprint(y)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "n = int(input())\na = list(map(int, input().split()))\nfor i in a:\n\tprint(min(i % 2 + 2 * i.bit_length(), i.bit_length()))\n \n \ninput = __builtins__.input\nprint = __builtins__.print\n \ndef main():\n\tn = int(input())\n\ta = [int(x) for x in input().split()]\n\tans = []\n\tfor x in a:\n\t\tans.append(min(x.bit_length(), x % 2 + 2 * x.bit_length()))\n\tprint(*ans)\nmain()\n \nmain()\n \n__import__('sys').setrecursionlimit(1 << 30)\n \ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tans = []\n\tfor x in a:\n\t\tans.append(min(x.bit_length(), x % 2 + 2 * x.bit_length()))\n\tprint(*ans)\nmain()\n \n__import__('sys').setrecursionlimit(1 << 30)\n \ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tans = []\n\tfor x in a:\n\t\tans.append(min(x.bit_length(), x % 2 + 2 * x.bit_length()))\n\tprint(*ans)\nmain()\n \n__import__('sys').setrecursionlimit(1 << 30)\n \ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tans = []\n\tfor x in a:\n\t\tans.append(min(x.bit_length(), x % 2 + 2 * x.bit_length()))\n\tprint(*ans)\nmain()\n \n__import__('sys').setrecursionlimit(1 << 30)\n \ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tans = []\n\tfor x in a:\n\t\tans.append(min(x.bit_length(), x % 2 + 2 * x.bit_length()))\n\tprint(*ans)\nmain()\n \n__import__('sys').setrecursionlimit(1 << 30)\n \ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tans = []\n\tfor x in a:\n\t\tans.append(min(x.bit_length(), x % 2 + 2 * x.bit_length()))\n\tprint(*ans)\nmain()\n \n__import__('sys').setrecursionlimit(1 << 30)\n \ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tans = []\n\tfor x in a:\n\t\tans.append(min(x.bit_length(), x % 2 + 2 * x.bit_length()))\n\tprint(*ans)\nmain()\n \n__import__('sys').setrecursionlimit(1 << 30)\n \ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tans = []\n\tfor x in a:\n\t\tans.append(min(",
            "n = int(input())\na = list(map(int, input().split()))\nfor i in a:\n\tif i == 0:\n\t\tprint(0)\n\telse:\n\t\tprint(min(i.bit_length() - 1, i.bit_length() + i.bit_length() - 1, 32767 - i + 1))\n \n \ninput = __builtin_input\n \ndef solve():\n\tn = int(input())\n\ta = map(int, input().split())\n\tfor i in a:\n\t\tprint(min(i.bit_length() - 1, i.bit_length() + i.bit_length() - 1, 32767 - i + 1))\n \nsolve()\n \n__builtin_input = input\n \ndef solve():\n\tn = int(input())\n\ta = map(int, input().split())\n\tfor i in a:\n\t\tprint(min(i.bit_length() - 1, i.bit_length() + i.bit_length() - 1, 32767 - i + 1))\n \nsolve()\n \ninput = __builtin_input\n \ndef solve():\n\tn = int(input())\n\ta = map(int, input().split())\n\tfor i in a:\n\t\tprint(min(i.bit_length() - 1, i.bit_length() + i.bit_length() - 1, 32767 - i + 1))\n \nsolve()\n \n__builtin_input = input\n \ndef solve():\n\tn = int(input())\n\ta = map(int, input().split())\n\tfor i in a:\n\t\tprint(min(i.bit_length() - 1, i.bit_length() + i.bit_length() - 1, 32767 - i + 1))\n \nsolve()\n \ninput = __builtin_input\n \ndef solve():\n\tn = int(input())\n\ta = map(int, input().split())\n\tfor i in a:\n\t\tprint(min(i.bit_length() - 1, i.bit_length() + i.bit_length() - 1, 32767 - i + 1))\n \nsolve()\n \n__builtin_input = input\n \ndef solve():\n\tn = int(input())\n\ta = map(int, input().split())\n\tfor i in a:\n\t\tprint(min(i.bit_length() - 1, i.bit_length() + i.bit_length() - 1, 32767 - i + 1))\n \nsolve()\n \ninput = __builtin_input\n \ndef solve():\n\tn = int(input())\n\ta = map(int, input().split())\n\tfor i in a:\n\t\tprint(min(i.bit_length() - 1, i.bit_length() + i.bit_length() - 1, 32767 - i + 1))\n \nsolve()\n \n__builtin_input = input\n \ndef solve():\n\tn = int(input())\n\ta = map(int, input().split())\n\tfor i in a:\n\t\tprint(min(i.bit_length() - 1, i.",
            "n = int(input())\na = list(map(int, input().split()))\nfor i in a:\n\tprint(min(i.bit_length(), (32768 - i).bit_length()))\n \n \ninput = __builtin_input\nprint = __builtin_print\n \nn = int(input())\na = list(map(int, input().split()))\nfor i in a:\n\tprint(min(i.bit_length(), (32768 - i).bit_length()))\n \nn = int(input())\na = list(map(int, input().split()))\nfor i in a:\n\tprint(min(i.bit_length(), (32768 - i).bit_length()))\n \nn = int(input())\na = list(map(int, input().split()))\nfor i in a:\n\tprint(min(i.bit_length(), (32768 - i).bit_length()))\n \nn = int(input())\na = list(map(int, input().split()))\nfor i in a:\n\tprint(min(i.bit_length(), (32768 - i).bit_length()))\n \nn = int(input())\na = list(map(int, input().split()))\nfor i in a:\n\tprint(min(i.bit_length(), (32768 - i).bit_length()))\n \nn = int(input())\na = list(map(int, input().split()))\nfor i in a:\n\tprint(min(i.bit_length(), (32768 - i).bit_length()))\n \nn = int(input())\na = list(map(int, input().split()))\nfor i in a:\n\tprint(min(i.bit_length(), (32768 - i).bit_length()))\n \nn = int(input())\na = list(map(int, input().split()))\nfor i in a:\n\tprint(min(i.bit_length(), (32768 - i).bit_length()))\n \nn = int(input())\na = list(map(int, input().split()))\nfor i in a:\n\tprint(min(i.bit_length(), (32768 - i).bit_length()))\n \nn = int(input())\na = list(map(int, input().split()))\nfor i in a:\n\tprint(min(i.bit_length(), (32768 - i).bit_length()))\n \nn = int(input())\na = list(map(int, input().split()))\nfor i in a:\n\tprint(min(i.bit_length(), (32768 - i).bit_length()))\n \nn = int(input())\na = list(map(int, input().split()))\nfor i in a:\n\tprint(min(i.bit_length(), (32768 - i).bit_length()))\n \nn = int(input())\na = list(map(int, input().split()))\nfor i in a:\n\tprint(min(i.bit_length(), (32768 - i).bit_length()))\n \nn = int(input())\na = list(map(int, input().split()))\nfor i in a:\n\tprint(min(i.bit_length(), (",
            "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n\tprint(min(a[i] % 32768, 32768 - a[i] % 32768))\n \n \n\n",
            "n = int(input())\na = list(map(int, input().split()))\nfor i in a:\n\tprint(min(i.bit_length() - 1, 15 - i.bit_length()))\n \n \nfor i in a:\n\tif i == 0:\n\t\tcontinue\n\tprint(15 - i.bit_length())\n \n \nfor i in a:\n\tif i == 0:\n\t\tcontinue\n\tprint(i.bit_length() - 1)\n \n \nfor i in a:\n\tif i == 0:\n\t\tcontinue\n\tprint(min(i.bit_length() - 1, 15 - i.bit_length()))\n \n \nfor i in a:\n\tif i == 0:\n\t\tcontinue\n\tprint(i.bit_length() - 1)\n \n \nfor i in a:\n\tif i == 0:\n\t\tcontinue\n\tprint(15 - i.bit_length())\n \n \nfor i in a:\n\tif i == 0:\n\t\tcontinue\n\tprint(min(i.bit_length() - 1, 15 - i.bit_length()))\n \n \nfor i in a:\n\tif i == 0:\n\t\tcontinue\n\tprint(i.bit_length() - 1)\n \n \nfor i in a:\n\tif i == 0:\n\t\tcontinue\n\tprint(15 - i.bit_length())\n \n \nfor i in a:\n\tif i == 0:\n\t\tcontinue\n\tprint(min(i.bit_length() - 1, 15 - i.bit_length()))\n \n \nfor i in a:\n\tif i == 0:\n\t\tcontinue\n\tprint(i.bit_length() - 1)\n \n \nfor i in a:\n\tif i == 0:\n\t\tcontinue\n\tprint(15 - i.bit_length())\n \n \nfor i in a:\n\tif i == 0:\n\t\tcontinue\n\tprint(min(i.bit_length() - 1, 15 - i.bit_length()))\n \n \nfor i in a:\n\tif i == 0:\n\t\tcontinue\n\tprint(i.bit_length() - 1)\n \n \nfor i in a:\n\tif i == 0:\n\t\tcontinue\n\tprint(15 - i.bit_length())\n \n \nfor i in a:\n\tif i == 0:\n\t\tcontinue\n\tprint(min(i.bit_length() - 1, 15 - i.bit_length()))\n \n \nfor i in a:\n\tif i == 0:\n\t\tcontinue\n\tprint(i.bit_length() - 1)\n \n \nfor i in a:\n\tif i == 0:\n\t\tcontinue\n\tprint(15 - i.bit_length())\n \n \nfor i in a:\n\tif i == 0:\n\t\tcontinue\n\tprint(min(i.bit_length() - 1, 15 - i.bit_length()))\n \n \nfor i in a:\n\tif i == 0:\n\t\tcontinue\n\tprint(i.bit_length() - 1)\n \n \nfor i in a:\n\tif i == 0:\n\t\tcontinue\n\tprint(15 - i.bit_length())\n \n ",
            "n = int(input())\na = list(map(int, input().split()))\nans = [0] * n\nfor i in range(n):\n\tif a[i] > 0:\n\t\tans[i] += (a[i] & -a[i]).bit_length()\n\ta[i] = 0\nprint(*ans)\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
            "n = int(input())\nA = list(map(int, input().split()))\nfor i in range(n):\n\tif A[i] % 2 == 0:\n\t\tA[i] //= 2\n\twhile A[i] % 2 == 1:\n\t\tA[i] = (A[i] + 1) % 32768\n\tA[i] = (A[i] - 1) % 32768\nprint(*A)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "n = int(input())\na = list(map(int, input().split()))\nfor i in a:\n\tprint(min(i.bit_length(), i.bit_length() - 1, 15 - i.bit_length() % 16))\n \n \n",
            "n = int(input())\nl = list(map(int, input().split()))\nfor i in l:\n\tprint(min(i % 2, 1 + i // 2 % 2) + i // 2)\n \n \ninput = __builtin_input\nprint = __builtin_print\ninput()\nprint(*map(lambda x: min(x % 2, 1 + x // 2 % 2) + x // 2, map(int, input().split())))\n \nimport sys\ninput = sys.stdin.readline\nn = int(input())\na = [*map(int, input().split())]\nprint(*[min(i % 2, 1 + i // 2 % 2) + i // 2 for i in a])\n \ninput = lambda : map(int, sys.stdin.readline().split())\nn = int(input())\na = [*input()]\nprint(*[min(i % 2, 1 + i // 2 % 2) + i // 2 for i in a])\n \nimport sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nfor i in a:\n\tprint(min(i % 2, 1 + i // 2 % 2) + i // 2)\n \nn = int(input())\nl = list(map(int, input().split()))\nfor i in l:\n\tprint(min(i % 2, 1 + i // 2 % 2) + i // 2)\n \ninput = lambda : map(int, sys.stdin.readline().split())\nn = int(input())\na = [*input()]\nprint(*[min(i % 2, 1 + i // 2 % 2) + i // 2 for i in a])\n \nimport sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nfor i in a:\n\tprint(min(i % 2, 1 + i // 2 % 2) + i // 2)\n \nimport sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nfor i in a:\n\tprint(min(i % 2, 1 + i // 2 % 2) + i // 2)\n \nimport sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nfor i in a:\n\tprint(min(i % 2, 1 + i // 2 % 2) + i // 2)\n \nimport sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nfor i in a:\n\tprint(min(i % 2, 1 + i // 2 % 2) + i // 2)\n \nimport sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nfor i in a:\n\tprint(min(i % 2, 1 + i // 2 % 2) + i // 2)\n \nimport sys\ninput",
            "n = int(input())\na = list(map(int, input().split()))\nprint(*(min(a.count(x), a.count(32767 - x)) for x in a))\n \n \nfor i in range(32768):\n\tif i % 2 == 1:\n\t\tcontinue\n\ta = list(map(lambda x: x % 32768, a))\n\ta = [i if i < a.count(i) else 32767 - i for i in a]\n\tprint(*(min(a.count(x), a.count(32767 - x)) for x in a))\n \n \nfor i in range(32768):\n\tif i % 2 == 0:\n\t\tcontinue\n\ta = list(map(lambda x: x % 32768, a))\n\ta = [i if i < a.count(i) else 32767 - i for i in a]\n\tprint(*(min(a.count(x), a.count(32767 - x)) for x in a))\n \n \nfor i in range(32768):\n\tif i % 4 == 0:\n\t\tcontinue\n\ta = list(map(lambda x: x % 32768, a))\n\ta = [i if i < a.count(i) else 32767 - i for i in a]\n\tprint(*(min(a.count(x), a.count(32767 - x)) for x in a))\n \n \nfor i in range(32768):\n\tif i % 4 == 3:\n\t\tcontinue\n\ta = list(map(lambda x: x % 32768, a))\n\ta = [i if i < a.count(i) else 32767 - i for i in a]\n\tprint(*(min(a.count(x), a.count(32767 - x)) for x in a))\n \n \nfor i in range(32768):\n\tif i % 8 == 0:\n\t\tcontinue\n\ta = list(map(lambda x: x % 32768, a))\n\ta = [i if i < a.count(i) else 32767 - i for i in a]\n\tprint(*(min(a.count(x), a.count(32767 - x)) for x in a))\n \n \nfor i in range(32768):\n\tif i % 8 == 7:\n\t\tcontinue\n\ta = list(map(lambda x: x % 32768, a))\n\ta = [i if i < a.count(i) else 32767 - i for i in a]\n\tprint(*(min(a.count(x), a.count(32767 - x)) for x in a))\n \n \nfor i in range(32768):\n\tif i % 16 == 0:\n\t\tcontinue\n\ta = list(map(lambda x: x % 32768, a))\n\ta = [i if i < a.count(i) else 32767 - i for i in a]\n\tprint(*(min(a.count(",
            "n = int(input())\na = list(map(int, input().split()))\nfor i in a:\n\tprint(min(i % 2, i // 2 % 2) + (i + 1) // 2 % 2 + i // 4)\n \n \nfor i in a:\n\tprint(min(i % 2, i // 2 % 2) + (i + 1) // 2 % 2 + i // 4)\n \n \nfor i in a:\n\tprint(min(i % 2, i // 2 % 2) + (i + 1) // 2 % 2 + i // 4)\n \n \nfor i in a:\n\tprint(min(i % 2, i // 2 % 2) + (i + 1) // 2 % 2 + i // 4)\n \n \nfor i in a:\n\tprint(min(i % 2, i // 2 % 2) + (i + 1) // 2 % 2 + i // 4)\n \n \nfor i in a:\n\tprint(min(i % 2, i // 2 % 2) + (i + 1) // 2 % 2 + i // 4)\n \n \nfor i in a:\n\tprint(min(i % 2, i // 2 % 2) + (i + 1) // 2 % 2 + i // 4)\n \n \nfor i in a:\n\tprint(min(i % 2, i // 2 % 2) + (i + 1) // 2 % 2 + i // 4)\n \n \nfor i in a:\n\tprint(min(i % 2, i // 2 % 2) + (i + 1) // 2 % 2 + i // 4)\n \n \nfor i in a:\n\tprint(min(i % 2, i // 2 % 2) + (i + 1) // 2 % 2 + i // 4)\n \n \nfor i in a:\n\tprint(min(i % 2, i // 2 % 2) + (i + 1) // 2 % 2 + i // 4)\n \n \nfor i in a:\n\tprint(min(i % 2, i // 2 % 2) + (i + 1) // 2 % 2 + i // 4)\n \n \nfor i in a:\n\tprint(min(i % 2, i // 2 % 2) + (i + 1) // 2 % 2 + i // 4)\n \n \nfor i in a:\n\tprint(min(i % 2, i // 2 % 2) + (i + 1) // 2 % 2 + i // 4)\n \n \nfor i in a:\n\tprint(min(i % 2, i // 2 % 2) + (i + 1) // 2 % 2 + i // 4)\n \n \nfor i in a:\n\tprint(min(i % 2, i // 2 % 2) + (i + 1) // 2 % 2 + i // 4)\n \n \nfor i in a:\n\tprint(min(i % 2, i // 2 % 2) + (i + ",
            "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n\tans = 0\n\twhile a[i]:\n\t\tx = min(a[i].bit_length(), 15)\n\t\ta[i] ^= 1 << x\n\t\tans += 1\n\tprint(ans)\n \n \ninput = __builtin_input\n \ninput = open('input.txt').readline\nn = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n\tans = 0\n\twhile a[i]:\n\t\tx = min(a[i].bit_length(), 15)\n\t\ta[i] ^= 1 << x\n\t\tans += 1\n\tprint(ans)\n \n \nn = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n\tans = 0\n\twhile a[i]:\n\t\tx = min(a[i].bit_length(), 15)\n\t\ta[i] ^= 1 << x\n\t\tans += 1\n\tprint(ans)\n \n \nn = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n\tans = 0\n\twhile a[i]:\n\t\tx = min(a[i].bit_length(), 15)\n\t\ta[i] ^= 1 << x\n\t\tans += 1\n\tprint(ans)\n \n \nn = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n\tans = 0\n\twhile a[i]:\n\t\tx = min(a[i].bit_length(), 15)\n\t\ta[i] ^= 1 << x\n\t\tans += 1\n\tprint(ans)\n \n \nn = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n\tans = 0\n\twhile a[i]:\n\t\tx = min(a[i].bit_length(), 15)\n\t\ta[i] ^= 1 << x\n\t\tans += 1\n\tprint(ans)\n \n \nn = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n\tans = 0\n\twhile a[i]:\n\t\tx = min(a[i].bit_length(), 15)\n\t\ta[i] ^= 1 << x\n\t\tans += 1\n\tprint(ans)\n \n \nn = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n\tans = 0\n\twhile a[i]:\n\t\tx = min(a[i].bit_length(), 15)\n\t\ta[i] ^= 1 << x\n\t\tans += 1\n\tprint(ans)\n \n \nn = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n\tans = 0\n\twhile a[i]:\n\t\tx = min(a[i].bit_length(), 15)\n\t\ta[i] ^= 1 << x\n\t\tans += 1\n\tprint(ans)\n",
            "n = int(input())\na = list(map(int, input().split()))\nfor i in a:\n\tprint(min(i % 2, 1 + i // 2 % 2, i // 4 % 2, i // 8 % 2, i // 16 % 2, i // 32 % 2, i // 64 % 2, i // 128 % 2, i // 256 % 2, i // 512 % 2, i // 1024 % 2, i // 2048 % 2, i // 4096 % 2, i // 8192 % 2, i // 16384 % 2, i // 32768 % 2))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "n = int(input())\na = [int(i) for i in input().split()]\nfor i in a:\n\tans = 0\n\twhile i != 0:\n\t\tans += 1\n\t\ti = (i + 1) & 32767\n\tprint(ans)\n \n \n\n \n\n \n\n \n\n \n \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "n = int(input())\na = [int(i) for i in input().split()]\nfor i in a:\n\tx = 0\n\twhile i:\n\t\tx += i & 1\n\t\ti >>= 1\n\tprint(x)\n \n \ninput = __builtins__.input\n \nn = int(input())\na = [int(i) for i in input().split()]\nfor i in a:\n\tx = 0\n\twhile i:\n\t\tx += i & 1\n\t\ti >>= 1\n\tprint(x)\n \n \ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tfor i in range(n):\n\t\tprint(bin(a[i]).count('1'))\nmain()\n \n \ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tfor i in a:\n\t\tprint(bin(i).count('1'))\nmain()\n \n \ndef main():\n\tn = int(input())\n\ta = [int(x) for x in input().split()]\n\tfor i in range(n):\n\t\tprint(bin(a[i]).count('1'))\nmain()\n \n \ndef main():\n\tn = int(input())\n\ta = [int(x) for x in input().split()]\n\tfor i in a:\n\t\tprint(bin(i).count('1'))\nmain()\n \n \ndef main():\n\tn = int(input())\n\ta = [int(x) for x in input().split()]\n\tfor i in range(n):\n\t\tprint(bin(a[i]).count('1'))\nmain()\n \n \ndef main():\n\tn = int(input())\n\ta = [int(x) for x in input().split()]\n\tfor i in a:\n\t\tprint(bin(i).count('1'))\nmain()\n \n \ndef main():\n\tn = int(input())\n\ta = [int(x) for x in input().split()]\n\tfor i in range(n):\n\t\tprint(bin(a[i]).count('1'))\nmain()\n \n \ndef main():\n\tn = int(input())\n\ta = [int(x) for x in input().split()]\n\tfor i in a:\n\t\tprint(bin(i).count('1'))\nmain()\n \n \ndef main():\n\tn = int(input())\n\ta = [int(x) for x in input().split()]\n\tfor i in range(n):\n\t\tprint(bin(a[i]).count('1'))\nmain()\n \n \ndef main():\n\tn = int(input())\n\ta = [int(x) for x in input().split()]\n\tfor i in a:\n\t\tprint(bin(i).count('1'))\nmain()\n \n \ndef main():\n\tn = int(input())\n\ta = [int(x) for x in input().split()]\n\tfor i in a:\n\t\tprint(bin(i).count('1'))\nmain()\n \n \ndef main():\n\tn = int(input())\n\ta = [int(x) for x in input().split()]\n\tfor i in a:\n",
            "n = int(input())\na = [int(x) for x in input().split()]\nb = [0] * 32768\nfor i in a:\n\tb[i] += 1\nc = 0\nd = 0\nfor i in b:\n\tc += i // 2\n\td += i % 2\nfor i in a:\n\tprint(c + (d - (i > 0)) // 2)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n "
        ]
    },
    {
        "task_id": 23,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: Matryoshka is a wooden toy in the form of a painted doll, inside which you can put a similar doll of a smaller size.\n\nA set of nesting dolls contains one or more nesting dolls, their sizes are consecutive positive integers. Thus, a set of nesting dolls is described by two numbers: $s$ \u2014 the size of a smallest nesting doll in a set and $m$ \u2014 the number of dolls in a set. In other words, the set contains sizes of $s, s + 1, \\dots, s + m - 1$ for some integer $s$ and $m$ ($s,m > 0$).\n\nYou had one or more sets of nesting dolls. Recently, you found that someone mixed all your sets in one and recorded a sequence of doll sizes \u2014 integers $a_1, a_2, \\dots, a_n$.\n\nYou do not remember how many sets you had, so you want to find the minimum number of sets that you could initially have.\n\nFor example, if a given sequence is $a=[2, 2, 3, 4, 3, 1]$. Initially, there could be $2$ sets:\n\nthe first set consisting of $4$ nesting dolls with sizes $[1, 2, 3, 4]$;\n\na second set consisting of $2$ nesting dolls with sizes $[2, 3]$.\n\nAccording to a given sequence of sizes of nesting dolls $a_1, a_2, \\dots, a_n$, determine the minimum number of nesting dolls that can make this sequence.\n\nEach set is completely used, so all its nesting dolls are used. Each element of a given sequence must correspond to exactly one doll from some set.\n\n\n-----Input-----\n\nThe first line of input data contains a single integer $t$ ($1 \\le t \\le 10^4$) \u2014 the number of test cases.\n\nThe description of the test cases follows.\n\nThe first line of each test case contains one integer $n$ ($1 \\le n \\le 2 \\cdot 10^5$) \u2014 the total number of matryoshkas that were in all sets.\n\nThe second line of each test case contains $n$ integers $a_1, a_2, \\dots, a_n$ ($1 \\le a_i \\le 10^9$)  \u2014 the sizes of the matryoshkas.\n\nIt is guaranteed that the sum of values of $n$ over all test cases does not exceed $2\\cdot10^5$.\n\n\n-----Output-----\n\nFor each test case, print one integer $k$ \u2014 the minimum possible number of matryoshkas sets.\n\n\n-----Examples-----\n\nInput\n10\n6\n2 2 3 4 3 1\n5\n11 8 7 10 9\n6\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\n8\n1 1 4 4 2 3 2 3\n6\n1 2 3 2 3 4\n7\n10 11 11 12 12 13 13\n7\n8 8 9 9 10 10 11\n8\n4 14 5 15 6 16 7 17\n8\n5 15 6 14 8 12 9 11\n5\n4 2 2 3 4\nOutput\n2\n1\n6\n2\n2\n2\n2\n2\n4\n3\n\n\n-----Note-----\n\nThe first test case is described in the problem statement.\n\nIn the second test case, all matryoshkas could be part of the same set with minimum size $s=7$.\n\nIn the third test case, each matryoshka represents a separate set. \n\n### Response:\n",
        "output": [
            "for s in [*open(0)][2::2]:\n\ts = [*map(int, s.split())]\n\tprint(sum((x - y for (x, y) in zip(s[1:], s[:-1]))))\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n ",
            "for s in [*open(0)][2::2]:\n\td = 0\n\tfor x in map(int, s.split()):\n\t\tif x > d:\n\t\t\td += 1\n\tprint(d)\n \n \n\n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tk = 0\n\twhile a:\n\t\tb = [a.pop(0)]\n\t\twhile a and a[0] == b[-1] + 1:\n\t\t\tb.append(a.pop(0))\n\t\tk += 1\n\tprint(k)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\ts = sorted(map(int, s.split()))\n\tprint(sum((x - s.pop() for x in s)))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tans = 1\n\ti = 0\n\twhile i < n:\n\t\tj = i\n\t\twhile j < n - 1 and a[j + 1] == a[j] + 1:\n\t\t\tj += 1\n\t\ti = j + 1\n\t\tans += 1\n\tprint(ans - 1)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::2]:\n\tn = [*map(int, s.split())]\n\ti = 0\n\twhile i < len(n):\n\t\tj = i + 1\n\t\twhile j < len(n) and n[j] == n[j - 1] + 1:\n\t\t\tj += 1\n\t\ti = j\n\tprint(i)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tans = 0\n\tfor i in range(n):\n\t\tans = max(ans, a[i] - a[i - 1] if i > 0 else 0)\n\tprint(ans + 1)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = sorted(map(int, input().split()))\n\ti = 0\n\twhile i < n:\n\t\tj = i + 1\n\t\twhile j < n and a[j] - a[j - 1] <= 1:\n\t\t\tj += 1\n\t\ti = j\n\tprint(n - i)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::2]:\n\tk = 0\n\ta = list(map(int, s.split()))\n\tfor i in range(len(a)):\n\t\tk += a[i] > a[i - 1]\n\tprint(k + 1)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "R = lambda : map(int, input().split())\n(t,) = R()\nfor _ in [0] * t:\n\t(n,) = R()\n\ta = sorted(R())\n\tk = 1\n\tfor i in range(n - 1):\n\t\tif a[i + 1] > a[i] + 1:\n\t\t\tk += 1\n\tprint(k)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tans = 1\n\tfor i in range(n - 1):\n\t\tif a[i] + 1 == a[i + 1]:\n\t\t\tans += 1\n\tprint(ans)\n \n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n ",
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(len(set(a[i] - a[i - 1] for i in range(1, len(a)))))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "I = input\nfor _ in [0] * int(I()):\n\tn = int(I())\n\ta = sorted(map(int, I().split()))\n\tr = c = 1\n\tfor i in range(1, n):\n\t\tif a[i] != a[i - 1]:\n\t\t\tc = 1\n\t\tif a[i] == a[i - 1] + 1:\n\t\t\tc += 1\n\t\tr = max(r, c)\n\tprint(r)\n \n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n",
            "for s in [*open(0)][2::2]:\n\tprint(s.count('1000000000'))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::2]:\n\tr = 0\n\tfor x in map(int, s.split()):\n\t\tr = max(r, x)\n\tprint(r)\n \n \n\n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum((b - a[i] for (i, b) in enumerate(a[1:], 1))))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\tprint(max((len(a) for a in (s.split(),))))\n \n\n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\ti = 0\n\twhile i < len(a):\n\t\tj = i\n\t\twhile j < len(a) and a[j] > a[j - 1]:\n\t\t\tj += 1\n\t\ti = j\n\tprint(j - i)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\tk = i = 0\n\tfor x in map(int, s.split()):\n\t\tk = max(k, x - i)\n\t\ti += x\n\tprint(k)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tb = [0]\n\tfor i in range(n):\n\t\tif a[i] > b[-1]:\n\t\t\tb.append(a[i])\n\tprint(len(b) - 1)\n \n \n\n \n\n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n"
        ]
    },
    {
        "task_id": 24,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: Amr is a young coder who likes music a lot. He always wanted to learn how to play music but he was busy coding so he got an idea.\n\nAmr has n instruments, it takes a_{i} days to learn i-th instrument. Being busy, Amr dedicated k days to learn how to play the maximum possible number of instruments.\n\nAmr asked for your help to distribute his free days between instruments so that he can achieve his goal.\n\n\n-----Input-----\n\nThe first line contains two numbers n, k (1 \u2264 n \u2264 100, 0 \u2264 k \u2264 10 000), the number of instruments and number of days respectively.\n\nThe second line contains n integers a_{i} (1 \u2264 a_{i} \u2264 100), representing number of days required to learn the i-th instrument.\n\n\n-----Output-----\n\nIn the first line output one integer m representing the maximum number of instruments Amr can learn.\n\nIn the second line output m space-separated integers: the indices of instruments to be learnt. You may output indices in any order.\n\nif there are multiple optimal solutions output any. It is not necessary to use all days for studying.\n\n\n-----Examples-----\nInput\n4 10\n4 3 1 2\n\nOutput\n4\n1 2 3 4\nInput\n5 6\n4 3 1 1 2\n\nOutput\n3\n1 3 4\nInput\n1 3\n4\n\nOutput\n0\n\n\n\n-----Note-----\n\nIn the first test Amr can learn all 4 instruments.\n\nIn the second test other possible solutions are: {2, 3, 5} or {3, 4, 5}.\n\nIn the third test Amr doesn't have enough time to learn the only presented instrument. \n\n### Response:\n",
        "output": [
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\ni = 0\nj = n - 1\nwhile i < j and a[i] + a[j] <= k:\n\ti += 1\n\tj -= 1\nprint(n - i)\nprint(*list(range(1, i + 1)) + list(range(n - j, n + 1)))\n \n\n\n\n\n \n\n\n\n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nb = [(i + 1, a[i]) for i in range(n)]\nb.sort(key=lambda x: x[1])\nl = []\nfor i in range(n):\n\tif k >= b[i][1]:\n\t\tl.append(b[i][0])\n\t\tk -= b[i][1]\nprint(len(l))\nprint(*l)\n \n\n\n",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\ni = 0\nj = n - 1\nwhile i < j:\n\tif a[i] + a[j] <= k:\n\t\ti += 1\n\t\tj -= 1\n\telse:\n\t\tj -= 1\nprint(n - i)\nprint(*range(1, i + 1), *range(n - j, n + 1))\n \n\n\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n ",
            "(n, k) = map(int, input().split())\na = sorted(enumerate(map(int, input().split())), key=lambda x: x[1])\nans = []\nfor i in range(n):\n\t(x, y) = a[i]\n\tif k >= y:\n\t\tk -= y\n\t\tans.append(x + 1)\nprint(len(ans))\nprint(' '.join(map(str, ans)))\n \n\n\n",
            "(n, k) = map(int, input().split())\nl = [int(x) for x in input().split()]\ni = 1\nwhile k >= l[i - 1]:\n\tk -= l[i - 1]\n\ti += 1\nprint(i - 1)\nprint(' '.join(map(str, range(1, i))))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nb = sorted(range(n), key=a.__getitem__)\ns = [0]\nfor i in b:\n\ts.append(s[-1] + a[i])\ni = 0\nwhile i < n and s[i + 1] <= k:\n\ti += 1\nprint(i)\nprint(*b[:i + 1])\n \n\n\n\n \n\n\n \n\n \n\n \n \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nb = [(i + 1, a[i]) for i in range(n)]\nb.sort(key=lambda x: -x[1])\nans = []\nfor i in range(n):\n\tif b[i][1] <= k:\n\t\tans.append(b[i][0])\n\t\tk -= b[i][1]\nprint(len(ans))\nprint(*ans)\n \n\n\n\n \n\n\n \n\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n ",
            "(n, k) = map(int, input().split())\na = sorted(enumerate(map(int, input().split()), 1), key=lambda x: -x[1])\nans = []\nfor (i, t) in a:\n\tif t <= k:\n\t\tans.append(i)\n\t\tk -= t\nprint(len(ans))\nprint(*ans)\n ",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nb = [(a[i], i + 1) for i in range(n)]\nb.sort()\nres = []\nfor i in range(n):\n\tif k >= b[i][0]:\n\t\tres.append(b[i][1])\n\t\tk -= b[i][0]\nprint(len(res))\nprint(*res)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "(n, k) = map(int, input().split())\nl = list(map(int, input().split()))\nl.sort()\ni = 0\nj = n - 1\nwhile i < j and l[i] + l[j] <= k:\n\ti += 1\n\tj -= 1\nprint(n - i)\nprint(*range(1, n - i + 1))\n \n\n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "(n, k) = map(int, input().split())\na = sorted(map(int, input().split()))\ni = n\nwhile i > 0 and k >= a[i - 1]:\n\tk -= a[i - 1]\n\ti -= 1\nprint(i)\nprint(*range(1, i + 1))\n \n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nc = []\nfor i in range(n):\n\tif a[i] <= k:\n\t\tc.append(i + 1)\n\t\tk -= a[i]\nprint(len(c))\nprint(*c)\n ",
            "(n, k) = map(int, input().split())\na = sorted(map(int, input().split()))\nm = sum((k >= x for x in a))\nprint(m)\nprint(' '.join(map(str, sorted(range(1, n + 1))[:m])))\n \n\ndef readline():\n\treturn tuple(map(int, input().split()))\n \n\ndef solve(n, k, a):\n\tb = sorted(range(1, n + 1), key=lambda x: a[x - 1])\n\treturn b[:sum((k >= a[x] for x in b))]\n \n\nprint(solve(*readline(), readline()))\n \n\ndef main():\n\treadline()\n\treadline()\n\tprint(solve(*readline(), readline()))\nmain()\n \nmain()\n \n\ndef readline():\n\treturn map(int, input().split())\n \n\ndef main():\n\t(n, k) = readline()\n\ta = sorted(readline())\n\tprint(solve(n, k, a))\nmain()\n \nmain()\n \n\ndef readline():\n\treturn map(int, input().split())\n \n\ndef main():\n\t(n, k) = readline()\n\ta = sorted(readline())\n\tprint(solve(n, k, a))\nmain()\n \nmain()\n \n\ndef main():\n\t(n, k) = map(int, input().split())\n\ta = sorted(map(int, input().split()))\n\tprint(solve(n, k, a))\nmain()\n \nmain()\n \n\ndef solve(n, k, a):\n\tb = sorted(range(1, n + 1), key=lambda x: a[x - 1])\n\treturn b[:sum((k >= a[x] for x in b))]\n \n\ndef main():\n\treadline()\n\tprint(solve(*readline(), readline()))\nmain()\n \nmain()\n \n\ndef main():\n\t(n, k) = map(int, input().split())\n\ta = sorted(map(int, input().split()))\n\tprint(solve(n, k, a))\nmain()\n \nmain()\n \n\ndef main():\n\t(n, k) = map(int, input().split())\n\ta = sorted(map(intruction, input().split()))\n\tprint(solve(n, k, a))\nmain()\n \nmain()\n \n\ndef solve(n, k, a):\n\tb = sorted(range(1, n + 1), key=lambda x: a[x - 1])\n\treturn b[:sum((k >= a[x] for x in b))]\n \n\ndef main():\n\treadline()\n\tprint(solve(*readline(), readline()))\nmain()\n \nmain()\n \n\ndef main():\n\t(n, k) = map(int, input().split())\n\ta = sorted(map(int, input().split()))\n\tprint(solve(n, k, a))\nmain()\n \nmain()\n \n\ndef main():\n\t(n, k) = map(int, input().split())\n\ta = sorted(map(int, input().split()))\n\tprint(solve(n, k, a))\nmain()\n \nmain()\n \n\ndef",
            "(n, k) = map(int, input().split())\nl = [*enumerate(map(int, input().split()), 1)]\nl.sort()\ni = 0\nwhile k - l[i][1] >= 0:\n\tk -= l[i][1]\n\ti += 1\nprint(i)\nprint(*[x[0] for x in l[:i]])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\ni = 0\nwhile i < n and k >= a[i]:\n\tk -= a[i]\n\ti += 1\nprint(i)\nprint(*range(1, i + 1))\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n ",
            "(n, k) = map(int, input().split())\na = sorted([int(x) for x in input().split()])\ni = 0\nwhile i < n and k >= a[i]:\n\tk -= a[i]\n\ti += 1\nprint(i)\nprint(' '.join(map(str, range(1, i + 1))))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "(n, k) = map(int, input().split())\na = sorted(map(int, input().split()))\nm = 0\nwhile m < n and a[m] <= k:\n\tk -= a[m]\n\tm += 1\nprint(m)\nprint(*range(1, m + 1))\n \n\n",
            "(n, k) = map(int, input().split())\na = sorted(enumerate(map(int, input().split()), 1), key=lambda x: x[1])\ni = 0\nwhile k > 0:\n\tk -= a[i][1]\n\ti += 1\nprint(i)\nprint(*sorted((a[i - 1][0] for i in range(1, i))))\n \n \n ",
            "(n, k) = map(int, input().split())\na = sorted(enumerate(map(int, input().split()), 1), key=lambda x: x[1])\ni = 0\nwhile i < n and k >= a[i][1]:\n\tk -= a[i][1]\n\ti += 1\nprint(i)\nprint(*[x[0] for x in a[:i]])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n\tif a[i] <= k:\n\t\tb.append(i)\n\t\tk -= a[i]\nprint(len(b))\nprint(*b)\n \n\n\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n "
        ]
    },
    {
        "task_id": 25,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: There are $n$ candies put from left to right on a table. The candies are numbered from left to right. The $i$-th candy has weight $w_i$. Alice and Bob eat candies.\n\nAlice can eat any number of candies from the left (she can't skip candies, she eats them in a row).\n\nBob can eat any number of candies from the right (he can't skip candies, he eats them in a row).\n\nOf course, if Alice ate a candy, Bob can't eat it (and vice versa).\n\nThey want to be fair. Their goal is to eat the same total weight of candies. What is the most number of candies they can eat in total?\n\n\n-----Input-----\n\nThe first line contains an integer $t$ ($1 \\leq t \\leq 10^4$) \u2014 the number of test cases.\n\nThe first line of each test case contains an integer $n$ ($1 \\leq n \\leq 2\\cdot10^5$) \u2014 the number of candies on the table.\n\nThe second line of each test case contains $n$ integers $w_1, w_2, \\dots, w_n$ ($1 \\leq w_i \\leq 10^4$) \u2014 the weights of candies from left to right.\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $2\\cdot10^5$.\n\n\n-----Output-----\n\nFor each test case, print a single integer \u2014 the maximum number of candies Alice and Bob can eat in total while satisfying the condition.\n\n\n-----Examples-----\n\nInput\n4\n3\n10 20 10\n6\n2 1 4 2 4 1\n5\n1 2 4 8 16\n9\n7 3 20 5 15 1 11 8 10\nOutput\n2\n6\n0\n7\n\n\n-----Note-----\n\nFor the first test case, Alice will eat one candy from the left and Bob will eat one candy from the right. There is no better way for them to eat the same total amount of weight. The answer is $2$ because they eat two candies in total.\n\nFor the second test case, Alice will eat the first three candies from the left (with total weight $7$) and Bob will eat the first three candies from the right (with total weight $7$). They cannot eat more candies since all the candies have been eaten, so the answer is $6$ (because they eat six candies in total).\n\nFor the third test case, there is no way Alice and Bob will eat the same non-zero weight so the answer is $0$.\n\nFor the fourth test case, Alice will eat candies with weights $[7, 3, 20]$ and Bob will eat candies with weights $[10, 8, 11, 1]$, they each eat $30$ weight. There is no better partition so the answer is $7$. \n\n### Response:\n",
        "output": [
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tl = 0\n\tr = sum(a)\n\twhile l < r:\n\t\tm = (l + r) // 2\n\t\t(x, y) = (0, 0)\n\t\tfor i in a:\n\t\t\tif x + i <= m:\n\t\t\t\tx += i\n\t\t\telif y + i <= m:\n\t\t\t\ty += i\n\t\t\telse:\n\t\t\t\tbreak\n\t\telse:\n\t\t\tr = m\n\t\t\tcontinue\n\t\tr = m - 1\n\tprint(r)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(min(sum(a[:i]) + sum(a[len(a) - i:]) for i in range(1, len(a) + 1)))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\ta = 0\n\tfor i in map(int, s.split()):\n\t\ta += i\n\tprint(a)\n \n \nfor s in [*open(0)][2::2]:\n\ta = b = c = 0\n\tfor i in map(int, s.split()):\n\t\ta += i\n\t\tb += i\n\t\tif i <= c:\n\t\t\ta -= i\n\t\t\tc += i\n\t\telse:\n\t\t\tc = i\n\tprint(a)\n \n \nfor s in [*open(0)][2::2]:\n\ta = b = c = 0\n\tfor i in map(int, s.split()):\n\t\ta += i\n\t\tb += i\n\t\tif i <= c:\n\t\t\ta -= i\n\t\t\tc += i\n\t\telse:\n\t\t\tc = i\n\tprint(a)\n \n \nfor s in [*open(0)][2::2]:\n\ta = b = c = 0\n\tfor i in map(int, s.split()):\n\t\ta += i\n\t\tb += i\n\t\tif i <= c:\n\t\t\ta -= i\n\t\t\tc += i\n\t\telse:\n\t\t\tc = i\n\tprint(a)\n \n \nfor s in [*open(0)][2::2]:\n\ta = b = c = 0\n\tfor i in map(int, s.split()):\n\t\ta += i\n\t\tb += i\n\t\tif i <= c:\n\t\t\ta -= i\n\t\t\tc += i\n\t\telse:\n\t\t\tc = i\n\tprint(a)\n \n \nfor s in [*open(0)][2::2]:\n\ta = b = c = 0\n\tfor i in map(int, s.split()):\n\t\ta += i\n\t\tb += i\n\t\tif i <= c:\n\t\t\ta -= i\n\t\t\tc += i\n\t\telse:\n\t\t\tc = i\n\tprint(a)\n \n \nfor s in [*open(0)][2::2]:\n\ta = b = c = 0\n\tfor i in map(int, s.split()):\n\t\ta += i\n\t\tb += i\n\t\tif i <= c:\n\t\t\ta -= i\n\t\t\tc += i\n\t\telse:\n\t\t\tc = i\n\tprint(a)\n \n \nfor s in [*open(0)][2::2]:\n\ta = b = c = 0\n\tfor i in map(int, s.split()):\n\t\ta += i\n\t\tb += i\n\t\tif i <= c:\n\t\t\ta -= i\n\t\t\tc += i\n\t\telse:\n\t\t\tc = i\n\tprint(a)\n \n \nfor s in [*open(0)][2::2]:\n\ta = b = c = 0\n\tfor i in map(int, s.split()):\n\t\ta += i\n\t\tb += i\n\t\tif i <= c:\n\t\t\ta -= i\n\t\t\tc += i\n\t\telse:\n\t\t\tc = i\n\tprint(a)\n \n \nfor s in [*open(0)][2::2]:\n\ta = b = c = 0\n\tfor i in map(int, s.split()):\n\t\ta += i\n\t\tb += i\n\t\tif i <= c:",
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tn = len(a)\n\ti = 0\n\tj = n - 1\n\twhile i < j and a[i] == a[j]:\n\t\ti += 1\n\t\tj -= 1\n\twhile i < j:\n\t\ta[i + 1] += a[i]\n\t\ta[j - 1] += a[j]\n\t\ti += 1\n\t\tj -= 1\n\tprint(n - i)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tprint(max(sum(a[:i]) - sum(a[i + 1:]) for i in range(n)))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tx = sum(a)\n\tans = 0\n\ti = 0\n\tj = n - 1\n\twhile i <= j:\n\t\twhile i < n and a[i] == 0:\n\t\t\ti += 1\n\t\twhile j >= 0 and a[j] == 0:\n\t\t\tj -= 1\n\t\tif i <= j:\n\t\t\tans += 1\n\t\t\tx -= a[i] + a[j]\n\t\t\ta[i] = 0\n\t\t\ta[j] = 0\n\t\t\twhile i < n and a[i] == 0:\n\t\t\t\ti += 1\n\t\t\twhile j >= 0 and a[j] == 0:\n\t\t\t\tj -= 1\n\tprint(ans if x == 0 else -1)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\tn = int(input())\n\tw = list(map(int, input().split()))\n\ta = w[0]\n\tb = w[-1]\n\ti = 1\n\tj = n - 2\n\tans = 0\n\twhile i <= j:\n\t\tif a < b:\n\t\t\ta += w[i]\n\t\t\ti += 1\n\t\telse:\n\t\t\tb += w[j]\n\t\t\tj -= 1\n\t\tif a == b:\n\t\t\tans = a\n\tprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tprint(min(n, max(a) - min(a) + 1))\n \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(a) - max(a))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(a) - max(a))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(a) - max(a))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(a) - max(a))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(a) - max(a))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(a) - max(a))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(a) - max(a))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(a) - max(a))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(a) - max(a))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(a) - max(a))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(a) - max(a))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(a) - max(a))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(a) - max(a))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(a) - max(a))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(a) - max(a))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(a) - max(a))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(a) - max(a))\n \n \nfor",
            "for s in [*open(0)][2::2]:\n\t(*w,) = map(int, s.split())\n\tprint(max(w[::-1].index(max(w)) + 1, w.index(max(w)) + 1))\n \n\n\n",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tans = 0\n\ts = sum(a)\n\tfor i in range(n):\n\t\tans = max(ans, s - a[i])\n\t\ts -= a[i]\n\tprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(min(a.count(min(a)), a.count(max(a))))\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n",
            "I = input\nfor _ in [0] * int(I()):\n\tn = int(I())\n\ta = list(map(int, I().split()))\n\tl = r = s = ans = 0\n\twhile l < n:\n\t\ts += a[l]\n\t\twhile r < n and s < a[r]:\n\t\t\ts -= a[r]\n\t\t\tr += 1\n\t\tans = max(ans, l + n - r)\n\t\tl += 1\n\t\twhile l < n and a[l] < a[l - 1]:\n\t\t\tl += 1\n\t\tr = l\n\tprint(ans)\n \n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n",
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(min(a[::-1].index(a[0]), a.index(a[-1])))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(a) - min(a))\n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(min(a.index(min(a)), a[::-1].index(max(a))))\n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(a.index(min(a)) + a[::-1].index(max(a)))\n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(min(a[::-1].index(a[0]), a.index(a[-1])))\n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(min(a.index(min(a)), a[::-1].index(max(a))))\n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(min(a.index(min(a)), a[::-1].index(max(a))))\n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(min(a.index(min(a)), a[::-1].index(max(a))))\n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(min(a.index(min(a)), a[::-1].index(max(a))))\n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(min(a.index(min(a)), a[::-1].index(max(a))))\n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(min(a.index(min(a)), a[::-1].index(max(a))))\n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(min(a.index(min(a)), a[::-1].index(max(a))))\n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(min(a.index(min(a)), a[::-1].index(max(a))))\n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(min(a.index(min(a)), a[",
            "for s in [*open(0)][2::2]:\n\t(*a,) = map(int, s.split())\n\tprint(min(a) + sum(x > a[0] + a[-1] for x in a))\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n",
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(min(sum(a[:i]) + sum(a[i + 1:]) for i in range(len(a))))\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n",
            "for s in [*open(0)][2::2]:\n\tprint(max((l := [*map(int, s.split())])[::2].count(min(l)) + (l[::2][::-1].count(min(l)))))\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n",
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(a[i] == a[-i - 1] for i in range((len(a) + 1) // 2)))\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n ",
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(min(sum(a[:i]) + sum(a[i:]) for i in range(1, len(a))))\n \n\n \n\n \n\n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n \n \n \n\n \n\n \n \n ",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tl = [0]\n\tfor i in range(n):\n\t\tl.append(l[-1] + a[i])\n\tr = [0]\n\tfor i in range(n - 1, -1, -1):\n\t\tr.append(r[-1] + a[i])\n\tans = 0\n\tfor i in range(n + 1):\n\t\tans = max(ans, l[i] + r[n - i])\n\tprint(ans)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tl = [0]\n\tfor i in range(n):\n\t\tl.append(l[-1] + a[i])\n\tr = [0]\n\tfor i in range(n - 1, -1, -1):\n\t\tr.append(r[-1] + a[i])\n\tans = 0\n\tfor i in range(n + 1):\n\t\tans = max(ans, l[i] + r[n - i])\n\tprint(ans)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tl = [0]\n\tfor i in range(n):\n\t\tl.append(l[-1] + a[i])\n\tr = [0]\n\tfor i in range(n - 1, -1, -1):\n\t\tr.append(r[-1] + a[i])\n\tans = 0\n\tfor i in range(n + 1):\n\t\tans = max(ans, l[i] + r[n - i])\n\tprint(ans)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tl = [0]\n\tfor i in range(n):\n\t\tl.append(l[-1] + a[i])\n\tr = [0]\n\tfor i in range(n - 1, -1, -1):\n\t\tr.append(r[-1] + a[i])\n\tans = 0\n\tfor i in range(n + 1):\n\t\tans = max(ans, l[i] + r[n - i])\n\tprint(ans)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tl = [0]\n\tfor i in range(n):\n\t\tl.append(l[-1] + a[i])\n\tr = [0]\n\tfor i in range(n - 1, -1, -1):\n\t\tr.append(r[-1] + a[i])\n\tans = 0\n\tfor i in range(n + 1):\n\t\tans = max(ans, l[i] + r[n - i])\n\tprint(ans)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tl = [0]\n\tfor i in range(n):\n\t\tl.append(l"
        ]
    },
    {
        "task_id": 26,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: Consider a conveyor belt represented using a grid consisting of $n$ rows and $m$ columns. The cell in the $i$-th row from the top and the $j$-th column from the left is labelled $(i,j)$. \n\nEvery cell, except $(n,m)$, has a direction R (Right) or D (Down) assigned to it. If the cell $(i,j)$ is assigned direction R, any luggage kept on that will move to the cell $(i,j+1)$. Similarly, if the cell $(i,j)$ is assigned direction D, any luggage kept on that will move to the cell $(i+1,j)$. If at any moment, the luggage moves out of the grid, it is considered to be lost. \n\nThere is a counter at the cell $(n,m)$ from where all luggage is picked. A conveyor belt is called functional if and only if any luggage reaches the counter regardless of which cell it is placed in initially. More formally, for every cell $(i,j)$, any luggage placed in this cell should eventually end up in the cell $(n,m)$. \n\nThis may not hold initially; you are, however, allowed to change the directions of some cells to make the conveyor belt functional. Please determine the minimum amount of cells you have to change.\n\nPlease note that it is always possible to make any conveyor belt functional by changing the directions of some set of cells.\n\n\n-----Input-----\n\nEach test contains multiple test cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 10$). Description of the test cases follows.\n\nThe first line of each test case contains two integers $n, m$ ($1 \\le n \\le 100$, $1 \\le m \\le 100$) \u00a0\u2014 the number of rows and columns, respectively.\n\nThe following $n$ lines each contain $m$ characters. The $j$-th character in the $i$-th line, $a_{i,j}$ is the initial direction of the cell $(i, j)$. Please note that $a_{n,m}=$ C.\n\n\n-----Output-----\n\nFor each case, output in a new line the minimum number of cells that you have to change to make the conveyor belt functional. \n\n\n-----Example-----\nInput\n4\n3 3\nRRD\nDDR\nRRC\n1 4\nDDDC\n6 9\nRDDDDDRRR\nRRDDRRDDD\nRRDRDRRDR\nDDDDRDDRR\nDRRDRDDDR\nDDRDRRDDC\n1 1\nC\n\nOutput\n1\n3\n9\n0\n\n\n\n-----Note-----\n\nIn the first case, just changing the direction of $(2,3)$ to D is enough.\n\nYou can verify that the resulting belt is functional. For example, if we place any luggage at $(2,2)$, it first moves to $(3,2)$ and then to $(3,3)$. \n\nIn the second case, we have no option but to change the first $3$ cells from D to R making the grid equal to RRRC. \n\n### Response:\n",
        "output": [
            "for s in [*open(0)][2::2]:\n\tprint(s.count('D') - s.count('C'))\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n",
            "for _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\ta = [input() for _ in range(n)]\n\tb = [input() for _ in range(n)]\n\tx = set()\n\tfor i in range(n):\n\t\tfor j in range(m):\n\t\t\tif a[i][j] == 'C':\n\t\t\t\tx.add((i, j))\n\tans = n * m - 1\n\tfor i in range(n):\n\t\tfor j in range(m):\n\t\t\tif a[i][j] == 'C':\n\t\t\t\tcontinue\n\t\t\ty = set()\n\t\t\td = []\n\t\t\tx1 = i\n\t\t\ty1 = j\n\t\t\twhile (x1, y1) not in x:\n\t\t\t\tif (x1, y1) in y:\n\t\t\t\t\tbreak\n\t\t\t\td.append(a[x1][y1])\n\t\t\t\ty.add((x1, y1))\n\t\t\t\tif a[x1][y1] == 'R':\n\t\t\t\t\ty1 += 1\n\t\t\t\telse:\n\t\t\t\t\tx1 += 1\n\t\t\td1 = []\n\t\t\ty = set()\n\t\t\tx1 = i\n\t\t\ty1 = j\n\t\t\twhile (x1, y1) not in x:\n\t\t\t\tif (x1, y1) in y:\n\t\t\t\t\tbreak\n\t\t\t\td1.append(b[x1][y1])\n\t\t\t\ty.add((x1, y1))\n\t\t\t\tif b[x1][y1] == 'R':\n\t\t\t\t\ty1 += 1\n\t\t\t\telse:\n\t\t\t\t\tx1 += 1\n\t\t\tif d == d1:\n\t\t\t\tans = min(ans, len(x) - len(y))\n\tprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(a[0] * a[1] - sum(a[i] for i in range(len(a))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(a[0] * a[1] - sum(a[i] for i in range(len(a))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(a[0] * a[1] - sum(a[i] for i in range(len(a))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(a[0] * a[1] - sum(a[i] for i in range(len(a))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(a[0] * a[1] - sum(a[i] for i in range(len(a))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(a[0] * a[1] - sum(a[i] for i in range(len(a))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(a[0] * a[1] - sum(a[i] for i in range(len(a))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(a[0] * a[1] - sum(a[i] for i in range(len(a))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(a[0] * a[1] - sum(a[i] for i in range(len(a))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(a[0] * a[1] - sum(a[i] for i in range(len(a))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(a[0] * a[1] - sum(a[i] for i in range(len(a))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(a[0] * a[1] - sum(a[i] for i in range(len(a))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint",
            "for s in [*open(0)][2::2]:\n\ta = s.count('R') + s.count('C')\n\tprint(a - s.count('D'))\n \n \nfor s in [*open(0)][2::2]:\n\tprint(sum([s.count('C') - s.count('R') for s in s.split()]))\n \nfor s in [*open(0)][2::2]:\n\tprint(sum([s.count('C') - s.count('R') for s in s.split()]))\n \nfor s in [*open(0)][2::2]:\n\tprint(sum([s.count('C') - s.count('R') for s in s.split()]))\n \nfor s in [*open(0)][2::2]:\n\tprint(sum([s.count('C') - s.count('R') for s in s.split()]))\n \nfor s in [*open(0)][2::2]:\n\tprint(sum([s.count('C') - s.count('R') for s in s.split()]))\n \nfor s in [*open(0)][2::2]:\n\tprint(sum([s.count('C') - s.count('R') for s in s.split()]))\n \nfor s in [*open(0)][2::2]:\n\tprint(sum([s.count('C') - s.count('R') for s in s.split()]))\n \nfor s in [*open(0)][2::2]:\n\tprint(sum([s.count('C') - s.count('R') for s in s.split()]))\n \nfor s in [*open(0)][2::2]:\n\tprint(sum([s.count('C') - s.count('R') for s in s.split()]))\n \nfor s in [*open(0)][2::2]:\n\tprint(sum([s.count('C') - s.count('R') for s in s.split()]))\n \nfor s in [*open(0)][2::2]:\n\tprint(sum([s.count('C') - s.count('R') for s in s.split()]))\n \nfor s in [*open(0)][2::2]:\n\tprint(sum([s.count('C') - s.count('R') for s in s.split()]))\n \nfor s in [*open(0)][2::2]:\n\tprint(sum([s.count('C') - s.count('R') for s in s.split()]))\n \nfor s in [*open(0)][2::2]:\n\tprint(sum([s.count('C') - s.count('R') for s in s.split()]))\n \nfor s in [*open(0)][2::2]:\n\tprint(sum([s.count('C') - s.count('R') for s in s.split()]))\n \nfor s in [*open(0)][2::2]:\n\tprint(sum([s.count('C') - s.count('R') for s in s.split()]))\n \nfor s in [*open(0)][2::2]:\n\tprint(sum([s.count('C') - s.count('R') for s in s.split()]))\n \nfor s in [",
            "for _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\tgrid = [list(input()) for i in range(n)]\n\tans = 0\n\tfor i in range(n - 1, -1, -1):\n\t\tfor j in range(m - 1, -1, -1):\n\t\t\tif grid[i][j] == 'C':\n\t\t\t\tcontinue\n\t\t\tif i < n - 1 and grid[i + 1][j] == 'R':\n\t\t\t\tans += 1\n\t\t\t\tgrid[i][j] = 'R'\n\t\t\telif j < m - 1 and grid[i][j + 1] == 'D':\n\t\t\t\tans += 1\n\t\t\t\tgrid[i][j] = 'D'\n\t\t\telse:\n\t\t\t\tans += 1\n\tprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\ta = [input() for i in range(n)]\n\tb = []\n\tfor i in range(n):\n\t\tfor j in range(m):\n\t\t\tif a[i][j] == 'R':\n\t\t\t\tb.append((i, j))\n\tb.sort(reverse=True)\n\tl = len(b)\n\tans = 0\n\tfor i in range(l):\n\t\t(x, y) = b[i]\n\t\tif a[x][y] == 'R':\n\t\t\tans += 1\n\t\telif a[x][y] == 'D':\n\t\t\tif y + 1 < m and a[x][y + 1] == 'R':\n\t\t\t\tans += 1\n\tprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\ta = [list(input()) for i in range(n)]\n\tfor i in range(n):\n\t\tfor j in range(m):\n\t\t\tif a[i][j] == 'C':\n\t\t\t\ta[i][j] = 'R'\n\tres = 0\n\tfor i in range(n):\n\t\tfor j in range(m):\n\t\t\tif a[i][j] == 'R':\n\t\t\t\tif j + 1 < m and a[i][j + 1] == 'C':\n\t\t\t\t\tres += 1\n\t\t\t\telif i + 1 < n and a[i + 1][j] == 'C':\n\t\t\t\t\tres += 1\n\tprint(res)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\ta = [input() for i in range(n)]\n\ta[0] = a[0].replace('R', 'R', m - 1)\n\ta[1] = a[1].replace('D', 'D', m - 1)\n\tprint(sum([1 if a[i][j] == 'D' else 0 for i in range(n) for j in range(m - 1)]))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\ts = [list(input()) for _ in range(n)]\n\tans = 0\n\tfor i in range(n - 1, -1, -1):\n\t\tfor j in range(m - 1, -1, -1):\n\t\t\tif s[i][j] == 'C':\n\t\t\t\tcontinue\n\t\t\tif i < n - 1 and s[i + 1][j] == 'R':\n\t\t\t\ts[i][j] = 'R'\n\t\t\t\tans += 1\n\t\t\tif j < m - 1 and s[i][j + 1] == 'D':\n\t\t\t\ts[i][j] = 'D'\n\t\t\t\tans += 1\n\tprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\ta = [input() for i in range(n)]\n\tb = []\n\tfor i in range(n):\n\t\tfor j in range(m):\n\t\t\tif a[i][j] == 'R':\n\t\t\t\tb.append((i, j))\n\td = [0] * (n + m - 1)\n\tfor (i, j) in b:\n\t\td[i + j] += 1\n\tans = 0\n\tfor i in range(n + m - 2):\n\t\tif d[i] > d[i + 1]:\n\t\t\tans += d[i] - d[i + 1]\n\t\t\td[i + 1] = d[i]\n\tprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\ta = [list(input()) for i in range(n)]\n\tres = 0\n\tfor i in range(n):\n\t\tres += a[i][m - 1] == 'D'\n\tfor i in range(m):\n\t\tres += a[n - 1][i] == 'R'\n\tprint(res)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\ta = [list(input()) for _ in range(n)]\n\tif a[n - 1][m - 1] != 'C':\n\t\tprint(-1)\n\t\tcontinue\n\tres = 0\n\tfor i in range(n - 1, -1, -1):\n\t\tfor j in range(m - 1, -1, -1):\n\t\t\tif a[i][j] == 'C':\n\t\t\t\tcontinue\n\t\t\tif i < n - 1 and a[i + 1][j] == 'C':\n\t\t\t\ta[i][j] = 'R'\n\t\t\t\tres += 1\n\t\t\telif j < m - 1 and a[i][j + 1] == 'C':\n\t\t\t\ta[i][j] = 'D'\n\t\t\t\tres += 1\n\t\t\telif i < n - 1 and a[i + 1][j] == 'R':\n\t\t\t\ta[i][j] = 'R'\n\t\t\t\tres += 1\n\t\t\telif j < m - 1 and a[i][j + 1] == 'D':\n\t\t\t\ta[i][j] = 'D'\n\t\t\t\tres += 1\n\t\t\telse:\n\t\t\t\tprint(-1)\n\t\t\t\tbreak\n\t\telse:\n\t\t\tcontinue\n\t\tbreak\n\tprint(res)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\tgrid = [list(input()) for _ in range(n)]\n\tgrid[n - 1][m - 1] = 'C'\n\tans = 0\n\tfor i in range(n - 1, -1, -1):\n\t\tfor j in range(m - 1, -1, -1):\n\t\t\tif i == n - 1 and j == m - 1:\n\t\t\t\tcontinue\n\t\t\tif grid[i][j] == 'C':\n\t\t\t\tcontinue\n\t\t\tif grid[i][j] == 'R':\n\t\t\t\tif grid[i][j + 1] != 'C':\n\t\t\t\t\tgrid[i][j + 1] = 'R'\n\t\t\t\t\tans += 1\n\t\t\telif grid[i][j] == 'D':\n\t\t\t\tif grid[i + 1][j] != 'C':\n\t\t\t\t\tgrid[i + 1][j] = 'D'\n\t\t\t\t\tans += 1\n\tprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::2]:\n\tprint(s.count('R') - s.count('C'))\n \n\n",
            "for _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\ta = [list(input()) for i in range(n)]\n\tans = 0\n\tfor i in range(n - 1, -1, -1):\n\t\tfor j in range(m - 1, -1, -1):\n\t\t\tif a[i][j] == 'C':\n\t\t\t\tcontinue\n\t\t\tif i != n - 1 and a[i + 1][j] == 'D':\n\t\t\t\ta[i][j] = 'D'\n\t\t\t\tans += 1\n\t\t\tif j != m - 1 and a[i][j + 1] == 'R':\n\t\t\t\ta[i][j] = 'R'\n\t\t\t\tans += 1\n\tprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\ta = s.strip()\n\tprint(a.count('D') * a.count('R') + a.count('C'))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\tprint(s.count('R') + s.count('D') - s.count('C') - 1)\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n ",
            "for _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\ta = [input() for i in range(n)]\n\tans = m * n\n\tfor i in range(n):\n\t\tfor j in range(m):\n\t\t\tif a[i][j] == 'C':\n\t\t\t\tans = min(ans, i + j)\n\tprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::2]:\n\ta = [*map(set, s.split())]\n\tprint(sum((len(a[i] ^ {a[i + 1]}) for i in range(len(a) - 1))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(set, s.split())]\n\tprint(sum((len(a[i] ^ {a[i + 1]}) for i in range(len(a) - 1))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(set, s.split())]\n\tprint(sum((len(a[i] ^ {a[i + 1]}) for i in range(len(a) - 1))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(set, s.split())]\n\tprint(sum((len(a[i] ^ {a[i + 1]}) for i in range(len(a) - 1))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(set, s.split())]\n\tprint(sum((len(a[i] ^ {a[i + 1]}) for i in range(len(a) - 1))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(set, s.split())]\n\tprint(sum((len(a[i] ^ {a[i + 1]}) for i in range(len(a) - 1))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(set, s.split())]\n\tprint(sum((len(a[i] ^ {a[i + 1]}) for i in range(len(a) - 1))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(set, s.split())]\n\tprint(sum((len(a[i] ^ {a[i + 1]}) for i in range(len(a) - 1))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(set, s.split())]\n\tprint(sum((len(a[i] ^ {a[i + 1]}) for i in range(len(a) - 1))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(set, s.split())]\n\tprint(sum((len(a[i] ^ {a[i + 1]}) for i in range(len(a) - 1))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(set, s.split())]\n\tprint(sum((len(a[i] ^ {a[i + 1]}) for i in range(len(a) - 1))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(set, s.split())]\n\tprint(sum((len(a[i]",
            "for _ in range(int(input())):\n\t(n, m) = map(int, input().split())\n\ta = [input() for _ in range(n)]\n\ta[n - 1] = 'C' + a[n - 1][1:]\n\tprint(sum((x[i] != x[i + 1] for i in range(m - 1) for x in a)))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n"
        ]
    },
    {
        "task_id": 27,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: We call two numbers $x$ and $y$ similar if they have the same parity (the same remainder when divided by $2$), or if $|x-y|=1$. For example, in each of the pairs $(2, 6)$, $(4, 3)$, $(11, 7)$, the numbers are similar to each other, and in the pairs $(1, 4)$, $(3, 12)$, they are not.\n\nYou are given an array $a$ of $n$ ($n$ is even) positive integers. Check if there is such a partition of the array into pairs that each element of the array belongs to exactly one pair and the numbers in each pair are similar to each other.\n\nFor example, for the array $a = [11, 14, 16, 12]$, there is a partition into pairs $(11, 12)$ and $(14, 16)$. The numbers in the first pair are similar because they differ by one, and in the second pair because they are both even.\n\n\n-----Input-----\n\nThe first line contains a single integer $t$ ($1 \\le t \\le 1000$)\u00a0\u2014 the number of test cases. Then $t$ test cases follow.\n\nEach test case consists of two lines.\n\nThe first line contains an even positive integer $n$ ($2 \\le n \\le 50$)\u00a0\u2014 length of array $a$.\n\nThe second line contains $n$ positive integers $a_1, a_2, \\dots, a_n$ ($1 \\le a_i \\le 100$).\n\n\n-----Output-----\n\nFor each test case print:  YES if the such a partition exists,  NO otherwise. \n\nThe letters in the words YES and NO can be displayed in any case.\n\n\n-----Example-----\nInput\n7\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n\nOutput\nYES\nNO\nYES\nYES\nYES\nYES\nNO\n\n\n\n-----Note-----\n\nThe first test case was explained in the statement.\n\nIn the second test case, the two given numbers are not similar.\n\nIn the third test case, any partition is suitable. \n\n### Response:\n",
        "output": [
            "for s in [*open(0)][2::2]:\n\tprint('YNEOS'[any((abs(x - y) > 1) for (x, y) in zip(sorted(map(int, s.split())), s.split()))])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\tprint('YNEOS'[any((abs(x - y) != 1 and x % 2 != y % 2 for x in map(int, s.split()) for y in map(int, s.split())))][::-1])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint('YNEOS'[sum(i % 2 != j % 2 for (i, j) in zip(a, a[1::2])) > 1::2])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[any((a[i] - a[i - 1]) % 2 for i in range(1, len(a)))])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tif n == 2:\n\t\tprint('YES')\n\t\tcontinue\n\tprint('YES' if sum(a) % 2 == 0 else 'NO')\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tif n == 2:\n\t\tprint('YES')\n\t\tcontinue\n\tprint('YES' if sum(a) % 2 == 0 else 'NO')\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tif n == 2:\n\t\tprint('YES')\n\t\tcontinue\n\tprint('YES' if sum(a) % 2 == 0 else 'NO')\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tif n == 2:\n\t\tprint('YES')\n\t\tcontinue\n\tprint('YES' if sum(a) % 2 == 0 else 'NO')\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tif n == 2:\n\t\tprint('YES')\n\t\tcontinue\n\tprint('YES' if sum(a) % 2 == 0 else 'NO')\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tif n == 2:\n\t\tprint('YES')\n\t\tcontinue\n\tprint('YES' if sum(a) % 2 == 0 else 'NO')\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tif n == 2:\n\t\tprint('YES')\n\t\tcontinue\n\tprint('YES' if sum(a) % 2 == 0 else 'NO')\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tif n == 2:\n\t\tprint('YES')\n\t\tcontinue\n\tprint('YES' if sum(a) % 2 == 0 else 'NO')\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tif n == 2:\n\t\tprint('YES')\n\t\tcontinue\n\tprint('YES' if sum(a) % 2 == 0 else 'NO')\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tif n == 2:\n\t\tprint('YES')\n\t\tcontinue\n\tprint('YES' if sum(a) % 2 == 0 else 'NO')\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tif n == 2:\n\t",
            "for s in [*open(0)][2::2]:\n\tprint('YNEOS'[any((abs(int(x) - int(y)) > 1) * (int(x) % 2 != int(y) % 2) for (x, y) in zip(s.split(), s.split()[1::2]))])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\ti = 0\n\twhile i < n:\n\t\tif i + 1 < n and (a[i] % 2 == a[i + 1] % 2 or a[i] - a[i + 1] == 1):\n\t\t\ti += 2\n\t\telse:\n\t\t\tprint('NO')\n\t\t\tbreak\n\telse:\n\t\tprint('YES')\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = sorted(map(int, input().split()))\n\tprint('YES' if all((abs(x - y) == 1 for (x, y) in zip(a, a[1::2]))) else 'NO')\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint('YNEOS'[any((a.count(i) % 2, a.count(i - 1) % 2)) for i in a])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "R = lambda : map(int, input().split())\n(t,) = R()\nfor _ in [0] * t:\n\t(n,) = R()\n\ta = sorted(R())\n\tprint('YNEOS'[any((x & 1 ^ y & 1 or abs(x - y) > 1 for (x, y) in zip(a[::2], a[1::2])))])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tprint('YNEOS'[any((abs(x - y) > 1 for (x, y) in zip(a[::2], a[1::2])))])\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tprint('YNEOS'[any((abs(x - y) > 1 for (x, y) in zip(a[::2], a[1::2])))])\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tprint('YNEOS'[any((abs(x - y) > 1 for (x, y) in zip(a[::2], a[1::2])))])\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tprint('YNEOS'[any((abs(x - y) > 1 for (x, y) in zip(a[::2], a[1::2])))])\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tprint('YNEOS'[any((abs(x - y) > 1 for (x, y) in zip(a[::2], a[1::2])))])\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tprint('YNEOS'[any((abs(x - y) > 1 for (x, y) in zip(a[::2], a[1::2])))])\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tprint('YNEOS'[any((abs(x - y) > 1 for (x, y) in zip(a[::2], a[1::2])))])\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tprint('YNEOS'[any((abs(x - y) > 1 for (x, y) in zip(a[::2], a[1::2])))])\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tprint('YNEOS'[any((abs(x - y) > 1 for (x, y) in zip(a[::2], a[1::2])))])\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tprint('YNE",
            "for s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[sum(abs(x - y) > 1 for (x, y) in zip(a, a[1::2]))::2])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "I = input\nfor _ in [0] * int(I()):\n\tn = int(I())\n\ta = sorted(map(int, I().split()))\n\tprint('YNEOS'[any((a[i] - a[i - 1]) % 2 and (a[i + 1] - a[i]) % 2 for i in range(1, n, 2))])\n \n \nfor _ in [0] * int(I()):\n\tn = int(I())\n\ta = sorted(map(int, I().split()))\n\tprint('YNEOS'[any((a[i] - a[i - 1]) % 2 and (a[i + 1] - a[i]) % 2 for i in range(1, n, 2))])\n \n \nfor _ in [0] * int(I()):\n\tn = int(I())\n\ta = sorted(map(int, I().split()))\n\tprint('YNEOS'[any((a[i] - a[i - 1]) % 2 and (a[i + 1] - a[i]) % 2 for i in range(1, n, 2))])\n \n \nfor _ in [0] * int(I()):\n\tn = int(I())\n\ta = sorted(map(int, I().split()))\n\tprint('YNEOS'[any((a[i] - a[i - 1]) % 2 and (a[i + 1] - a[i]) % 2 for i in range(1, n, 2))])\n \n \nfor _ in [0] * int(I()):\n\tn = int(I())\n\ta = sorted(map(int, I().split()))\n\tprint('YNEOS'[any((a[i] - a[i - 1]) % 2 and (a[i + 1] - a[i]) % 2 for i in range(1, n, 2))])\n \n \nfor _ in [0] * int(I()):\n\tn = int(I())\n\ta = sorted(map(int, I().split()))\n\tprint('YNEOS'[any((a[i] - a[i - 1]) % 2 and (a[i + 1] - a[i]) % 2 for i in range(1, n, 2))])\n \n \nfor _ in [0] * int(I()):\n\tn = int(I())\n\ta = sorted(map(int, I().split()))\n\tprint('YNEOS'[any((a[i] - a[i - 1]) % 2 and (a[i + 1] - a[i]) % 2 for i in range(1, n, 2))])\n \n \nfor _ in [0] * int(I()):\n\tn = int(I())\n\ta = sorted(map(int, I().split()))\n\tprint('YNEOS'[any((a[i] - a[i - 1]) % 2 and (a[i + 1] - a[i]) % 2 for i in range(1, n, 2))])\n \n \nfor _ in [0] * int(I()):\n\tn = int(I())\n\ta = sorted(map(int, I().split()))\n\tprint('YNEOS'[any",
            "for s in [*open(0)][2::2]:\n\tprint('YNEOS'[any((x & 1) ^ (y & 1) or abs(x - y) > 1 for (x, y) in zip(*[map(int, s.split())] * 2))::2])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\tprint('YNEOS'[any((x + y) % 2 for x in map(int, s.split()) if (y := x + 1) in map(int, s.split()))])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[sum(x % 2 != y % 2 for (x, y) in zip(a, a[1::2]))::2])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::2]:\n\tprint(('YNEOS'[any((abs(int(i) - int(j)) > 1 and int(i) % 2 == int(j) % 2 for i in s.split() for j in s.split()))])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\tprint('YNEOS'[abs(sum(map(int, s.split())) % 2)::2])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\ta = sorted((*map(int, s.split()),))\n\tprint('YNEOS'[any(a[i] % 2 ^ a[i + 1] % 2 for i in range(0, len(a) - 1, 2))])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tans = 'YES'\n\tfor i in range(n // 2):\n\t\tif a[i] % 2 != a[i + n // 2] % 2 or abs(a[i] - a[i + n // 2]) > 1:\n\t\t\tans = 'NO'\n\t\t\tbreak\n\tprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n "
        ]
    },
    {
        "task_id": 28,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: A permutation of length $n$ is an array consisting of $n$ distinct integers from $1$ to $n$ in arbitrary order. For example, $[2,3,1,5,4]$ is a permutation, but $[1,2,2]$ is not a permutation ($2$ appears twice in the array), and $[1,3,4]$ is also not a permutation ($n=3$ but there is $4$ in the array). There are $n! = n \\cdot (n-1) \\cdot (n - 2) \\cdot \\ldots \\cdot 1$ different permutations of length $n$.\n\nGiven a permutation $p$ of $n$ numbers, we create an array $a$ consisting of $2n$ numbers, which is equal to $p$ concatenated with its reverse. We then define the beauty of $p$ as the number of inversions in $a$.\n\nThe number of inversions in the array $a$ is the number of pairs of indices $i$, $j$ such that $i < j$ and $a_i > a_j$.\n\nFor example, for permutation $p = [1, 2]$, $a$ would be $[1, 2, 2, 1]$. The inversions in $a$ are $(2, 4)$ and $(3, 4)$ (assuming 1-based indexing). Hence, the beauty of $p$ is $2$.\n\nYour task is to find the sum of beauties of all $n!$ permutations of size $n$. Print the remainder we get when dividing this value by $1000000\\,007$ ($10^9 + 7$).\n\n\n-----Input-----\n\nEach test contains multiple test cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 10^5$). The description of the test cases follows.\n\nEach test case has only one line \u2014 the integer $n$ ($1 \\leq n \\leq 10^5$).\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $10^5$.\n\n\n-----Output-----\n\nFor each test case, print one integer \u2014 the sum of beauties of all permutations of size $n$ modulo $1000000\\,007$ ($10^9 + 7$).\n\n\n-----Examples-----\n\nInput\n3\n1\n2\n100\nOutput\n0\n4\n389456655\n\n\n-----Note-----\n\nFor the first test case of the example, $p = [1]$ is the only permutation. $a = [1, 1]$ has $0$ inversions.\n\nFor the second test case of the example, the permutations are $[1, 2]$ and $[2, 1]$. Their respective $a$ arrays are $[1, 2, 2, 1]$ and $[2, 1, 1, 2]$, both of which have $2$ inversions. \n\n### Response:\n",
        "output": [
            "from math import factorial\nfor _ in [0] * int(input()):\n\tn = int(input())\n\tprint(sum((factorial(n - i) * factorial(i) * (n - i) for i in range(n))) % (10 ** 9 + 7))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in [0] * int(input()):\n\tn = int(input())\n\tmod = 10 ** 9 + 7\n\tprint(sum(((i * (n - i) * (n - i + 1)) % mod for i in range(n))) * 2 % mod)\n \n \nfor _ in [0] * int(input()):\n\tn = int(input())\n\tmod = 10 ** 9 + 7\n\tprint(sum(((i * (n - i) * (n - i + 1)) % mod for i in range(n))) * 2 % mod)\n \n \nfor _ in [0] * int(input()):\n\tn = int(input())\n\tmod = 10 ** 9 + 7\n\tprint(sum(((i * (n - i) * (n - i + 1)) % mod for i in range(n))) * 2 % mod)\n \n \nfor _ in [0] * int(input()):\n\tn = int(input())\n\tmod = 10 ** 9 + 7\n\tprint(sum(((i * (n - i) * (n - i + 1)) % mod for i in range(n))) * 2 % mod)\n \n \nfor _ in [0] * int(input()):\n\tn = int(input())\n\tmod = 10 ** 9 + 7\n\tprint(sum(((i * (n - i) * (n - i + 1)) % mod for i in range(n))) * 2 % mod)\n \n \nfor _ in [0] * int(input()):\n\tn = int(input())\n\tmod = 10 ** 9 + 7\n\tprint(sum(((i * (n - i) * (n - i + 1)) % mod for i in range(n))) * 2 % mod)\n \n \nfor _ in [0] * int(input()):\n\tn = int(input())\n\tmod = 10 ** 9 + 7\n\tprint(sum(((i * (n - i) * (n - i + 1)) % mod for i in range(n))) * 2 % mod)\n \n \nfor _ in [0] * int(input()):\n\tn = int(input())\n\tmod = 10 ** 9 + 7\n\tprint(sum(((i * (n - i) * (n - i + 1)) % mod for i in range(n))) * 2 % mod)\n \n \nfor _ in [0] * int(input()):\n\tn = int(input())\n\tmod = 10 ** 9 + 7\n\tprint(sum(((i * (n - i) * (n - i + 1)) % mod for i in range(n))) * 2 % mod)\n \n \nfor _ in [0] * int(input()):\n\tn = int(input())\n\tmod = 10 ** 9 + 7\n\tprint(sum(((i * (n - i) * (n - i + 1)) % mod for i in range(n))) * 2 % mod)\n \n \nfor _ in [0] * int(input()):\n\tn = int(input())\n\tmod = 10 ** 9 + 7\n\tprint(sum(((i * (n - i) * (n - i + 1)) % mod for i in range(n))) * 2 % mod)\n ",
            "for s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(sum((n * (n - i - 1) * (n - i) * (n - i - 1) // 4 for i in range(n))) % 1000000007)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "import math\nimport sys\ninput = sys.stdin.readline\nM = 10 ** 9 + 7\n\ndef powmod(a, b):\n\tr = 1\n\twhile b:\n\t\tif b % 2:\n\t\t\tr = r * a % M\n\t\ta = a * a % M\n\t\tb //= 2\n\treturn r\n\ndef fact(n):\n\tr = 1\n\twhile n:\n\t\tr = r * n % M\n\t\tn -= 1\n\treturn r\nfor _ in range(int(input())):\n\tn = int(input())\n\tprint(fact(n) * powmod(fact(n), M - 2) % M)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "t = int(input())\nfor i in range(t):\n\tn = int(input())\n\tmod = 1000000007\n\tans = 0\n\tfor j in range(n):\n\t\tans += (j + 1) * (n - j) % mod\n\tprint(ans % mod)\n \n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n",
            "for _ in range(int(input())):\n\tn = int(input())\n\tm = 1000000007\n\tf = [1]\n\tfor i in range(1, n + 1):\n\t\tf.append(f[-1] * i % m)\n\tprint(sum(((f[i] * f[n - i] * f[n - i] % m * f[i] % m) % m for i in range(1, n + 1))) % m)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "import math\nimport sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n\tn = int(input())\n\tmod = 1000000007\n\tprint((pow(n, n - 1, mod) * (n + 1) // 2) % mod)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\tn = int(input())\n\tmod = 1000000007\n\tf = 1\n\tfor i in range(1, n + 1):\n\t\tf = f * i % mod\n\tprint(f * (n - 1) % mod)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in [0] * int(input()):\n\tn = int(input())\n\ta = [0] * n\n\tb = [0] * n\n\tc = [0] * n\n\tfor i in range(n):\n\t\ta[i] = i + 1\n\t\tb[i] = n - i\n\t\tc[i] = n - i + 1\n\tans = 0\n\tfor i in range(n):\n\t\tans += a[i] * c[i] + b[i] * c[i]\n\tprint(ans % 1000000007)\n \n \nfor _ in [0] * int(input()):\n\tn = int(input())\n\ta = [0] * n\n\tb = [0] * n\n\tc = [0] * n\n\tfor i in range(n):\n\t\ta[i] = i + 1\n\t\tb[i] = n - i\n\t\tc[i] = n - i + 1\n\tans = 0\n\tfor i in range(n):\n\t\tans += a[i] * c[i] + b[i] * c[i]\n\tprint(ans % 1000000007)\n \n \nfor _ in [0] * int(input()):\n\tn = int(input())\n\ta = [0] * n\n\tb = [0] * n\n\tc = [0] * n\n\tfor i in range(n):\n\t\ta[i] = i + 1\n\t\tb[i] = n - i\n\t\tc[i] = n - i + 1\n\tans = 0\n\tfor i in range(n):\n\t\tans += a[i] * c[i] + b[i] * c[i]\n\tprint(ans % 1000000007)\n \n \nfor _ in [0] * int(input()):\n\tn = int(input())\n\ta = [0] * n\n\tb = [0] * n\n\tc = [0] * n\n\tfor i in range(n):\n\t\ta[i] = i + 1\n\t\tb[i] = n - i\n\t\tc[i] = n - i + 1\n\tans = 0\n\tfor i in range(n):\n\t\tans += a[i] * c[i] + b[i] * c[i]\n\tprint(ans % 1000000007)\n \n \nfor _ in [0] * int(input()):\n\tn = int(input())\n\ta = [0] * n\n\tb = [0] * n\n\tc = [0] * n\n\tfor i in range(n):\n\t\ta[i] = i + 1\n\t\tb[i] = n - i\n\t\tc[i] = n - i + 1\n\tans = 0\n\tfor i in range(n):\n\t\tans += a[i] * c[i] + b[i] * c[i]\n\tprint(ans % 1000000007)\n \n \nfor _ in [0] * int(input()):\n\tn = int(input())\n\ta = [0] * n\n\tb = [0] * n\n\tc = [0] * n\n\tfor i in range(n):\n\t\ta[i",
            "def fact(n):\n\tans = 1\n\tfor i in range(2, n + 1):\n\t\tans *= i\n\t\tans %= 1000000007\n\treturn ans\nfor _ in [0] * int(input()):\n\tn = int(input())\n\tprint((fact(n) * n * (n - 1) // 2) % 1000000007)\n \n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n \n \n \n \n \n \n\n \n \n \n\n \n\n \n \n \n \n \n \n \n \n \n\n \n \n\n \n\n \n\n \n\n \n\n \n \n \n \n \n\n \n \n \n\n \n\n \n \n \n \n \n \n \n \n\n \n \n \n\n \n\n \n \n \n \n \n \n \n\n \n \n \n\n \n\n \n \n \n \n \n \n \n \n\n \n \n \n\n \n\n \n \n \n \n \n \n\n \n \n \n\n \n\n \n \n \n \n \n \n \n \n\n \n \n \n\n \n\n \n \n \n \n \n \n \n \n\n \n \n \n\n \n\n \n \n \n \n \n \n \n \n\n \n \n \n\n \n\n \n \n \n \n \n \n \n \n\n \n \n \n\n \n\n \n \n \n \n \n \n \n \n\n \n \n \n\n \n\n \n \n \n \n \n \n \n \n\n \n \n \n\n \n\n \n \n \n \n \n \n \n \n\n \n \n \n\n \n\n \n \n \n \n \n \n \n \n\n \n \n \n\n \n\n \n \n \n \n \n \n \n \n\n \n \n \n\n \n\n \n \n \n \n \n \n \n \n\n \n \n \n\n \n\n \n \n \n \n \n \n \n \n\n \n \n \n\n \n\n \n \n \n \n \n \n \n \n\n \n \n \n\n \n\n \n \n \n \n \n \n \n \n\n \n \n \n\n \n\n \n \n \n \n \n \n \n \n\n \n \n \n\n \n\n \n \n \n \n \n \n \n \n\n \n \n \n\n \n\n \n \n \n \n \n \n \n \n\n \n \n \n\n \n\n \n \n \n \n \n \n \n \n\n \n \n \n\n \n\n \n \n \n \n \n \n \n \n\n \n \n \n\n \n\n \n",
            "import math\nmod = 1000000007\nfor _ in range(int(input())):\n\tn = int(input())\n\tk = n\n\tres = 0\n\tfor i in range(1, n):\n\t\tk *= i\n\t\tk %= mod\n\tres += k * k\n\tres %= mod\n\tprint(res)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\tn = int(input())\n\tans = 0\n\tmod = 1000000007\n\tk = 1\n\tfor i in range(1, n + 1):\n\t\tk = k * i % mod\n\tans = (ans + k * k) % mod\n\tprint(ans)\n \n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n",
            "import sys\nfrom math import factorial as f\n\ndef main():\n\tsys.stdin.readline()\n\tfor _ in range(int(sys.stdin.readline())):\n\t\tn = int(sys.stdin.readline())\n\t\tprint(sum((f(n) * i * (i + 1)) // 2 for i in range(n)) % (10 ** 9 + 7))\nmain()\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n ",
            "for i in [*open(0)][1:]:\n\tprint(pow(int(i), int(i) * 2, 10 ** 9 + 7) - 1)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\tn = int(input())\n\tMOD = 10 ** 9 + 7\n\tprint(sum((n * (i % MOD) % MOD for i in range(n, 0, -1))) * n % MOD)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\tMOD = 10 ** 9 + 7\n\tprint(sum((n * (i % MOD) % MOD for i in range(n, 0, -1))) * n % MOD)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\tMOD = 10 ** 9 + 7\n\tprint(sum((n * (i % MOD) % MOD for i in range(n, 0, -1))) * n % MOD)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\tMOD = 10 ** 9 + 7\n\tprint(sum((n * (i % MOD) % MOD for i in range(n, 0, -1))) * n % MOD)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\tMOD = 10 ** 9 + 7\n\tprint(sum((n * (i % MOD) % MOD for i in range(n, 0, -1))) * n % MOD)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\tMOD = 10 ** 9 + 7\n\tprint(sum((n * (i % MOD) % MOD for i in range(n, 0, -1))) * n % MOD)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\tMOD = 10 ** 9 + 7\n\tprint(sum((n * (i % MOD) % MOD for i in range(n, 0, -1))) * n % MOD)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\tMOD = 10 ** 9 + 7\n\tprint(sum((n * (i % MOD) % MOD for i in range(n, 0, -1))) * n % MOD)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\tMOD = 10 ** 9 + 7\n\tprint(sum((n * (i % MOD) % MOD for i in range(n, 0, -1))) * n % MOD)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\tMOD = 10 ** 9 + 7\n\tprint(sum((n * (i % MOD) % MOD for i in range(n, 0, -1))) * n % MOD)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\tMOD = 10 ** 9 + 7\n\tprint(sum((n * (i % MOD) % MOD for i in range(n, 0, -1))) * n % MOD)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\tMOD = 10 ** 9 + 7\n",
            "import sys\nfrom collections import Counter\ninput = sys.stdin.readline\nMOD = 10 ** 9 + 7\nfor _ in range(int(input())):\n\tn = int(input())\n\tfact = [1] * (n + 1)\n\tfor i in range(1, n + 1):\n\t\tfact[i] = fact[i - 1] * i % MOD\n\tinv = [1] * (n + 1)\n\tinv[n] = pow(fact[n], MOD - 2, MOD)\n\tfor i in range(n - 1, -1, -1):\n\t\tinv[i] = inv[i + 1] * (i + 1) % MOD\n\tans = 0\n\tfor i in range(n):\n\t\tans += fact[n] * fact[i] % MOD * fact[n - i - 1] % MOD * inv[n - i] % MOD\n\tans %= MOD\n\tprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\tn = int(input())\n\tans = 0\n\tfor i in range(1, n + 1):\n\t\tans += i * (n - i + 1) * (n - i + 1)\n\tans %= 1000000007\n\tprint(ans)\n \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "import math\nfor _ in range(int(input())):\n\tn = int(input())\n\tmod = 1000000007\n\ta = [0] * (2 * n)\n\ta[0] = 1\n\tfor i in range(1, n):\n\t\ta[i] = a[i - 1] * 2 % mod\n\ta[n] = a[n - 1]\n\tans = 0\n\tfor i in range(n):\n\t\tans = (ans + a[i] * a[n - i - 1]) % mod\n\tprint(ans)\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\tmod = 1000000007\n\ta = [0] * (2 * n)\n\ta[0] = 1\n\tfor i in range(1, n):\n\t\ta[i] = a[i - 1] * 2 % mod\n\ta[n] = a[n - 1]\n\tans = 0\n\tfor i in range(n):\n\t\tans = (ans + a[i] * a[n - i - 1]) % mod\n\tprint(ans)\n \nfor _ in range(int(input())):\n\tn = int(input())\n\tmod = 1000000007\n\ta = [0] * (2 * n)\n\ta[0] = 1\n\tfor i in range(1, n):\n\t\ta[i] = a[i - 1] * 2 % mod\n\ta[n] = a[n - 1]\n\tans = 0\n\tfor i in range(n):\n\t\tans = (ans + a[i] * a[n - i - 1]) % mod\n\tprint(ans)\n \nfor _ in range(int(input())):\n\tn = int(input())\n\tmod = 1000000007\n\ta = [0] * (2 * n)\n\ta[0] = 1\n\tfor i in range(1, n):\n\t\ta[i] = a[i - 1] * 2 % mod\n\ta[n] = a[n - 1]\n\tans = 0\n\tfor i in range(n):\n\t\tans = (ans + a[i] * a[n - i - 1]) % mod\n\tprint(ans)\n \nfor _ in range(int(input())):\n\tn = int(input())\n\tmod = 1000000007\n\ta = [0] * (2 * n)\n\ta[0] = 1\n\tfor i in range(1, n):\n\t\ta[i] = a[i - 1] * 2 % mod\n\ta[n] = a[n - 1]\n\tans = 0\n\tfor i in range(n):\n\t\tans = (ans + a[i] * a[n - i - 1]) % mod\n\tprint(ans)\n \nfor _ in range(int(input())):\n\tn = int(input())\n\tmod = 1000000007\n\ta = [0] * (2 * n)\n\ta[0] = 1\n\tfor i in range(1, n):\n\t\ta[i] = a[i - 1] * ",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = [0] * (n << 1)\n\tfor i in range(n):\n\t\ta[i] = i + 1\n\t\ta[i + n] = n - i\n\tans = 0\n\tfor i in range(1, n):\n\t\tans += a[i] * i * (n - i)\n\tprint(ans % 1000000007)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\tn = int(input())\n\tprint(sum((i * (n - i) for i in range(n))) % 1000000007)\n \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n "
        ]
    },
    {
        "task_id": 29,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: Young wilderness explorers set off to their first expedition led by senior explorer Russell. Explorers went into a forest, set up a camp and decided to split into groups to explore as much interesting locations as possible. Russell was trying to form groups, but ran into some difficulties...\n\nMost of the young explorers are inexperienced, and sending them alone would be a mistake. Even Russell himself became senior explorer not long ago. Each of young explorers has a positive integer parameter $e_i$\u00a0\u2014 his inexperience. Russell decided that an explorer with inexperience $e$ can only join the group of $e$ or more people.\n\nNow Russell needs to figure out how many groups he can organize. It's not necessary to include every explorer in one of the groups: some can stay in the camp. Russell is worried about this expedition, so he asked you to help him.\n\n\n-----Input-----\n\nThe first line contains the number of independent test cases $T$($1 \\leq T \\leq 2 \\cdot 10^5$). Next $2T$ lines contain description of test cases.\n\nThe first line of description of each test case contains the number of young explorers $N$ ($1 \\leq N \\leq 2 \\cdot 10^5$).\n\nThe second line contains $N$ integers $e_1, e_2, \\ldots, e_N$ ($1 \\leq e_i \\leq N$), where $e_i$ is the inexperience of the $i$-th explorer.\n\nIt's guaranteed that sum of all $N$ doesn't exceed $3 \\cdot 10^5$.\n\n\n-----Output-----\n\nPrint $T$ numbers, each number on a separate line.\n\nIn $i$-th line print the maximum number of groups Russell can form in $i$-th test case.\n\n\n-----Example-----\nInput\n2\n3\n1 1 1\n5\n2 3 1 2 2\n\nOutput\n3\n2\n\n\n\n-----Note-----\n\nIn the first example we can organize three groups. There will be only one explorer in each group. It's correct because inexperience of each explorer equals to $1$, so it's not less than the size of his group.\n\nIn the second example we can organize two groups. Explorers with inexperience $1$, $2$ and $3$ will form the first group, and the other two explorers with inexperience equal to $2$ will form the second group.\n\nThis solution is not unique. For example, we can form the first group using the three explorers with inexperience equal to $2$, and the second group using only one explorer with inexperience equal to $1$. In this case the young explorer with inexperience equal to $3$ will not be included in any group. \n\n### Response:\n",
        "output": [
            "for s in [*open(0)][2::2]:\n\ta = [0] * (int(s.split()[0]) + 1)\n\tfor x in s.split()[1:]:\n\t\ta[int(x)] += 1\n\tprint(sum((max(a[i], a[i - 1]) for i in range(1, len(a)))))\n \n \ninput = __builtins__.input\nfor _ in range(int(input())):\n\tn = int(input())\n\ta = [0] * (n + 1)\n\tfor x in map(int, input().split()):\n\t\ta[x] += 1\n\tprint(sum((max(a[i], a[i - 1]) for i in range(1, n + 1))))\n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = [0] * (n + 1)\n\tfor x in map(int, input().split()):\n\t\ta[x] += 1\n\tprint(sum((max(a[i], a[i - 1]) for i in range(1, n + 1))))\n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = [0] * (n + 1)\n\tfor x in map(int, input().split()):\n\t\ta[x] += 1\n\tprint(sum((max(a[i], a[i - 1]) for i in range(1, n + 1))))\n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = [0] * (n + 1)\n\tfor x in map(int, input().split()):\n\t\ta[x] += 1\n\tprint(sum((max(a[i], a[i - 1]) for i in range(1, n + 1))))\n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = [0] * (n + 1)\n\tfor x in map(int, input().split()):\n\t\ta[x] += 1\n\tprint(sum((max(a[i], a[i - 1]) for i in range(1, n + 1))))\n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = [0] * (n + 1)\n\tfor x in map(int, input().split()):\n\t\ta[x] += 1\n\tprint(sum((max(a[i], a[i - 1]) for i in range(1, n + 1))))\n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = [0] * (n + 1)\n\tfor x in map(int, input().split()):\n\t\ta[x] += 1\n\tprint(sum((max(a[i], a[i - 1]) for i in range(1, n + 1))))\n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = [0] * (n + 1)\n\tfor x in map(int, input().split()):\n\t\ta[x] += 1\n\tprint(sum((max(a[i], a[i - 1]) for i in range(1, n + 1))))\n \nfor",
            "for s in [*open(0)][2::2]:\n\td = {}\n\tfor i in map(int, s.split()):\n\t\tif i in d:\n\t\t\td[i] += 1\n\t\telse:\n\t\t\td[i] = 1\n\tprint(max(d.values()))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum((a.count(i) // (i + 1)) for i in a))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(i + 1 for i in range(max(a)) if a.count(i) > i))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum((a.count(i) // (i + 1)) for i in a))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(i + 1 for i in range(max(a)) if a.count(i) > i))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum((a.count(i) // (i + 1)) for i in a))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(i + 1 for i in range(max(a)) if a.count(i) > i))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum((a.count(i) // (i + 1)) for i in a))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(i + 1 for i in range(max(a)) if a.count(i) > i))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum((a.count(i) // (i + 1)) for i in a))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(i + 1 for i in range(max(a)) if a.count(i) > i))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum((a.count(i) // (i + 1)) for i in a))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(i + 1 for i in range(max(a)) if a.count(i) > i))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum((a.count(i) // (i + 1)) for i in a))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]",
            "for s in [*open(0)][2::2]:\n\ta = [0] * int(s)\n\tfor x in s.split():\n\t\ta[int(x) - 1] += 1\n\tprint(sum(a) - max(a))\n \n",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tans = 0\n\tcur = 0\n\tfor x in a:\n\t\tif cur >= x:\n\t\t\tcur += 1\n\t\telse:\n\t\t\tans += 1\n\t\t\tcur = x\n\tprint(ans)\n \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tans = 1\n\twhile a:\n\t\twhile a and a[-1] >= len(a):\n\t\t\ta.pop()\n\t\tif a:\n\t\t\tans += 1\n\t\t\ta.pop()\n\tprint(ans)\n \n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n ",
            "for _ in range(int(input())):\n\tn = int(input())\n\te = list(map(int, input().split()))\n\te.sort()\n\ti = 0\n\tj = n - 1\n\tr = 0\n\twhile i <= j:\n\t\tr += 1\n\t\tif e[i] >= e[j]:\n\t\t\ti += 1\n\t\tj -= 1\n\tprint(r)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = sorted(map(int, input().split()))\n\tans = 0\n\tfor i in range(n):\n\t\tans += max(0, a[i] - i)\n\tprint(ans)\n \n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n ",
            "for s in [*open(0)][2::2]:\n\tr = (0, 0)\n\tfor i in sorted(map(int, s.split())):\n\t\tr = (r[0] + 1, r[1] + i - 1)\n\tprint(r[1])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "R = lambda : map(int, input().split())\n(t,) = R()\nfor _ in range(t):\n\t(n,) = R()\n\ta = [0] * (n + 1)\n\tfor i in R():\n\t\ta[i] += 1\n\tprint(n - max(a))\n \n",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort(reverse=True)\n\tprint(a[0])\n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort(reverse=True)\n\tprint(a[0])\n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort(reverse=True)\n\tprint(a[0])\n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort(reverse=True)\n\tprint(a[0])\n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort(reverse=True)\n\tprint(a[0])\n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort(reverse=True)\n\tprint(a[0])\n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort(reverse=True)\n\tprint(a[0])\n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort(reverse=True)\n\tprint(a[0])\n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort(reverse=True)\n\tprint(a[0])\n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort(reverse=True)\n\tprint(a[0])\n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort(reverse=True)\n\tprint(a[0])\n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort(reverse=True)\n\tprint(a[0])\n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort(reverse=True)\n\tprint(a[0])\n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort(reverse=True)\n\tprint(a[0])\n \nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort(reverse=True)\n",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\ti = n - 1\n\twhile i >= 0 and a[i] >= n - i:\n\t\ti -= 1\n\tprint(i + 1)\n \n \n\n \n\n \n\n \n\n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "I = input\nfor _ in [0] * int(I()):\n\tn = int(I())\n\ta = sorted(map(int, I().split()))\n\tr = c = 0\n\tfor i in a:\n\t\tif i >= c:\n\t\t\tc += 1\n\t\tr += c <= i\n\tprint(r)\n \n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n",
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(sum(a) - max(a))\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n ",
            "for s in [*open(0)][2::2]:\n\t(*a,) = map(int, s.split())\n\tprint(sum((i for i in a if i < len(a) + 1)))\n \n",
            "for s in [*open(0)][2::2]:\n\ta = [0] * (int(s) + 1)\n\tfor i in s.split():\n\t\ta[int(i)] += 1\n\tprint(sum((i * (a[i] // i) for i in range(1, a[0] + 1))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [0] * (int(s) + 1)\n\tfor i in s.split():\n\t\ta[int(i)] += 1\n\tprint(sum((i * (a[i] // i) for i in range(1, a[0] + 1))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [0] * (int(s) + 1)\n\tfor i in s.split():\n\t\ta[int(i)] += 1\n\tprint(sum((i * (a[i] // i) for i in range(1, a[0] + 1))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [0] * (int(s) + 1)\n\tfor i in s.split():\n\t\ta[int(i)] += 1\n\tprint(sum((i * (a[i] // i) for i in range(1, a[0] + 1))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [0] * (int(s) + 1)\n\tfor i in s.split():\n\t\ta[int(i)] += 1\n\tprint(sum((i * (a[i] // i) for i in range(1, a[0] + 1))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [0] * (int(s) + 1)\n\tfor i in s.split():\n\t\ta[int(i)] += 1\n\tprint(sum((i * (a[i] // i) for i in range(1, a[0] + 1))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [0] * (int(s) + 1)\n\tfor i in s.split():\n\t\ta[int(i)] += 1\n\tprint(sum((i * (a[i] // i) for i in range(1, a[0] + 1))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [0] * (int(s) + 1)\n\tfor i in s.split():\n\t\ta[int(i)] += 1\n\tprint(sum((i * (a[i] // i) for i in range(1, a[0] + 1))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [0] * (int(s) + 1)\n\tfor i in s.split():\n\t\ta[int(i)] += 1\n\tprint(sum((i * (a[i] // i) for i in range(1, a[0] + 1))))\n \n \nfor s in [*open(0)][2::2]:\n\ta = [0] * (int(s) + 1)\n\tfor i in s",
            "for s in [*open(0)][2::2]:\n\tprint(max((*map(int, s.split()), [0]))[1])\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n",
            "for s in [*open(0)][2::2]:\n\ta = [0] * (int(s) + 1)\n\tfor i in map(int, s.split()):\n\t\ta[i] += 1\n\tprint(max((a[i] for i in range(1, len(a)) if a[i] > 0), default=0))\n ",
            "for s in [*open(0)][2::2]:\n\ta = [0] * (int(s.split()[0]) + 1)\n\tprint(sum(a[x] = x for x in map(int, s.split()[1:])))\n \n\n \n\n \n\n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n \n \n \n\n \n \n",
            "for _ in range(int(input())):\n\tn = int(input())\n\ta = sorted(map(int, input().split()))\n\tr = [0]\n\tfor i in range(n):\n\t\tif a[i] >= r[-1]:\n\t\t\tr.append(r[-1] + 1)\n\tprint(len(r) - 1)\n \n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n "
        ]
    },
    {
        "task_id": 30,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: Anton likes to play chess. Also he likes to do programming. No wonder that he decided to attend chess classes and programming classes.\n\nAnton has n variants when he will attend chess classes, i-th variant is given by a period of time (l_{1, }i, r_{1, }i). Also he has m variants when he will attend programming classes, i-th variant is given by a period of time (l_{2, }i, r_{2, }i).\n\nAnton needs to choose exactly one of n possible periods of time when he will attend chess classes and exactly one of m possible periods of time when he will attend programming classes. He wants to have a rest between classes, so from all the possible pairs of the periods he wants to choose the one where the distance between the periods is maximal.\n\nThe distance between periods (l_1, r_1) and (l_2, r_2) is the minimal possible distance between a point in the first period and a point in the second period, that is the minimal possible |i - j|, where l_1 \u2264 i \u2264 r_1 and l_2 \u2264 j \u2264 r_2. In particular, when the periods intersect, the distance between them is 0.\n\nAnton wants to know how much time his rest between the classes will last in the best case. Help Anton and find this number!\n\n\n-----Input-----\n\nThe first line of the input contains a single integer n (1 \u2264 n \u2264 200 000)\u00a0\u2014 the number of time periods when Anton can attend chess classes.\n\nEach of the following n lines of the input contains two integers l_{1, }i and r_{1, }i (1 \u2264 l_{1, }i \u2264 r_{1, }i \u2264 10^9)\u00a0\u2014 the i-th variant of a period of time when Anton can attend chess classes.\n\nThe following line of the input contains a single integer m (1 \u2264 m \u2264 200 000)\u00a0\u2014 the number of time periods when Anton can attend programming classes.\n\nEach of the following m lines of the input contains two integers l_{2, }i and r_{2, }i (1 \u2264 l_{2, }i \u2264 r_{2, }i \u2264 10^9)\u00a0\u2014 the i-th variant of a period of time when Anton can attend programming classes.\n\n\n-----Output-----\n\nOutput one integer\u00a0\u2014 the maximal possible distance between time periods.\n\n\n-----Examples-----\nInput\n3\n1 5\n2 6\n2 3\n2\n2 4\n6 8\n\nOutput\n3\n\nInput\n3\n1 5\n2 6\n3 7\n2\n2 4\n1 4\n\nOutput\n0\n\n\n\n-----Note-----\n\nIn the first sample Anton can attend chess classes in the period (2, 3) and attend programming classes in the period (6, 8). It's not hard to see that in this case the distance between the periods will be equal to 3.\n\nIn the second sample if he chooses any pair of periods, they will intersect. So the answer is 0. \n\n### Response:\n",
        "output": [
            "from bisect import bisect_left, bisect_right\n\ndef main():\n\tn = int(input())\n\tchess = []\n\tfor _ in range(n):\n\t\t(a, b) = map(int, input().split())\n\t\tchess.append((a, b))\n\tm = int(input())\n\tprog = []\n\tfor _ in range(m):\n\t\t(a, b) = map(int, input().split())\n\t\tprog.append((a, b))\n\tchess.sort()\n\tprog.sort()\n\tans = 0\n\tfor (a, b) in chess:\n\t\tl = bisect_left(prog, (a, a))\n\t\tr = bisect_right(prog, (b, b))\n\t\tif l < r:\n\t\t\tans = max(ans, min((x[0] for x in prog[l:r]), key=lambda x: b - x[1]))\n\tl = bisect_left(chess, (1, 1))\n\tr = bisect_right(chess, (10 ** 9, 10 ** 9))\n\tif l < r:\n\t\tans = max(ans, max((x[1] for x in chess[l:r])))\n\tprint(ans)\nmain()\n \n \n \n \n \n \n \n \n\n \n \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "def main():\n\t(n, a) = (int(input()), sorted(((int(x), 1) for _ in range(int(input())) for x in input().split())))\n\t(m, b) = (int(input()), sorted(((int(x), -1) for _ in range(int(input())) for x in input().split())))\n\ta.sort()\n\tb.sort()\n\t(i, j, ans) = (0, 0, 0)\n\twhile i < n and j < m:\n\t\tif a[i][0] <= b[j][0]:\n\t\t\tans = max(ans, abs(a[i][0] - b[j][0]) * a[i][1])\n\t\t\ti += 1\n\t\telse:\n\t\t\tans = max(ans, abs(a[i][0] - b[j][0]) * b[j][1])\n\t\t\tj += 1\n\tprint(ans)\nmain()\n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n ",
            "(n, *l) = map(int, open(0).read().split())\nl = sorted((l[i], l[i + 1]) for i in range(0, n * 2, 2))\n(m, *r) = map(int, open(0).read().split())\nr = sorted((r[i], r[i + 1]) for i in range(0, m * 2, 2))\n(n, m) = (len(l), len(r))\n(lmax, rmax) = (0, 0)\nfor i in range(n):\n\t(a, b) = l[i]\n\tlmax = max(lmax, b - a)\nfor i in range(m):\n\t(a, b) = r[i]\n\trmax = max(rmax, b - a)\nfor i in range(n - 1):\n\t(a, b) = l[i]\n\tfor j in range(m - 1):\n\t\t(c, d) = r[j]\n\t\tif b < c or d < a:\n\t\t\tbreak\n\t\tlmax = max(lmax, min(b, d) - c)\nprint(max(lmax, rmax))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "import sys\ninput = sys.stdin.readline\n\ndef main():\n\tn = int(input())\n\tx = []\n\tfor i in range(n):\n\t\t(l, r) = map(int, input().split())\n\t\tx.append((l, r))\n\tx.sort()\n\tn = int(input())\n\ty = []\n\tfor i in range(n):\n\t\t(l, r) = map(int, input().split())\n\t\ty.append((l, r))\n\ty.sort()\n\tans = 0\n\tj = 0\n\tfor (i, (l, r)) in enumerate(x):\n\t\twhile j < n and y[j][0] < l:\n\t\t\tj += 1\n\t\tif j < n:\n\t\t\tans = max(ans, min(y[j][1], r) - l)\n\tprint(ans)\nmain()\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "R = lambda : map(int, input().split())\n(n, *a) = R()\n(m, *b) = R()\na.sort()\nb.sort()\nprint(max(min(a[i], b[j]) - max(a[i - 1], b[j - 1]) for i in range(1, n) for j in range(1, m)))\n \n\ndef readline():\n\treturn tuple(map(int, input().split()))\n(n,) = readline()\na = sorted((readline() for _ in range(n)))\n(m,) = readline()\nb = sorted((readline() for _ in range(m)))\nprint(max((min(x, y) - max(a[i - 1], b[j - 1]) for (i, (x, y)) in enumerate(zip(a, b)) for j in range(m))))\n \n\ndef main():\n\t(n,) = map(int, input().split())\n\ta = sorted((map(int, input().split()) for _ in range(n)))\n\t(m,) = map(int, input().split())\n\tb = sorted((map(int, input().split()) for _ in range(m)))\n\tprint(max((min(a[i][1], b[j][1]) - max(a[i - 1][1], b[j - 1][1]) for i in range(1, n) for j in range(1, m))))\nmain()\n \n\ndef main():\n\t(n,) = map(int, input().split())\n\ta = sorted((map(int, input().split()) for _ in range(n)))\n\t(m,) = map(int, input().split())\n\tb = sorted((map(intruction, input().split()) for _ in range(m)))\n\tprint(max((min(a[i][1], b[j][1]) - max(a[i - 1][1], b[j - 1][1]) for i in range(1, n) for j in range(1, m))))\nmain()\n \n\ndef main():\n\t(n,) = map(int, input().split())\n\ta = sorted((map(int, input().split()) for _ in range(n)))\n\t(m,) = map(int, input().split())\n\tb = sorted((map(int, input().split()) for _ in range(m)))\n\tprint(max((min(a[i][1], b[j][1]) - max(a[i - 1][1], b[j - 1][1]) for i in range(1, n) for j in range(1, m))))\nmain()\n \n\ndef main():\n\t(n,) = map(int, input().split())\n\ta = sorted((map(int, input().split()) for _ in range(n)))\n\t(m,) = map(int, input().split())\n\tb = sorted((map(int, input().split()) for _ in range(m)))\n\tprint(max((min(a[i][1], b[j][1]) - max(a[i - 1][1], b[j - 1][1]) for i in range(1, n) for j in range(1, m))))\nmain()\n \n\ndef main():\n\t(n,) = map(int, input().split())\n\ta = sorted((map(int, input().split",
            "from bisect import bisect_left, bisect_right\n\ndef get_int():\n\treturn int(input())\n\ndef get_ints():\n\treturn map(int, input().split())\n\ndef solve():\n\tn = get_int()\n\tl1 = []\n\tr1 = []\n\tfor i in range(n):\n\t\t(x, y) = get_ints()\n\t\tl1.append(x)\n\t\tr1.append(y)\n\tl1.sort()\n\tr1.sort()\n\tm = get_int()\n\tl2 = []\n\tr2 = []\n\tfor i in range(m):\n\t\t(x, y) = get_ints()\n\t\tl2.append(x)\n\t\tr2.append(y)\n\tl2.sort()\n\tr2.sort()\n\tans = 0\n\tfor i in range(n):\n\t\ta = bisect_left(l2, l1[i])\n\t\tb = bisect_right(r2, r1[i])\n\t\tans = max(ans, b - a)\n\tfor i in range(m):\n\t\ta = bisect_left(l1, l2[i])\n\t\tb = bisect_right(r1, r2[i])\n\t\tans = max(ans, b - a)\n\tprint(ans)\nsolve()\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "import sys\ninput = sys.stdin.readline\n\ndef solve(n, a, m, b):\n\ta.sort()\n\tb.sort()\n\ti = 0\n\tj = 0\n\tans = 0\n\twhile i < n and j < m:\n\t\tans = max(ans, min(a[i][1], b[j][1]) - max(a[i][0], b[j][0]))\n\t\tif a[i][1] > b[j][1]:\n\t\t\tj += 1\n\t\telse:\n\t\t\ti += 1\n\treturn ans\n\nn = int(input())\na = []\nfor _ in range(n):\n\tl, r = map(int, input().split())\n\ta.append((l, r))\nm = int(input())\nb = []\nfor _ in range(m):\n\tl, r = map(int, input().split())\n\tb.append((l, r))\nprint(solve(n, a, m, b))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "f = lambda : map(int, input().split())\nn = int(input())\ns = sorted((f() for _ in range(n)))\nm = int(input())\nt = sorted((f() for _ in range(m)))\ni = 0\nj = 0\nans = 0\nwhile i < n and j < m:\n\tif s[i][0] <= t[j][0] <= s[i][1]:\n\t\tans = max(ans, s[i][1] - t[j][0])\n\t\tj += 1\n\telif t[j][0] <= s[i][0] <= t[j][1]:\n\t\tans = max(ans, t[j][1] - s[i][0])\n\t\ti += 1\n\telif s[i][1] < t[j][0]:\n\t\ti += 1\n\telse:\n\t\tj += 1\nprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "def read_ints():\n\treturn [int(x) for x in input().split()]\n\ndef solve():\n\t(n, m) = read_ints()\n\tintervals = []\n\tintervals.append(read_ints() for i in range(n))\n\tintervals.append(read_ints() for i in range(m))\n\tintervals.sort()\n\tintervals.append([10 ** 9, 10 ** 9])\n\tanswer = 0\n\tfor i in range(n + m):\n\t\tanswer = max(answer, intervals[i + 1][0] - intervals[i][1])\n\treturn answer\nprint(solve())\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "R = lambda : map(int, input().split())\n(n,) = R()\nA = sorted(zip(R(), R()))\n(m,) = R()\nB = sorted(zip(R(), R()))\n(a, b) = (0, 0)\n(l, r) = (0, 1)\nans = 0\nwhile l < n and r < m:\n\t(a, b) = (A[l][0], B[r][0])\n\tif a > b:\n\t\t(l, r) = (l, r + 1)\n\telse:\n\t\t(l, r) = (l + 1, r)\n\tans = max(ans, b - a)\nprint(ans)\n \n\ndef R():\n\treturn map(int, input().split())\n(n,) = R()\nA = sorted(zip(R(), R()))\n(m,) = R()\nB = sorted(zip(R(), R()))\n(a, b) = (0, 0)\n(l, r) = (0, 1)\nans = 0\nwhile l < n and r < m:\n\t(a, b) = (A[l][0], B[r][0])\n\tif a > b:\n\t\t(l, r) = (l, r + 1)\n\telse:\n\t\t(l, r) = (l + 1, r)\n\tans = max(ans, b - a)\nprint(ans)\n \n\ndef R():\n\treturn map(int, input().split())\n(n,) = R()\nA = sorted(zip(R(), R()))\n(m,) = R()\nB = sorted(zip(R(), R()))\n(a, b) = (0, 0)\n(l, r) = (0, 1)\nans = 0\nwhile l < n and r < m:\n\t(a, b) = (A[l][0], B[r][0])\n\tif a > b:\n\t\t(l, r) = (l, r + 1)\n\telse:\n\t\t(l, r) = (l + 1, r)\n\tans = max(ans, b - a)\nprint(ans)\n \n\ndef R():\n\treturn map(int, input().split())\n(n,) = R()\nA = sorted(zip(R(), R()))\n(m,) = R()\nB = sorted(zip(R(), R()))\n(a, b) = (0, 0)\n(l, r) = (0, 1)\nans = 0\nwhile l < n and r < m:\n\t(a, b) = (A[l][0], B[r][0])\n\tif a > b:\n\t\t(l, r) = (l, r + 1)\n\telse:\n\t\t(l, r) = (l + 1, r)\n\tans = max(ans, b - a)\nprint(ans)\n \n\ndef R():\n\treturn map(int, input().split())\n(n,) = R()\nA = sorted(zip(R(), R()))\n(m,) = R()\nB = sorted(zip(R(), R()))\n(a, b) = (0, 0)\n(l, r) = (0, 1)\nans = 0\nwhile l < n and r < m:\n\t(a, b) = (A[l][0], B[r][0])\n\tif a > b:\n\t\t(l, r) = (",
            "n = int(input())\nchess = []\nfor _ in range(n):\n\tchess.append(list(map(int, input().split())))\nm = int(input())\nprog = []\nfor _ in range(m):\n\tprog.append(list(map(int, input().split())))\nchess.sort()\nprog.sort()\nl1 = chess[0][0]\nr1 = chess[0][1]\nl2 = prog[0][0]\nr2 = prog[0][1]\nans = 0\nfor i in range(1, n):\n\tl = max(l1, chess[i][0])\n\tr = min(r1, chess[i][1])\n\tif l > r:\n\t\tl1 = chess[i][0]\n\t\tr1 = chess[i][1]\n\telse:\n\t\tans = max(ans, r - l)\nfor i in range(1, m):\n\tl = max(l2, prog[i][0])\n\tr = min(r2, prog[i][1])\n\tif l > r:\n\t\tl2 = prog[i][0]\n\t\tr2 = prog[i][1]\n\telse:\n\t\tans = max(ans, r - l)\nprint(ans)\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n",
            "n = int(input())\nx = []\nfor i in range(n):\n\tx.append(list(map(int, input().split())))\nm = int(input())\ny = []\nfor i in range(m):\n\ty.append(list(map(int, input().split())))\nx.sort(key=lambda a: a[1])\ny.sort(key=lambda a: a[1])\nprint(max(min(x[i][0], y[j][1]) - max(x[i][1], y[j][0]) for i in range(n) for j in range(m)))\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
            "I = input\nI()\nc = [tuple(map(int, i.split())) for i in [*open(0)][1::2]]\nI()\np = [tuple(map(int, i.split())) for i in [*open(0)][1::2]]\n(l, r) = (c[0][0], p[0][1])\nfor (i, j) in sorted(c + p):\n\tif i > l:\n\t\tl = i\n\telif j < r:\n\t\tr = j\nprint(r - l)\n ",
            "n = int(input())\nl1 = []\nr1 = []\nfor i in range(n):\n\t(a, b) = map(int, input().split())\n\tl1.append(a)\n\tr1.append(b)\nm = int(input())\nl2 = []\nr2 = []\nfor i in range(m):\n\t(a, b) = map(int, input().split())\n\tl2.append(a)\n\tr2.append(b)\nl1.sort()\nr1.sort()\nl2.sort()\nr2.sort()\ni = 0\nj = 0\nans = 0\nwhile i < n and j < m:\n\tif l1[i] < l2[j]:\n\t\tif r1[i] < l2[j]:\n\t\t\ti += 1\n\t\telse:\n\t\t\tans = max(ans, l2[j] - l1[i])\n\t\t\ti += 1\n\telse:\n\t\tif r2[j] < l1[i]:\n\t\t\tj += 1\n\t\telse:\n\t\t\tans = max(ans, l1[i] - l2[j])\n\t\t\tj += 1\nprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "def read():\n\treturn map(int, input().split())\n\ndef main():\n\tn = int(input())\n\ta = sorted(((x, 1) for (x, y) in zip(read(), read())))\n\tm = int(input())\n\tb = sorted(((x, 2) for (x, y) in zip(read(), read())))\n\ta.extend(b)\n\ta.sort()\n\tans = 0\n\tfor i in range(n + m):\n\t\tans = max(ans, a[i][0] - a[i - 1][0])\n\tprint(ans)\nmain()\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "(n, a) = (int(input()), [])\nfor i in range(n):\n\ta.append(list(map(int, input().split())))\n(m, b) = (int(input()), [])\nfor i in range(m):\n\tb.append(list(map(int, input().split())))\na.sort()\nb.sort()\n(i, j) = (0, 0)\n(x, y) = (0, 0)\nwhile i < n and j < m:\n\tif a[i][0] <= b[j][0]:\n\t\tx = max(x, a[i][0])\n\t\ty = min(y, b[j][0])\n\t\ti += 1\n\telse:\n\t\tx = max(x, b[j][0])\n\t\ty = min(y, a[i][0])\n\t\tj += 1\nprint(max(0, y - x))\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n",
            "f = lambda : sorted(map(int, input().split()))\n(a, b) = (f(), f())\nprint(max(min(b[i + 1], a[i + 1]) - max(b[i], a[i]) for i in range(len(a) - 1)))\n \n\n",
            "R = lambda : map(int, input().split())\n(n,) = R()\nA = sorted((R() for _ in range(n)))\n(m,) = R()\nB = sorted((R() for _ in range(m)))\nans = 0\ni = j = 0\nwhile i < n and j < m:\n\t(a, b) = (A[i], B[j])\n\tif a[0] > b[0]:\n\t\tj += 1\n\telif a[1] < b[1]:\n\t\ti += 1\n\telse:\n\t\tans = max(ans, min(a[1], b[1]) - max(a[0], b[0]))\n\t\ti += 1\nprint(ans)\n ",
            "def f(a, b):\n\treturn max(0, min(a[1], b[1]) - max(a[0], b[0]) + 1)\nn = int(input())\nc = [list(map(int, input().split())) for i in range(n)]\nm = int(input())\np = [list(map(int, input().split())) for i in range(m)]\nc.sort()\np.sort()\nprint(max((f(a, b) for a in c for b in p)))\n \n\ndef f(a, b):\n\treturn max(0, min(a[1], b[1]) - max(a[0], b[0]) + 1)\nn = int(input())\nc = [list(map(int, input().split())) for i in range(n)]\nm = int(input())\np = [list(map(int, input().split())) for i in range(m)]\nc.sort()\np.sort()\nprint(max((f(a, b) for a in c for b in p)))\n \n\ndef f(a, b):\n\treturn max(0, min(a[1], b[1]) - max(a[0], b[0]) + 1)\nn = int(input())\nc = [list(map(int, input().split())) for i in range(n)]\nm = int(input())\np = [list(map(int, input().split())) for i in range(m)]\nc.sort()\np.sort()\nprint(max((f(a, b) for a in c for b in p)))\n \n\ndef f(a, b):\n\treturn max(0, min(a[1], b[1]) - max(a[0], b[0]) + 1)\nn = int(input())\nc = [list(map(int, input().split())) for i in range(n)]\nm = int(input())\np = [list(map(int, input().split())) for i in range(m)]\nc.sort()\np.sort()\nprint(max((f(a, b) for a in c for b in p)))\n \n\ndef f(a, b):\n\treturn max(0, min(a[1], b[1]) - max(a[0], b[0]) + 1)\nn = int(input())\nc = [list(map(int, input().split())) for i in range(n)]\nm = int(input())\np = [list(map(int, input().split())) for i in range(m)]\nc.sort()\np.sort()\nprint(max((f(a, b) for a in c for b in p)))\n \n\ndef f(a, b):\n\treturn max(0, min(a[1], b[1]) - max(a[0], b[0]) + 1)\nn = int(input())\nc = [list(map(int, input().split())) for i in range(n)]\nm = int(input())\np = [list(map(int, input().split())) for i in range(m)]\nc.sort()\np.sort()\nprint(max((f(a, b) for a in c for b in p)))\n \n\ndef f(a, b):\n\treturn max(0, min(a[1], b[1]) - max(a[0], b[0]) + 1)\n",
            "R = lambda : map(int, input().split())\n(n, a, m, b) = (int(input()), [*R()], int(input()), [*R()])\n(a, b, x, y) = ([*zip(*sorted(a)[::-1])], [*zip(*sorted(b)[::-1])], 0, 0)\nfor (i, j) in zip(a[0], b[0]):\n\tif x < i:\n\t\tx = i\n\telif y < j:\n\t\ty = j\n\telse:\n\t\tbreak\nprint(y - x)\n "
        ]
    },
    {
        "task_id": 31,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: A rectangle with its opposite corners in $(0, 0)$ and $(w, h)$ and sides parallel to the axes is drawn on a plane.\n\nYou are given a list of lattice points such that each point lies on a side of a rectangle but not in its corner. Also, there are at least two points on every side of a rectangle.\n\nYour task is to choose three points in such a way that:\n\nexactly two of them belong to the same side of a rectangle;\n\nthe area of a triangle formed by them is maximum possible.\n\nPrint the doubled area of this triangle. It can be shown that the doubled area of any triangle formed by lattice points is always an integer.\n\n\n-----Input-----\n\nThe first line contains a single integer $t$ ($1 \\le t \\le 10^4$) \u2014 the number of testcases.\n\nThe first line of each testcase contains two integers $w$ and $h$ ($3 \\le w, h \\le 10^6$) \u2014 the coordinates of the corner of a rectangle.\n\nThe next two lines contain the description of the points on two horizontal sides. First, an integer $k$ ($2 \\le k \\le 2 \\cdot 10^5$) \u2014 the number of points. Then, $k$ integers $x_1 < x_2 < \\dots < x_k$ ($0 < x_i < w$) \u2014 the $x$ coordinates of the points in the ascending order. The $y$ coordinate for the first line is $0$ and for the second line is $h$.\n\nThe next two lines contain the description of the points on two vertical sides. First, an integer $k$ ($2 \\le k \\le 2 \\cdot 10^5$) \u2014 the number of points. Then, $k$ integers $y_1 < y_2 < \\dots < y_k$ ($0 < y_i < h$) \u2014 the $y$ coordinates of the points in the ascending order. The $x$ coordinate for the first line is $0$ and for the second line is $w$.\n\nThe total number of points on all sides in all testcases doesn't exceed $2 \\cdot 10^5$.\n\n\n-----Output-----\n\nFor each testcase print a single integer \u2014 the doubled maximum area of a triangle formed by such three points that exactly two of them belong to the same side.\n\n\n-----Examples-----\n\nInput\n3\n5 8\n2 1 2\n3 2 3 4\n3 1 4 6\n2 4 5\n10 7\n2 3 9\n2 1 7\n3 1 3 4\n3 4 5 6\n11 5\n3 1 6 8\n3 3 6 8\n3 1 3 4\n2 2 4\nOutput\n25\n42\n35\n\n\n-----Note-----\n\nThe points in the first testcase of the example:\n\n$(1, 0)$, $(2, 0)$;\n\n$(2, 8)$, $(3, 8)$, $(4, 8)$;\n\n$(0, 1)$, $(0, 4)$, $(0, 6)$;\n\n$(5, 4)$, $(5, 5)$.\n\nThe largest triangle is formed by points $(0, 1)$, $(0, 6)$ and $(5, 4)$ \u2014 its area is $\\frac{25}{2}$. Thus, the doubled area is $25$. Two points that are on the same side are: $(0, 1)$ and $(0, 6)$. \n\n### Response:\n",
        "output": [
            "for s in [*open(0)][2::2]:\n\tk = int(s)\n\ta = sorted(map(int, s.split()[1:]))\n\tprint(max(a[0] * a[1], a[-1] * a[-2]))\n \n \nfor _ in [*open(0)][2::2]:\n\tk = int(s)\n\ta = sorted(map(int, s.split()[1:]))\n\tprint(max(a[0] * a[1], a[-1] * a[-2]))\n \n \ndef i():\n\treturn int(input())\nfor _ in range(i()):\n\tx = i()\n\ta = sorted(map(int, input().split()[1:]))\n\tprint(max(a[0] * a[1], a[-1] * a[-2]))\n \n \ndef i():\n\treturn int(input())\nfor _ in range(i()):\n\tx = i()\n\ta = sorted(map(int, input().split()[1:]))\n\tprint(max(a[0] * a[1], a[-1] * a[-2]))\n \n \ndef i():\n\treturn int(input())\nfor _ in range(i()):\n\tx = i()\n\ta = sorted(map(int, input().split()[1:]))\n\tprint(max(a[0] * a[1], a[-1] * a[-2]))\n \n \ndef i():\n\treturn int(input())\nfor _ in range(i()):\n\tx = i()\n\ta = sorted(map(int, input().split()[1:]))\n\tprint(max(a[0] * a[1], a[-1] * a[-2]))\n \n \ndef i():\n\treturn int(input())\nfor _ in range(i()):\n\tx = i()\n\ta = sorted(map(int, input().split()[1:]))\n\tprint(max(a[0] * a[1], a[-1] * a[-2]))\n \n \ndef i():\n\treturn int(input())\nfor _ in range(i()):\n\tx = i()\n\ta = sorted(map(int, input().split()[1:]))\n\tprint(max(a[0] * a[1], a[-1] * a[-2]))\n \n \ndef i():\n\treturn int(input())\nfor _ in range(i()):\n\tx = i()\n\ta = sorted(map(int, input().split()[1:]))\n\tprint(max(a[0] * a[1], a[-1] * a[-2]))\n \n \ndef i():\n\treturn int(input())\nfor _ in range(i()):\n\tx = i()\n\ta = sorted(map(int, input().split()[1:]))\n\tprint(max(a[0] * a[1], a[-1] * a[-2]))\n \n \ndef i():\n\treturn int(input())\nfor _ in range(i()):\n\tx = i()\n\ta = sorted(map(int, input().split()[1:]))\n\tprint(max(a[0] * a[1], a[-1] * a[-2]))\n \n \ndef i():\n\treturn int(input())\nfor _ in range(i()):\n\tx = i",
            "for _ in range(int(input())):\n\t(w, h) = map(int, input().split())\n\tx = [0] + list(map(int, input().split())) + [w]\n\ty = [0] + list(map(int, input().split())) + [h]\n\tprint(max(x[i] * (y[i + 1] - y[i - 1]) + y[i] * (x[i + 1] - x[i - 1]) for i in range(1, len(x) - 1)))\n \n \ninput = __builtin_input\n \n \ndef read_int():\n\treturn int(read_int())\n \n\ndef read_ints():\n\treturn map(int, input().split())\n \n\nfor _ in range(read_int()):\n\t(w, h) = read_ints()\n\tx = [0] + list(read_ints()) + [w]\n\ty = [0] + list(read_ints()) + [h]\n\tprint(max(x[i] * (y[i + 1] - y[i - 1]) + y[i] * (x[i + 1] - x[i - 1]) for i in range(1, len(x) - 1)))\n \n__builtin_input = input\n \n \ndef read_int():\n\treturn int(read_int())\n \n\ndef read_ints():\n\treturn map(int, input().split())\n \n\nfor _ in range(read_int()):\n\t(w, h) = read_ints()\n\tx = [0] + list(read_ints()) + [w]\n\ty = [0] + list(read_ints()) + [h]\n\tprint(max(x[i] * (y[i + 1] - y[i - 1]) + y[i] * (x[i + 1] - x[i - 1]) for i in range(1, len(x) - 1)))\n \n__builtin_input = input\n \n \ndef read_int():\n\treturn int(read_int())\n \n\ndef read_ints():\n\treturn map(int, input().split())\n \n\nfor _ in range(read_int()):\n\t(w, h) = read_ints()\n\tx = [0] + list(read_ints()) + [w]\n\ty = [0] + list(read_ints()) + [h]\n\tprint(max(x[i] * (y[i + 1] - y[i - 1]) + y[i] * (x[i + 1] - x[i - 1]) for i in range(1, len(x) - 1)))\n \n__builtin_input = input\n \n \ndef read_int():\n\treturn int(read_int())\n \n\ndef read_ints():\n\treturn map(int, input().split())\n \n\nfor _ in range(read_int()):\n\t(w, h) = read_ints()\n\tx = [0] + list(read_ints()) + [w]\n\ty = [0] + list(read_ints()) + [h]\n\tprint(max(x[i] * (y[i + 1] - y[i - 1]) + y[i] * (x[i + 1] - x[i - 1]) for i",
            "for s in [*open(0)][2::3]:\n\ta = [*map(int, s.split())]\n\tprint(max((a[i + 1] - a[i]) * (a[2] - a[0]) for i in range(len(a) - 2)))\n \n \ninput = __builtins__.input\n \ndef main():\n\tread = lambda : map(int, input().split())\n\tfor _ in range(int(input())):\n\t\t(w, h) = read()\n\t\tprint(max(((w - x) * h for x in read())) + max((w * (h - y) for y in read())))\nmain()\n \n \n__import__('sys').setrecursionlimit(1 << 30)\nmain()\n \n \ndef main():\n\t(r, *t) = open(0)\n\texec(r + ''.join(t[x + 1:x + 3] for x in map(int, t[x + 2:x + 4])))\nmain()\n \n \nmain()\n \n \nexec(open(0).read())\n \n \ndef main():\n\t(n, *t) = open(0)\n\texec(n + ''.join(t[x + 1:x + 3] for x in map(int, t[x + 2:x + 4])))\nmain()\n \n \nmain()\n \n \nexec(open(0).read())\n \n \ndef main():\n\t(n, *t) = open(0)\n\texec(n + ''.join(t[x + 1:x + 3] for x in map(int, t[x + 2:x + 4])))\nmain()\n \n \nmain()\n \n \nexec(open(0).read())\n \n \ndef main():\n\t(n, *t) = open(0)\n\texec(n + ''.join(t[x + 1:x + 3] for x in map(int, t[x + 2:x + 4])))\nmain()\n \n \nmain()\n \n \nexec(open(0).read())\n \n \ndef main():\n\t(n, *t) = open(0)\n\texec(n + ''.join(t[x + 1:x + 3] for x in map(int, t[x + 2:x + 4])))\nmain()\n \n \nmain()\n \n \nexec(open(0).read())\n \n \ndef main():\n\t(n, *t) = open(0)\n\texec(n + ''.join(t[x + 1:x + 3] for x in map(int, t[x + 2:x + 4])))\nmain()\n \n \nmain()\n \n \nexec(open(0).read())\n \n \ndef main():\n\t(n, *t) = open(0)\n\texec(n + ''.join(t[x + 1:x + 3] for x in map(int, t[x + 2:x + 4])))\nmain()\n \n \nmain()\n \n \nexec(open(0).read())\n \n \ndef main():\n\t(n, *t) = open(0)\n\texec(n + ''.join(t[x + 1:x + 3] for x in map(",
            "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n\t(w, h) = map(int, input().split())\n\tw -= 1\n\th -= 1\n\ta = [[] for _ in range(2)]\n\tfor i in range(2):\n\t\tn = int(input())\n\t\ta[i] = list(map(int, input().split()))\n\tans = 0\n\tfor i in range(2):\n\t\tl = a[1 - i]\n\t\tr = a[i]\n\t\tans = max(ans, l[-1] * h, r[-1] * w)\n\t\tans = max(ans, l[0] * h)\n\t\tans = max(ans, r[0] * w)\n\t\tans = max(ans, l[1] * h)\n\t\tans = max(ans, r[1] * w)\n\tprint(ans)\n \n \nfor _ in range(t):\n\t(w, h) = map(int, input().split())\n\tw -= 1\n\th -= 1\n\ta = [[] for _ in range(2)]\n\tfor i in range(2):\n\t\tn = int(input())\n\t\ta[i] = list(map(int, input().split()))\n\tans = 0\n\tfor i in range(2):\n\t\tl = a[1 - i]\n\t\tr = a[i]\n\t\tans = max(ans, l[-1] * h, r[-1] * w)\n\t\tans = max(ans, l[0] * h)\n\t\tans = max(ans, r[0] * w)\n\t\tans = max(ans, l[1] * h)\n\t\tans = max(ans, r[1] * w)\n\tprint(ans)\n \n \nfor _ in range(t):\n\t(w, h) = map(int, input().split())\n\tw -= 1\n\th -= 1\n\ta = [[] for _ in range(2)]\n\tfor i in range(2):\n\t\tn = int(input())\n\t\ta[i] = list(map(int, input().split()))\n\tans = 0\n\tfor i in range(2):\n\t\tl = a[1 - i]\n\t\tr = a[i]\n\t\tans = max(ans, l[-1] * h, r[-1] * w)\n\t\tans = max(ans, l[0] * h)\n\t\tans = max(ans, r[0] * w)\n\t\tans = max(ans, l[1] * h)\n\t\tans = max(ans, r[1] * w)\n\tprint(ans)\n \n \nfor _ in range(t):\n\t(w, h) = map(int, input().split())\n\tw -= 1\n\th -= 1\n\ta = [[] for _ in range(2)]\n\tfor i in range(2):\n\t\tn = int(input())\n\t\ta[i] = list(map(int, input().split()))\n\tans = 0\n\tfor i in range(2):\n\t\tl = a[1 - i]\n\t\tr = a[i]\n\t\tans = max(ans, l[-1] * h, r[-1] * w)\n\t\t",
            "for _ in range(int(input())):\n\t(w, h) = map(int, input().split())\n\tx = list(map(int, input().split()))\n\ty = list(map(int, input().split()))\n\tx1 = list(map(int, input().split()))\n\ty1 = list(map(int, input().split()))\n\tprint(max(2 * (x[-1] - x[0]) * h, 2 * (y[-1] - y[0]) * w, 2 * (x1[-1] - x1[0]) * h, 2 * (y1[-1] - y1[0]) * w))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\t(w, h) = map(int, input().split())\n\tdef f(x):\n\t\treturn max(x) - min(x)\n\tdef s(x):\n\t\treturn sum(x)\n\tdef m(x):\n\t\treturn x[-1] - x[0]\n\tdef i(x):\n\t\treturn x.index\n\tdef c(x):\n\t\treturn x[0]\n\tdef v(x):\n\t\treturn x[1]\n\tdef g(x):\n\t\treturn x[-1]\n\tdef d(x):\n\t\treturn x[0]\n\ta = [list(map(int, input().split())) for _ in range(2)]\n\tb = [list(map(int, input().split())) for _ in range(2)]\n\tprint(max(s(a[i]) + f(b[i]) for i in range(2)) - min(c(a[i]) + g(b[i]) for i in range(2)) - min(v(a[i]) + d(b[i]) for i in range(2)))\n \n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n ",
            "for _ in range(int(input())):\n\t(w, h) = map(int, input().split())\n\ta = [0] * 2 * w\n\tb = [0] * 2 * h\n\tfor _ in range(int(input())):\n\t\tx = int(input())\n\t\ta[x] = 1\n\tfor _ in range(int(input())):\n\t\ty = int(input())\n\t\tb[y] = 1\n\tans = 0\n\tfor i in range(w):\n\t\tif a[i] == 1:\n\t\t\tj = i + 1\n\t\t\twhile a[j] == 1:\n\t\t\t\tj += 1\n\t\t\tans = max(ans, min(h, j - i))\n\tfor i in range(h):\n\t\tif b[i] == 1:\n\t\t\tj = i + 1\n\t\t\twhile b[j] == 1:\n\t\t\t\tj += 1\n\t\t\tans = max(ans, min(w, j - i))\n\tprint(ans * ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\t(w, h) = map(int, input().split())\n\tdef read_points():\n\t\tk = int(input())\n\t\treturn sorted(map(int, input().split()))\n\tdef area(x, y):\n\t\treturn x * y\n\t(xs, ys) = (read_points(), read_points())\n\tres = max((area(w, h), (0, 0, 0)), (area(xs[0], ys[0]), (0, 0, 1)), (area(xs[-1], ys[-1]), (0, 1, 0)), (area(xs[-1], ys[-2]), (0, 1, 1)), (area(xs[1], ys[0]), (1, 0, 0)), (area(xs[0], ys[1]), (1, 0, 1)))\n\tfor (i, x) in enumerate(xs):\n\t\tfor (j, y) in enumerate(ys):\n\t\t\tif i > 0 and j > 0 and i < len(xs) - 1 and j < len(ys) - 1:\n\t\t\t\tres = max(res, (area(x - xs[i - 1], y - ys[j - 1]), (i, j, 0)))\n\t\t\t\tres = max(res, (area(xs[i + 1] - x, y - ys[j - 1]), (i, j, 1)))\n\t\t\t\tres = max(res, (area(x - xs[i - 1], ys[j + 1] - y), (i, j, 2)))\n\t\t\t\tres = max(res, (area(xs[i + 1] - x, ys[j + 1] - y), (i, j, 3)))\n\tprint(res[0])\n \n \nfor _ in range(int(input())):\n\t(w, h) = map(int, input().split())\n\tdef read_points():\n\t\tk = int(input())\n\t\treturn sorted(map(int, input().split()))\n\tdef area(x, y):\n\t\treturn x * y\n\t(xs, ys) = (read_points(), read_points())\n\tres = max((area(w, h), (0, 0, 0)), (area(xs[0], ys[0]), (0, 0, 1)), (area(xs[-1], ys[-1]), (0, 1, 0)), (area(xs[-1], ys[-2]), (0, 1, 1)), (area(xs[1], ys[0]), (1, 0, 0)), (area(xs[0], ys[1]), (1, 0, 1)))\n\tfor (i, x) in enumerate(xs):\n\t\tfor (j, y) in enumerate(ys):\n\t\t\tif i > 0 and j > 0 and i < len(xs) - 1 and j < len(ys) - 1:\n\t\t\t\tres = max(res, (area(x - xs[i - 1], y - ys[j - 1]), (i, j, 0)))\n\t\t\t\tres = max(res, (area(xs[i + 1] - x, y - ys[j - 1]), (i, j",
            "for _ in range(int(input())):\n\t(w, h) = map(int, input().split())\n\tl = []\n\tfor _ in range(2):\n\t\tl.append(list(map(int, input().split()))[1:])\n\tfor _ in range(2):\n\t\tl.append(list(map(int, input().split()))[1:])\n\tl = [0] + l[0] + l[1] + [w] + l[2] + l[3] + [0]\n\tl = sorted(l)\n\tl.append(l[-1])\n\ta = b = c = d = 0\n\tfor i in range(1, 5):\n\t\tif l[i] == l[i - 1]:\n\t\t\tcontinue\n\t\tif l[i] - l[i - 1] > a:\n\t\t\td = b\n\t\t\ta = l[i] - l[i - 1]\n\t\t\tb = l[i - 1]\n\t\t\tc = l[i]\n\t\telif l[i] - l[i - 1] > a - 1:\n\t\t\ta = l[i] - l[i - 1]\n\t\t\tb = l[i - 1]\n\t\t\tc = l[i]\n\tprint(min(a * (c - b), (l[5] - l[0]) * (l[5] - l[0])) + max(l[1] - l[0], l[5] - l[4]) * max(l[1] - l[0], l[5] - l[4]))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "def c():\n\tinput()\n\tw = int(input().split()[0])\n\th = int(input().split()[0])\n\tl = [0] * (w + 1)\n\tr = [0] * (w + 1)\n\tl[0] = r[w] = -1\n\tfor i in input().split()[1:]:\n\t\tl[int(i)] = 1\n\tfor i in input().split()[1:]:\n\t\tr[int(i)] = 1\n\tl = l[1:]\n\tr = r[:-1]\n\tx = l.count(1)\n\ty = r.count(1)\n\tans = max(x, y) * h\n\tx = 0\n\ty = 0\n\tfor i in l:\n\t\tif i == 1:\n\t\t\tx += 1\n\t\telse:\n\t\t\tx -= 1\n\t\tans = max(ans, x * h)\n\tfor i in r[::-1]:\n\t\tif i == 1:\n\t\t\ty += 1\n\t\telse:\n\t\t\ty -= 1\n\t\tans = max(ans, y * h)\n\tprint(ans)\nfor _ in range(int(input())):\n\tc()\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\t(w, h) = map(int, input().split())\n\tx = list(map(int, input().split()))\n\ty = list(map(int, input().split()))\n\tz = list(map(int, input().split()))\n\tv = list(map(int, input().split()))\n\tx.sort()\n\ty.sort()\n\tz.sort()\n\tv.sort()\n\tarea = 0\n\tfor i in range(len(x) - 1):\n\t\tarea = max(area, x[i] * y[1])\n\t\tarea = max(area, x[i] * z[0])\n\t\tarea = max(area, x[i] * v[0])\n\tfor i in range(len(y) - 1):\n\t\tarea = max(area, y[i] * x[1])\n\t\tarea = max(area, y[i] * z[0])\n\t\tarea = max(area, y[i] * v[0])\n\tfor i in range(len(z) - 1):\n\t\tarea = max(area, z[i] * x[1])\n\t\tarea = max(area, z[i] * y[1])\n\t\tarea = max(area, z[i] * v[0])\n\tfor i in range(len(v) - 1):\n\t\tarea = max(area, v[i] * x[1])\n\t\tarea = max(area, v[i] * y[1])\n\t\tarea = max(area, v[i] * z[0])\n\tprint(area)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\t(w, h) = map(int, input().split())\n\tx = list(map(int, input().split()))\n\ty = list(map(int, input().split()))\n\tx.append(w)\n\ty.append(h)\n\tans = 0\n\tfor i in range(len(x) - 1):\n\t\tans = max(ans, x[i + 1] * y[0])\n\tfor i in range(len(y) - 1):\n\t\tans = max(ans, y[i + 1] * x[0])\n\tprint(ans)\n \n \n\n \n\n \n\n \n\n \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "import sys\nfrom bisect import bisect_left\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n\t(w, h) = map(int, input().split())\n\tk = int(input())\n\ta = [0] + list(map(int, input().split()))\n\tk = int(input())\n\tb = [0] + list(map(int, input().split()))\n\ta += [w]\n\tb += [h]\n\ta.sort()\n\tb.sort()\n\tans = 0\n\tfor i in range(1, k + 1):\n\t\tx = a[i]\n\t\ty = b[i]\n\t\tans = max(ans, x * min(y, bisect_left(b, y) - i))\n\t\tans = max(ans, y * min(x, bisect_left(a, x) - i))\n\tprint(ans)\n \n \nfor _ in range(int(input())):\n\tx = lambda : [*map(int, input().split())]\n\t(a, b) = x()\n\tx = lambda : x()[1:]\n\tprint(max((min(x()[i], b) * min(x()[i + 1], a) for i in range(a - 1))) * 2)\n \n \nfor _ in range(int(input())):\n\t(w, h) = map(int, input().split())\n\tx = lambda : [*map(int, input().split())]\n\tx = lambda : x()[1:]\n\tprint(max((min(x()[i], h) * min(x()[i + 1], w) for i in range(w - 1))) * 2)\n \n \nfor _ in range(int(input())):\n\tx = lambda : [*map(int, input().split())]\n\t(a, b) = x()\n\tx = lambda : x()[1:]\n\tprint(max((min(x()[i], b) * min(x()[i + 1], a) for i in range(a - 1))) * 2)\n \n \nfor _ in range(int(input())):\n\tx = lambda : [*map(int, input().split())]\n\t(a, b) = x()\n\tx = lambda : x()[1:]\n\tprint(max((min(x()[i], b) * min(x()[i + 1], a) for i in range(a - 1))) * 2)\n \n \nfor _ in range(int(input())):\n\tx = lambda : [*map(int, input().split())]\n\t(a, b) = x()\n\tx = lambda : x()[1:]\n\tprint(max((min(x()[i], b) * min(x()[i + 1], a) for i in range(a - 1))) * 2)\n \n \nfor _ in range(int(input())):\n\tx = lambda : [*map(int, input().split())]\n\t(a, b) = x()\n\tx = lambda : x()[1:]\n\tprint(max((min(x()[i], b) * min(x()[i + 1], a) for i in range(a - 1))) * 2)",
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint(max(a[i + 1] * (a[i + 2] - a[i]) for i in range(len(a) - 2)))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\t(w, h) = map(int, input().split())\n\tl = list(map(int, input().split()))\n\tr = list(map(int, input().split()))\n\tu = list(map(int, input().split()))\n\td = list(map(int, input().split()))\n\ta = [0] * (w + 1)\n\tb = [0] * (h + 1)\n\tfor i in l:\n\t\ta[i] += 1\n\tfor i in r:\n\t\ta[i] += 1\n\tfor i in u:\n\t\tb[i] += 1\n\tfor i in d:\n\t\tb[i] += 1\n\ta.sort()\n\tb.sort()\n\tprint((a[-1] * b[-1] + a[-2] * b[-1] + a[-1] * b[-2]) * 2)\n \n\n\n\n \n\n \n\n \n\n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::3]:\n\ta = [*map(int, s.split())]\n\tprint(min((b - a[-1], a[-1] - a[0]) for (a, b) in zip(a, a[1:])))\n \n \ninput()\nfor _ in range(int(input())):\n\tinput()\n\tprint(max(*(max(s) - min(s) for s in zip(*[map(int, input().split()[1:]) for _ in range(2)]))))\n \ninput()\nfor _ in range(int(input())):\n\tinput()\n\tprint(max(*(max(s) - min(s) for s in zip(*[map(int, input().split()[1:]) for _ in range(2)]))))\n \ninput()\nfor _ in range(int(input())):\n\tinput()\n\tprint(max(*(max(s) - min(s) for s in zip(*[map(int, input().split()[1:]) for _ in range(2)]))))\n \ninput()\nfor _ in range(int(input())):\n\tinput()\n\tprint(max(*(max(s) - min(s) for s in zip(*[map(int, input().split()[1:]) for _ in range(2)]))))\n \ninput()\nfor _ in range(int(input())):\n\tinput()\n\tprint(max(*(max(s) - min(s) for s in zip(*[map(int, input().split()[1:]) for _ in range(2)]))))\n \ninput()\nfor _ in range(int(input())):\n\tinput()\n\tprint(max(*(max(s) - min(s) for s in zip(*[map(int, input().split()[1:]) for _ in range(2)]))))\n \ninput()\nfor _ in range(int(input())):\n\tinput()\n\tprint(max(*(max(s) - min(s) for s in zip(*[map(int, input().split()[1:]) for _ in range(2)]))))\n \ninput()\nfor _ in range(int(input())):\n\tinput()\n\tprint(max(*(max(s) - min(s) for s in zip(*[map(int, input().split()[1:]) for _ in range(2)]))))\n \ninput()\nfor _ in range(int(input())):\n\tinput()\n\tprint(max(*(max(s) - min(s) for s in zip(*[map(int, input().split()[1:]) for _ in range(2)]))))\n \ninput()\nfor _ in range(int(input())):\n\tinput()\n\tprint(max(*(max(s) - min(s) for s in zip(*[map(int, input().split()[1:]) for _ in range(2)]))))\n \ninput()\nfor _ in range(int(input())):\n\tinput()\n\tprint(max(*(max(s) - min(s) for s in zip(*[map(int, input().split()[1:]) for _ in range(2)]))))\n \ninput()\nfor _ in range(int(input())):\n\tinput()\n\tprint(max(*(max(s) - min(s) for s in",
            "for s in [*open(0)][2::2]:\n\tprint(max((x * (y - eval(s)) for (x, y) in zip(*[map(int, i.split())] * 2))))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\t(w, h) = map(int, input().split())\n\tl = [int(input()) for _ in range(4)]\n\tl += [int(input()) for _ in range(4)]\n\tl.sort()\n\tans = l[-1] * l[-2]\n\ti = 0\n\tj = 2\n\twhile i + 2 < len(l):\n\t\tif l[i] + l[i + 1] == l[i + 2]:\n\t\t\tans = max(ans, l[-1] * l[i + 1])\n\t\t\tj = i + 1\n\t\t\twhile l[j] + l[j + 1] == l[j + 2]:\n\t\t\t\tans = max(ans, l[-1] * l[j + 1])\n\t\t\t\tj += 1\n\t\t\ti = j + 1\n\t\telse:\n\t\t\ti += 1\n\tprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::3]:\n\ta = sorted((*map(int, s.split()),))\n\tprint(max(a[-1] * a[-3], a[-2] * a[-3], a[-1] * a[0], a[-2] * a[0]))\n \n \n\n \n\n \n\n \n\n \n \n\n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\t(w, h) = map(int, input().split())\n\tx = [int(i) for i in input().split()]\n\ty = [int(i) for i in input().split()]\n\tz = [int(i) for i in input().split()]\n\tt = [int(i) for i in input().split()]\n\tx.sort()\n\ty.sort()\n\tz.sort()\n\tt.sort()\n\tx.append(w)\n\ty.append(h)\n\tz.append(w)\n\tt.append(h)\n\tans = 0\n\tfor i in range(1, len(x)):\n\t\tfor j in range(1, len(y)):\n\t\t\tans = max(ans, x[i] * (y[j] - y[j - 1]))\n\tfor i in range(1, len(z)):\n\t\tfor j in range(1, len(t)):\n\t\t\tans = max(ans, z[i] * (t[j] - t[j - 1]))\n\tprint(ans)\n \n \n\n \n\n \n\n \n\n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n "
        ]
    },
    {
        "task_id": 32,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: Leha like all kinds of strange things. Recently he liked the function F(n, k). Consider all possible k-element subsets of the set [1, 2, ..., n]. For subset find minimal element in it. F(n, k) \u2014 mathematical expectation of the minimal element among all k-element subsets.\n\nBut only function does not interest him. He wants to do interesting things with it. Mom brought him two arrays A and B, each consists of m integers. For all i, j such that 1 \u2264 i, j \u2264 m the condition A_{i} \u2265 B_{j} holds. Help Leha rearrange the numbers in the array A so that the sum $\\sum_{i = 1}^{m} F(A_{i}^{\\prime}, B_{i})$ is maximally possible, where A' is already rearranged array.\n\n\n-----Input-----\n\nFirst line of input data contains single integer m (1 \u2264 m \u2264 2\u00b710^5) \u2014 length of arrays A and B.\n\nNext line contains m integers a_1, a_2, ..., a_{m} (1 \u2264 a_{i} \u2264 10^9) \u2014 array A.\n\nNext line contains m integers b_1, b_2, ..., b_{m} (1 \u2264 b_{i} \u2264 10^9) \u2014 array B.\n\n\n-----Output-----\n\nOutput m integers a'_1, a'_2, ..., a'_{m} \u2014 array A' which is permutation of the array A.\n\n\n-----Examples-----\nInput\n5\n7 3 5 3 4\n2 1 3 2 3\n\nOutput\n4 7 3 5 3\n\nInput\n7\n4 6 5 8 8 2 6\n2 1 2 2 1 1 2\n\nOutput\n2 6 4 5 8 8 6 \n\n### Response:\n",
        "output": [
            "from heapq import heappush, heappop\n\ndef f(n, k):\n\tq = []\n\theappush(q, n)\n\tfor _ in range(k - 1):\n\t\tx = heappop(q)\n\t\theappush(q, x // 2)\n\t\theappush(q, x - x // 2)\n\treturn n - heappop(q)\n\ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tb = list(map(int, input().split()))\n\tx = sorted(zip(a, b))\n\tprint(*[x[i][0] for i in range(n)])\nmain()\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "import sys\nfrom heapq import *\nfrom math import *\n\ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tb = list(map(int, input().split()))\n\ta.sort(reverse=True)\n\tb.sort()\n\tb = b + [10 ** 10]\n\tans = []\n\ti = 0\n\tj = 0\n\twhile len(ans) < n:\n\t\tif a[i] >= b[j]:\n\t\t\tans.append(a[i])\n\t\t\ti += 1\n\t\telse:\n\t\t\tans.append(b[j])\n\t\t\tj += 1\n\tprint(' '.join(map(str, ans)))\n\nmain()\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "import sys\nimport heapq\ninput = sys.stdin.readline\n(n, a, b) = (int(input()), list(map(int, input().split())), list(map(int, input().split())))\np = []\nfor (x, y) in zip(a, b):\n\theapq.heappush(p, x - y)\nfor i in range(n):\n\tprint(heapq.heappop(p) + heapq.heappop(p), end=' ')\n \n\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n \n\n \n \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "import sys\ninput = sys.stdin.readline\n\ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tb = list(map(int, input().split()))\n\ta.sort()\n\tb.sort()\n\ta_ = []\n\tb_ = []\n\tfor i in range(n):\n\t\tif i % 2 == 0:\n\t\t\ta_.append(a[i])\n\t\telse:\n\t\t\tb_.append(a[i])\n\tfor i in range(n):\n\t\tif i % 2 == 0:\n\t\t\ta_.append(b[i])\n\t\telse:\n\t\t\tb_.append(b[i])\n\tprint(' '.join(map(str, a_)))\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "import sys\ninput = sys.stdin.readline\nm = int(input())\na = sorted(map(int, input().split()))\nb = sorted(map(int, input().split()))\nprint(*[a[i] for i in sorted(range(m), key=lambda i: (a[i] + b[i]) * (-1))])\n \n\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n",
            "from collections import Counter\n(n, a, b) = (int(input()), Counter(map(int, input().split())), Counter(map(int, input().split())))\nfor x in sorted(a.keys()):\n\twhile a[x] and b[x]:\n\t\ta[x] -= 1\n\t\tb[x] -= 1\nprint(*sorted(a.elements()))\n \n\ndef solve():\n\tn = int(input())\n\tA = sorted(map(int, input().split()))\n\tB = sorted(map(int, input().split()))\n\tans = []\n\tfor (x, y) in zip(A, B):\n\t\tans.append(x if x >= y else y)\n\tprint(*ans)\nsolve()\n \n\ndef solve():\n\tn = int(input())\n\tA = sorted(map(int, input().split()))\n\tB = sorted(map(int, input().split()))\n\tans = []\n\tfor (x, y) in zip(A, B):\n\t\tans.append(x if x >= y else y)\n\tprint(*ans)\nsolve()\n \n\ndef solve():\n\tn = int(input())\n\tA = sorted(map(int, input().split()))\n\tB = sorted(map(int, input().split()))\n\tans = []\n\tfor (x, y) in zip(A, B):\n\t\tans.append(x if x >= y else y)\n\tprint(*ans)\nsolve()\n \n\ndef solve():\n\tn = int(input())\n\tA = sorted(map(int, input().split()))\n\tB = sorted(map(int, input().split()))\n\tans = []\n\tfor (x, y) in zip(A, B):\n\t\tans.append(x if x >= y else y)\n\tprint(*ans)\nsolve()\n \n\ndef solve():\n\tn = int(input())\n\tA = sorted(map(int, input().split()))\n\tB = sorted(map(int, input().split()))\n\tans = []\n\tfor (x, y) in zip(A, B):\n\t\tans.append(x if x >= y else y)\n\tprint(*ans)\nsolve()\n \n\ndef solve():\n\tn = int(input())\n\tA = sorted(map(int, input().split()))\n\tB = sorted(map(int, input().split()))\n\tans = []\n\tfor (x, y) in zip(A, B):\n\t\tans.append(x if x >= y else y)\n\tprint(*ans)\nsolve()\n \n\ndef solve():\n\tn = int(input())\n\tA = sorted(map(int, input().split()))\n\tB = sorted(map(int, input().split()))\n\tans = []\n\tfor (x, y) in zip(A, B):\n\t\tans.append(x if x >= y else y)\n\tprint(*ans)\nsolve()\n \n\ndef solve():\n\tn = int(input())\n\tA = sorted(map(int, input().split()))\n\tB = sorted(map(int, input().split()))\n\tans = []\n\tfor (x, y) in zip(A, B):\n\t\tans.append(x if x >= y else y)\n\tprint(*ans)\nsolve()\n \n\ndef solve():\n",
            "import heapq\n(m,) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = [(a[i], b[i]) for i in range(m)]\nc.sort()\nb.sort()\nh = []\nfor i in range(m):\n\theapq.heappush(h, c[i][0] - b[i])\nfor i in range(m):\n\tprint(c[i][0] - heapq.heappop(h), end=' ')\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "from bisect import bisect_left as bl\nfrom sys import stdin as st\n(m, *l) = map(int, st.read().split())\nk = [0] + [1] * m\nfor i in range(m):\n\tk[i + 1] += k[i]\na = sorted(l[::2])\nb = sorted(l[1::2])\ns = sum((bl(a, b[i]) * b[i] for i in range(m)))\nfor i in range(m):\n\tif bl(a, b[i]) - bl(b, b[i]) > 0:\n\t\ts += b[i]\n\t\ta.pop(bl(a, b[i]) - 1)\n\t\tb.pop(i)\nprint(*a)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "import sys\ninput = sys.stdin.readline\n\ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tb = list(map(int, input().split()))\n\ta.sort()\n\tb.sort()\n\tans = []\n\tfor i in range(n):\n\t\tans.append(a[i] if a[i] > b[i] else b[i])\n\tprint(*ans)\nmain()\n \n \n \n \n \n \n \n \n\n \n \n \n\n \n \n \n \n \n \n \n \n \n\n \n \n \n \n \n \n \n \n\n \n \n \n \n \n \n \n \n\n \n \n \n \n \n \n \n \n \n \n\n \n \n \n \n \n \n \n \n \n \n \n\n \n \n \n \n \n \n \n \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n \n \n \n \n \n \n \n \n\n \n \n \n \n \n \n \n \n \n\n \n \n \n \n \n \n \n \n \n \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "def main():\n\t(n, *a) = map(int, open(0).read().split())\n\tprint(*sorted(a, reverse=True))\nmain()\n \nmain()\n \n\ndef main():\n\tinput()\n\tprint(*sorted(map(int, input().split()), reverse=True))\nmain()\n \nmain()\n \n\ndef main():\n\tinput()\n\tprint(*sorted(map(int, input().split()), reverse=True))\nmain()\n \nmain()\n \n\ndef main():\n\tinput()\n\tprint(*sorted(map(intruction, input().split()), reverse=True))\nmain()\n \nmain()\n \n\ndef main():\n\tinput()\n\tprint(*sorted(map(intruction, input().split()), reverse=True))\nmain()\n \nmain()\n \n\ndef main():\n\tinput()\n\tprint(*sorted(map(intruction, input().split()), reverse=True))\nmain()\n \nmain()\n \n\ndef main():\n\tinput()\n\tprint(*sorted(map(intruction, input().split()), reverse=True))\nmain()\n \nmain()\n \n\ndef main():\n\tinput()\n\tprint(*sorted(map(intruction, input().split()), reverse=True))\nmain()\n \nmain()\n \n\ndef main():\n\tinput()\n\tprint(*sorted(map(intruction, input().split()), reverse=True))\nmain()\n \nmain()\n \n\ndef main():\n\tinput()\n\tprint(*sorted(map(intruction, input().split()), reverse=True))\nmain()\n \nmain()\n \n\ndef main():\n\tinput()\n\tprint(*sorted(map(intruction, input().split()), reverse=True))\nmain()\n \nmain()\n \n\ndef main():\n\tinput()\n\tprint(*sorted(map(intruction, input().split()), reverse=True))\nmain()\n \nmain()\n \n\ndef main():\n\tinput()\n\tprint(*sorted(map(intruction, input().split()), reverse=True))\nmain()\n \nmain()\n \n\ndef main():\n\tinput()\n\tprint(*sorted(map(intruction, input().split()), reverse=True))\nmain()\n \nmain()\n \n\ndef main():\n\tinput()\n\tprint(*sorted(map(intruction, input().split()), reverse=True))\nmain()\n \nmain()\n \n\ndef main():\n\tinput()\n\tprint(*sorted(map(intruction, input().split()), reverse=True))\nmain()\n \nmain()\n \n\ndef main():\n\tinput()\n\tprint(*sorted(map(intruction, input().split()), reverse=True))\nmain()\n \nmain()\n \n\ndef main():\n\tinput()\n\tprint(*sorted(map(intruction, input().split()), reverse=True))\nmain()\n \nmain()\n \n\ndef main():\n\tinput()\n\tprint(*sorted(map(intruction, input().split()), reverse=True))\nmain()\n \nmain()\n \n\ndef main():\n\tinput()\n\tprint(*sorted(map(intruction, input().split()), reverse=True))\nmain()\n \nmain()\n \n\ndef main():\n\tinput()\n\tprint(*sorted",
            "import bisect\nm = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\np = sorted(((x, i) for (i, x) in enumerate(a)))\nfor i in range(m):\n\tx = bisect.bisect_right(p, (b[i], m))\n\t(p[x][0], p[x - 1][0]) = (p[x - 1][0], p[x][0])\nprint(' '.join((str(x[0]) for x in p)))\n \n\ndef f(n, k):\n\treturn 0\n\n\ndef solve(n, k):\n\treturn 0\n \n\ndef main():\n\tm = int(input())\n\ta = list(map(int, input().split()))\n\tb = list(map(int, input().split()))\n\ta = sorted(a)\n\tb = sorted(b)\n\tans = []\n\tfor i in range(m):\n\t\tans.append(a.pop())\n\t\ta.insert(bisect.bisect_right(a, b[i]), ans[-1])\n\tprint(*ans)\nmain()\n \n\ndef f(n, k):\n\treturn (n + 1) // 2\n\n\ndef solve(n, k):\n\treturn f(n, k) * k\n\n\ndef main():\n\tm = int(input())\n\ta = list(map(int, input().split()))\n\tb = list(map(int, input().split()))\n\ta = sorted(a)\n\tb = sorted(b)\n\tans = []\n\tfor i in range(m):\n\t\tans.append(a.pop())\n\t\ta.insert(bisect.bisect_right(a, b[i]), ans[-1])\n\tprint(*ans)\nmain()\n \n\ndef f(n, k):\n\treturn (n + 1) // 2\n\n\ndef solve(n, k):\n\treturn f(n, k) * k\n\n\ndef main():\n\tm = int(input())\n\ta = list(map(int, input().split()))\n\tb = list(map(int, input().split()))\n\ta = sorted(a)\n\tb = sorted(b)\n\tans = []\n\tfor i in range(m):\n\t\tans.append(a.pop())\n\t\ta.insert(bisect.bisect_right(a, b[i]), ans[-1])\n\tprint(*ans)\nmain()\n \n\ndef f(n, k):\n\treturn (n + 1) // 2\n\n\ndef solve(n, k):\n\treturn f(n, k) * k\n\n\ndef main():\n\tm = int(input())\n\ta = list(map(int, input().split()))\n\tb = list(map(int, input().split()))\n\ta = sorted(a)\n\tb = sorted(b)\n\tans = []\n\tfor i in range(m):\n\t\tans.append(a.pop())\n\t\ta.insert(bisect.bisect_right(a, b[i]), ans[-1])\n\tprint(*ans)\nmain()\n \n\ndef f(n, k):\n\treturn (n + 1) // 2\n\n\ndef solve(n, k):\n\treturn f(n, k) * k",
            "import heapq\nimport sys\ninput = sys.stdin.readline\nm = int(input())\nA = [int(x) for x in input().split()]\nB = [int(x) for x in input().split()]\nB = sorted(((b, i) for (i, b) in enumerate(B)))\nheap = []\nans = [0] * m\nfor a in sorted(A):\n\theapq.heappush(heap, (-a, a))\n\tfor (b, i) in B:\n\t\tif a >= b:\n\t\t\t(tmp, a) = heapq.heappop(heap)\n\t\t\tans[i] = a\n\t\t\tbreak\n\telse:\n\t\t(tmp, a) = heapq.heappop(heap)\nprint(*ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "import heapq\n(m, a, b) = (int(input()), list(map(int, input().split())), list(map(int, input().split())))\nh = []\nfor i in range(m):\n\theapq.heappush(h, (a[i], b[i]))\nfor i in range(m):\n\t(x, y) = heapq.heappop(h)\n\tprint(x, end=' ')\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "import heapq\nimport itertools\nimport math\nimport operator\nimport sys\ninput = sys.stdin.readline\n\ndef main():\n\tn = int(input())\n\tA = list(map(int, input().split()))\n\tB = list(map(int, input().split()))\n\ta = []\n\tb = []\n\tfor i in range(n):\n\t\ta.append((A[i], B[i]))\n\t\tb.append((B[i], A[i]))\n\ta.sort(key=lambda x: x[0])\n\tb.sort(key=lambda x: x[0])\n\ta = list(map(lambda x: x[1], a))\n\tb = list(map(lambda x: x[1], b))\n\tx = 0\n\ty = 0\n\tfor i in range(n):\n\t\tx += a[i] * i\n\t\ty += b[i] * i\n\tprint(*a)\nmain()\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "from collections import Counter\nfrom operator import itemgetter\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = Counter(a)\nd = [(c[a[i]], a[i], b[i]) for i in range(n)]\nd.sort(reverse=True)\nres = [0] * n\nfor (x, y, z) in d:\n\tres[y - 1] = z\nfor x in res:\n\tprint(x, end=' ')\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "import sys\nfrom collections import Counter\ninput = sys.stdin.readline\nm = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\na.sort()\nb.sort()\ni = 0\nj = 0\nc = Counter()\nans = 0\nwhile i < m:\n\tif a[i] >= b[j]:\n\t\tc[a[i]] += 1\n\t\tans += a[i]\n\t\tj += 1\n\ti += 1\nprint(*[ans - sum(c.values()) + x for x in c.values()])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "import sys\n\ndef main():\n\tread = sys.stdin.readline\n\tm = int(read())\n\tA = [int(x) for x in read().split()]\n\tB = [int(x) for x in read().split()]\n\tA.sort()\n\tB.sort()\n\tprint(' '.join((str(A[i] if i < m else A[-1]) for i in B)))\nmain()\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "import sys\ninput = sys.stdin.readline\n\ndef f(n, k):\n\treturn n if k == 1 else 0.5 * (n + f(n - 1, k - 1))\n\nm = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nA.sort()\nB.sort()\nB.reverse()\nfor i in range(m):\n\tA[i] = A[i] + B[i]\nA.sort()\nA.reverse()\nfor i in range(m):\n\tprint(A[i], end=' ')\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "import sys\nfrom math import *\nfrom collections import *\nfrom heapq import *\nfrom bisect import *\nfrom io import StringIO\n\ndef solve():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tb = list(map(int, input().split()))\n\ta.sort()\n\tb.sort()\n\tfor i in range(n):\n\t\ta[i] = (a[i], b[i])\n\ta.sort()\n\tans = 0\n\tfor i in range(n):\n\t\tans += (a[i][0] + a[i][1]) / 2\n\tprint(*[x[0] for x in a], sep=' ')\n\tprint(ans)\nsolve()\n \n\ndef __starting_point():\n\tsolve()\n\n__starting_point()\n \n\ndef solve():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tb = list(map(int, input().split()))\n\ta.sort()\n\tb.sort()\n\tfor i in range(n):\n\t\ta[i] = (a[i], b[i])\n\ta.sort()\n\tans = 0\n\tfor i in range(n):\n\t\tans += (a[i][0] + a[i][1]) / 2\n\tprint(*[x[0] for x in a], sep=' ')\n\tprint(ans)\nsolve()\n \n\ndef __starting_point():\n\tsolve()\n\n__starting_point()\n \n\ndef solve():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tb = list(map(int, input().split()))\n\ta.sort()\n\tb.sort()\n\tfor i in range(n):\n\t\ta[i] = (a[i], b[i])\n\ta.sort()\n\tans = 0\n\tfor i in range(n):\n\t\tans += (a[i][0] + a[i][1]) / 2\n\tprint(*[x[0] for x in a], sep=' ')\n\tprint(ans)\nsolve()\n \n\ndef __starting_point():\n\tsolve()\n\n__starting_point()\n \n\ndef solve():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tb = list(map(int, input().split()))\n\ta.sort()\n\tb.sort()\n\tfor i in range(n):\n\t\ta[i] = (a[i], b[i])\n\ta.sort()\n\tans = 0\n\tfor i in range(n):\n\t\tans += (a[i][0] + a[i][1]) / 2\n\tprint(*[x[0] for x in a], sep=' ')\n\tprint(ans)\nsolve()\n \n\ndef __starting_point():\n\tsolve()\n\n__starting_point()\n \n\ndef solve():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tb = list(map(int, input().split()))\n\ta.sort()\n\tb.sort()\n\tfor i in range(n):\n\t\ta[i] = (a[i],",
            "import sys\nfrom collections import Counter\ninput = sys.stdin.readline\n\ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tb = list(map(int, input().split()))\n\tc = Counter(a)\n\ta.sort()\n\tb.sort()\n\ti = j = 0\n\tans = []\n\twhile i < n:\n\t\twhile j < n and a[i] >= b[j]:\n\t\t\tj += 1\n\t\tans.append(a[i])\n\t\tif c[a[i]]:\n\t\t\tc[a[i]] -= 1\n\t\telse:\n\t\t\tans.pop()\n\t\t\tans.append(b[j])\n\t\t\tj += 1\n\t\ti += 1\n\tprint(*ans)\nmain()\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n "
        ]
    },
    {
        "task_id": 33,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: I wonder, does the falling rain\n\nForever yearn for it's disdain?\n\nEffluvium of the Mind\n\nYou are given a positive integer $n$.\n\nFind any permutation $p$ of length $n$ such that the sum $\\operatorname{lcm}(1,p_1) + \\operatorname{lcm}(2, p_2) + \\ldots + \\operatorname{lcm}(n, p_n)$ is as large as possible.\n\nHere $\\operatorname{lcm}(x, y)$ denotes the least common multiple (LCM) of integers $x$ and $y$.\n\nA permutation is an array consisting of $n$ distinct integers from $1$ to $n$ in arbitrary order. For example, $[2,3,1,5,4]$ is a permutation, but $[1,2,2]$ is not a permutation ($2$ appears twice in the array) and $[1,3,4]$ is also not a permutation ($n=3$ but there is $4$ in the array).\n\n\n-----Input-----\n\nEach test contains multiple test cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 1000$). Description of the test cases follows.\n\nThe only line for each test case contains a single integer $n$ ($1 \\le n \\le 10^5$).\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $10^5$.\n\n\n-----Output-----\n\nFor each test case print $n$ integers $p_1$, $p_2$, $\\ldots$, $p_n$ \u2014 the permutation with the maximum possible value of $\\operatorname{lcm}(1,p_1) + \\operatorname{lcm}(2, p_2) + \\ldots + \\operatorname{lcm}(n, p_n)$.\n\nIf there are multiple answers, print any of them.\n\n\n-----Examples-----\n\nInput\n2\n1\n2\nOutput\n1 \n2 1\n\n\n-----Note-----\n\nFor $n = 1$, there is only one permutation, so the answer is $[1]$.\n\nFor $n = 2$, there are two permutations:\n\n$[1, 2]$ \u2014 the sum is $\\operatorname{lcm}(1,1) + \\operatorname{lcm}(2, 2) = 1 + 2 = 3$.\n\n$[2, 1]$ \u2014 the sum is $\\operatorname{lcm}(1,2) + \\operatorname{lcm}(2, 1) = 2 + 2 = 4$. \n\n### Response:\n",
        "output": [
            "for s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*range(1, n + 1))\n \n\n\n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2:]:\n\tn = int(s)\n\tprint(*range(n, 0, -1))\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n",
            "for s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*range(n, 0, -1))\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n",
            "for s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*range(1, n + 1)[::-1] if n & 1 else range(1, n + 1)[::-2] + range(2, n + 1)[::2])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "t = int(input())\nfor i in range(t):\n\tn = int(input())\n\tif n % 2:\n\t\tprint(n, end=' ')\n\tfor j in range(n // 2):\n\t\tprint(j + 1, end=' ')\n\t\tprint(n - j, end=' ')\n\tprint()\n \n \n\n \n\n \n\n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n\n ",
            "for s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*[i + 1 for i in range(n)][::-1])\n \n\n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*(range(n, 0, -1) if n % 2 == 0 else range(n + 1, 0, -1)))\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n",
            "for _ in range(int(input())):\n\tn = int(input())\n\tprint(*range(n, 0, -1))\n \n\n",
            "for s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*[i + 1 for i in range(n)][::-1])\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n",
            "for s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*(n - i for i in range(n)))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in [*open(0)][1:]:\n\tn = int(_)\n\tprint(*[i + 1 for i in range(n)])\n \n\n \n\n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*((i + 1 for i in range(n))) if n % 2 == 0 else (*(i + 1 for i in range(n // 2)), 2, *(i for i in range(n // 2))))\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n",
            "I = input\nfor _ in [0] * int(I()):\n\tn = int(I())\n\tprint(*range(1, n + 1)[::-1], sep=' ')\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][1:]:\n\tprint(*range(1, int(s) + 1)[::-1])\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n",
            "for s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*((n - i) for i in range(n)))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*range(1, n + 1), *range(n - 1, 0, -1))\n \n \nfor s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(n, *range(n - 1, 0, -1))\n \n \nfor s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(n, n - 1, *range(n - 2, 0, -1))\n \n \nfor s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*range(n, 0, -1), *range(1, n))\n \n \nfor s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*range(n, 0, -1), *range(n - 1, 0, -1))\n \n \nfor s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*range(n, 0, -1), *range(n - 1, 0, -1))\n \n \nfor s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*range(n, 0, -1), *range(n - 1, 0, -1))\n \n \nfor s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*range(n, 0, -1), *range(n - 1, 0, -1))\n \n \nfor s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*range(n, 0, -1), *range(n - 1, 0, -1))\n \n \nfor s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*range(n, 0, -1), *range(n - 1, 0, -1))\n \n \nfor s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*range(n, 0, -1), *range(n - 1, 0, -1))\n \n \nfor s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*range(n, 0, -1), *range(n - 1, 0, -1))\n \n \nfor s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*range(n, 0, -1), *range(n - 1, 0, -1))\n \n \nfor s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*range(n, 0, -1), *range(n - 1, 0, -1))\n \n \nfor s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*range(n, 0, -1), *range(n - 1, 0, -1))\n \n \nfor s in [*open(0)][",
            "for s in [*open(0)][2::2]:\n\tprint(*range(1, int(s) + 1))\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n",
            "for s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*range(1, n + 1)[::-1])\n \n \nfor s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*range(1, n + 1)[::-1])\n \n \nfor s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*range(1, n + 1)[::-1])\n \n \nfor s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*range(1, n + 1)[::-1])\n \n \nfor s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*range(1, n + 1)[::-1])\n \n \nfor s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*range(1, n + 1)[::-1])\n \n \nfor s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*range(1, n + 1)[::-1])\n \n \nfor s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*range(1, n + 1)[::-1])\n \n \nfor s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*range(1, n + 1)[::-1])\n \n \nfor s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*range(1, n + 1)[::-1])\n \n \nfor s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*range(1, n + 1)[::-1])\n \n \nfor s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*range(1, n + 1)[::-1])\n \n \nfor s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*range(1, n + 1)[::-1])\n \n \nfor s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*range(1, n + 1)[::-1])\n \n \nfor s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*range(1, n + 1)[::-1])\n \n \nfor s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*range(1, n + 1)[::-1])\n \n \nfor s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*range(1, n + 1)[::-1])\n \n \nfor s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*range(1, n + 1)[::-1])\n \n \nfor s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*range(1, n + 1)[::-1])\n \n \nfor s",
            "for s in [*open(0)][1:]:\n\tn = int(s)\n\tprint(*(range(1, n + 1)[::-1] if n % 2 else range(1, n + 1))[::-1])\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n ",
            "for _ in range(int(input())):\n\tn = int(input())\n\tprint(*(list(range(1, n + 1)) + [1]))\n \n \nfor _ in range(int(input())):\n\tn = int(input())\n\tprint(*[n, 1])\n \nfor _ in range(int(input())):\n\tn = int(input())\n\tprint(*list(range(1, n)) + [n, 1])\n \nfor _ in range(int(input())):\n\tn = int(input())\n\tprint(*list(range(1, n)) + [n, 1])\n \nfor _ in range(int(input())):\n\tn = int(input())\n\tprint(*list(range(1, n)) + [n, 1])\n \nfor _ in range(int(input())):\n\tn = int(input())\n\tprint(*list(range(1, n)) + [n, 1])\n \nfor _ in range(int(input())):\n\tn = int(input())\n\tprint(*list(range(1, n)) + [n, 1])\n \nfor _ in range(int(input())):\n\tn = int(input())\n\tprint(*list(range(1, n)) + [n, 1])\n \nfor _ in range(int(input())):\n\tn = int(input())\n\tprint(*list(range(1, n)) + [n, 1])\n \nfor _ in range(int(input())):\n\tn = int(input())\n\tprint(*list(range(1, n)) + [n, 1])\n \nfor _ in range(int(input())):\n\tn = int(input())\n\tprint(*list(range(1, n)) + [n, 1])\n \nfor _ in range(int(input())):\n\tn = int(input())\n\tprint(*list(range(1, n)) + [n, 1])\n \nfor _ in range(int(input())):\n\tn = int(input())\n\tprint(*list(range(1, n)) + [n, 1])\n \nfor _ in range(int(input())):\n\tn = int(input())\n\tprint(*list(range(1, n)) + [n, 1])\n \nfor _ in range(int(input())):\n\tn = int(input())\n\tprint(*list(range(1, n)) + [n, 1])\n \nfor _ in range(int(input())):\n\tn = int(input())\n\tprint(*list(range(1, n)) + [n, 1])\n \nfor _ in range(int(input())):\n\tn = int(input())\n\tprint(*list(range(1, n)) + [n, 1])\n \nfor _ in range(int(input())):\n\tn = int(input())\n\tprint(*list(range(1, n)) + [n, 1])\n \nfor _ in range(int(input())):\n\tn = int(input())\n\tprint(*list(range(1, n)) + [n, 1])\n \nfor _ in range(int(input())):\n\tn = int(input())\n\tprint(*list(range(1, n)) + [n, 1])\n \nfor _ in range(int("
        ]
    },
    {
        "task_id": 34,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: You are given a list of $n$ integers. You can perform the following operation: you choose an element $x$ from the list, erase $x$ from the list, and subtract the value of $x$ from all the remaining elements. Thus, in one operation, the length of the list is decreased by exactly $1$.\n\nGiven an integer $k$ ($k>0$), find if there is some sequence of $n-1$ operations such that, after applying the operations, the only remaining element of the list is equal to $k$.\n\n\n-----Input-----\n\nThe input consists of multiple test cases. The first line contains a single integer $t$ ($1 \\leq t \\leq 10^4$) \u2014 the number of test cases. Description of the test cases follows.\n\nThe first line of each test case contains two integers $n$ and $k$ ($2 \\leq n \\leq 2\\cdot 10^5$, $1 \\leq k \\leq 10^9$), the number of integers in the list, and the target value, respectively.\n\nThe second line of each test case contains the $n$ integers of the list $a_1, a_2, \\ldots, a_n$ ($-10^9 \\leq a_i \\leq 10^9$).\n\nIt is guaranteed that the sum of $n$ over all test cases is not greater that $2 \\cdot 10^5$.\n\n\n-----Output-----\n\nFor each test case, print YES if you can achieve $k$ with a sequence of $n-1$ operations. Otherwise, print NO.\n\nYou may print each letter in any case (for example, \"YES\", \"Yes\", \"yes\", \"yEs\" will all be recognized as a positive answer).\n\n\n-----Examples-----\n\nInput\n4\n4 5\n4 2 2 7\n5 4\n1 9 1 3 4\n2 17\n17 0\n2 17\n18 18\nOutput\nYES\nNO\nYES\nNO\n\n\n-----Note-----\n\nIn the first example we have the list $\\{4, 2, 2, 7\\}$, and we have the target $k = 5$. One way to achieve it is the following: first we choose the third element, obtaining the list $\\{2, 0, 5\\}$. Next we choose the first element, obtaining the list $\\{-2, 3\\}$. Finally, we choose the first element, obtaining the list $\\{5\\}$. \n\n### Response:\n",
        "output": [
            "for s in [*open(0)][2::2]:\n\tk, *a = map(int, s.split())\n\tprint('YNEOS'[max(a) > k or any((x - k in a for x in a))::2])\n \n \nfor s in [*open(0)][2::2]:\n\tk, *a = map(int, s.split())\n\tprint('YNEOS'[max(a) > k or any((x - k in a for x in a))::2])\n \n \nfor s in [*open(0)][2::2]:\n\tk, *a = map(int, s.split())\n\tprint('YNEOS'[max(a) > k or any((x - k in a for x in a))::2])\n \n \nfor s in [*open(0)][2::2]:\n\tk, *a = map(int, s.split())\n\tprint('YNEOS'[max(a) > k or any((x - k in a for x in a))::2])\n \n \nfor s in [*open(0)][2::2]:\n\tk, *a = map(int, s.split())\n\tprint('YNEOS'[max(a) > k or any((x - k in a for x in a))::2])\n \n \nfor s in [*open(0)][2::2]:\n\tk, *a = map(int, s.split())\n\tprint('YNEOS'[max(a) > k or any((x - k in a for x in a))::2])\n \n \nfor s in [*open(0)][2::2]:\n\tk, *a = map(int, s.split())\n\tprint('YNEOS'[max(a) > k or any((x - k in a for x in a))::2])\n \n \nfor s in [*open(0)][2::2]:\n\tk, *a = map(int, s.split())\n\tprint('YNEOS'[max(a) > k or any((x - k in a for x in a))::2])\n \n \nfor s in [*open(0)][2::2]:\n\tk, *a = map(int, s.split())\n\tprint('YNEOS'[max(a) > k or any((x - k in a for x in a))::2])\n \n \nfor s in [*open(0)][2::2]:\n\tk, *a = map(int, s.split())\n\tprint('YNEOS'[max(a) > k or any((x - k in a for x in a))::2])\n \n \nfor s in [*open(0)][2::2]:\n\tk, *a = map(int, s.split())\n\tprint('YNEOS'[max(a) > k or any((x - k in a for x in a))::2])\n \n \nfor s in [*open(0)][2::2]:\n\tk, *a = map(int, s.split())\n\tprint('YNEOS'[max(a) > k or any((x - k in a for x in a))::2])\n \n \nfor s in [*open(0)][2::2]:\n\tk, *a",
            "for s in [*open(0)][2::2]:\n\ta = list(map(int, s.split()))\n\tprint('YNEOS'[min(a) > max(a) - sum(a) % 2::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = list(map(int, s.split()))\n\tprint('YNEOS'[min(a) > max(a) - sum(a) % 2::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = list(map(int, s.split()))\n\tprint('YNEOS'[min(a) > max(a) - sum(a) % 2::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = list(map(int, s.split()))\n\tprint('YNEOS'[min(a) > max(a) - sum(a) % 2::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = list(map(int, s.split()))\n\tprint('YNEOS'[min(a) > max(a) - sum(a) % 2::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = list(map(int, s.split()))\n\tprint('YNEOS'[min(a) > max(a) - sum(a) % 2::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = list(map(int, s.split()))\n\tprint('YNEOS'[min(a) > max(a) - sum(a) % 2::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = list(map(int, s.split()))\n\tprint('YNEOS'[min(a) > max(a) - sum(a) % 2::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = list(map(int, s.split()))\n\tprint('YNEOS'[min(a) > max(a) - sum(a) % 2::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = list(map(int, s.split()))\n\tprint('YNEOS'[min(a) > max(a) - sum(a) % 2::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = list(map(int, s.split()))\n\tprint('YNEOS'[min(a) > max(a) - sum(a) % 2::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = list(map(int, s.split()))\n\tprint('YNEOS'[min(a) > max(a) - sum(a) % 2::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = list(map(int, s.split()))\n\tprint('YNEOS'[min(a) > max(a) - sum(a) % 2::2",
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint('YNEOS'[max(a) != min(a)::2])\n \n \nfor _ in range(int(input())):\n\tn, k = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tprint('YNEOS'[k in a::2])\n \nfor _ in range(int(input())):\n\tn, k = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tprint('YNEOS'[k in a::2])\n \nfor _ in range(int(input())):\n\tn, k = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tprint('YNEOS'[k in a::2])\n \nfor _ in range(int(input())):\n\tn, k = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tprint('YNEOS'[k in a::2])\n \nfor _ in range(int(input())):\n\tn, k = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tprint('YNEOS'[k in a::2])\n \nfor _ in range(int(input())):\n\tn, k = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tprint('YNEOS'[k in a::2])\n \nfor _ in range(int(input())):\n\tn, k = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tprint('YNEOS'[k in a::2])\n \nfor _ in range(int(input())):\n\tn, k = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tprint('YNEOS'[k in a::2])\n \nfor _ in range(int(input())):\n\tn, k = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tprint('YNEOS'[k in a::2])\n \nfor _ in range(int(input())):\n\tn, k = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tprint('YNEOS'[k in a::2])\n \nfor _ in range(int(input())):\n\tn, k = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tprint('YNEOS'[k in a::2])\n \nfor _ in range(int(input())):\n\tn, k = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tprint('YNEOS'[k in a::2])\n \nfor _ in range(int(input())):\n\tn, k = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tprint('YNEOS'[k in a::2])\n \nfor _ in range(int(input())):\n\tn, k =",
            "for s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[sum(a) % a[-1] != a[0]::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[sum(a) % a[-1] != a[0]::2])\n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[sum(a) % a[-1] != a[0]::2])\n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(intructionion(int, s.split()))\n\tprint('YNEOS'[sum(a) % a[-1] != a[0]::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[sum(a) % a[-1] != a[0]::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[sum(a) % a[-1] != a[0]::2])\n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[sum(a) % a[-1] != a[0]::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[sum(a) % a[-1] != a[0]::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[sum(a) % a[-1] != a[0]::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[sum(a) % a[-1] != a[0]::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[sum(a) % a[-1] != a[0]::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[sum(a) % a[-1] != a[0]::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[sum(a) % a[-1] != a[0]::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(",
            "for _ in range(int(input())):\n\t(n, k) = map(int, input().split())\n\tl = list(map(int, input().split()))\n\tl.sort()\n\ti = 0\n\twhile i < n - 1 and l[i] < k:\n\t\tk -= l[i]\n\t\ti += 1\n\tprint('YES' if i == n - 1 and l[i] == k else 'NO')\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\t(n, k) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\ts = sum(a)\n\tif s < k:\n\t\tprint('NO')\n\telif s == k:\n\t\tprint('YES')\n\telse:\n\t\ta.sort()\n\t\tfor i in range(n):\n\t\t\tk -= a[i]\n\t\t\tif k < 0:\n\t\t\t\tbreak\n\t\tprint('YES' if k == 0 else 'NO')\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\t(n, k) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tprint('YNEOS'[max(a) != k or sum(map(abs, a)) % 2 != k % 2 :: 2])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\t(n, k) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tb = a[0]\n\tfor i in range(1, n):\n\t\tb = min(b, a[i] - a[i - 1])\n\tprint('YNEOS'[b > k::2])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\t(n, k) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tprint('YNEOS'[a[0] > k or (sum(a) - k) % 2])\n \n \nfor _ in range(int(input())):\n\t(n, k) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tprint('YNEOS'[a[0] > k or (sum(a) - k) % 2])\n \n \nfor _ in range(int(input())):\n\t(n, k) = map(intruction.split())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tprint('YNEOS'[a[0] > k or (sum(a) - k) % 2])\n \n \nfor _ in range(int(input())):\n\t(n, k) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tprint('YNEOS'[a[0] > k or (sum(a) - k) % 2])\n \n \nfor _ in range(int(input())):\n\t(n, k) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tprint('YNEOS'[a[0] > k or (sum(a) - k) % 2])\n \n \nfor _ in range(int(input())):\n\t(n, k) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tprint('YNEOS'[a[0] > k or (sum(a) - k) % 2])\n \n \nfor _ in range(int(input())):\n\t(n, k) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tprint('YNEOS'[a[0] > k or (sum(a) - k) % 2])\n \n \nfor _ in range(int(input())):\n\t(n, k) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tprint('YNEOS'[a[0] > k or (sum(a) - k) % 2])\n \n \nfor _ in range(int(input())):\n\t(n, k) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tprint('YNEOS'[a[0] > k or (sum(a) - k) % 2])\n \n \nfor _ in range(int(input())):\n\t(n, k) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tprint('YNEOS'[a[0] > k or (sum(a) - k) % 2])\n \n \nfor _ in range(int(input())):\n\t(n, k) = map(int,",
            "R = lambda : map(int, input().split())\n(t,) = R()\nfor _ in [0] * t:\n\t(n, k) = R()\n\ta = sorted(R())\n\tif a[-1] == k:\n\t\tprint('NO')\n\t\tcontinue\n\ti = n - 1\n\twhile i >= 0 and a[i] > k:\n\t\tk -= a[i]\n\t\ti -= 1\n\tprint(['NO', 'YES'][i == -1])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\t(n, k) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tx = sum(a)\n\ty = k\n\tz = x - y\n\tif z % n != 0:\n\t\tprint('NO')\n\telse:\n\t\tz //= n\n\t\tprint('YES' if z in a else 'NO')\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\t(n, k) = map(int, input().split())\n\tl = list(map(int, input().split()))\n\ts = sum(l)\n\tif s < k:\n\t\tprint('NO')\n\telif s == k:\n\t\tprint('YES')\n\telse:\n\t\tprint('NO' if (s - k) % n else 'YES')\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\t(n, k) = map(int, input().split())\n\tl = list(map(int, input().split()))\n\tif min(l) > k:\n\t\tprint('NO')\n\t\tcontinue\n\tl.sort()\n\tn -= 1\n\tfor i in range(n):\n\t\tif l[i] <= k:\n\t\t\tk -= l[i]\n\t\telse:\n\t\t\tprint('NO')\n\t\t\tbreak\n\telse:\n\t\tif k == 0:\n\t\t\tprint('YES')\n\t\telse:\n\t\t\tprint('NO')\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint('YNEOS'[abs(sum(a) - a[0]) % a[0]::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint('YNEOS'[abs(sum(a) - a[0]) % a[0]::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint('YNEOS'[abs(sum(a) - a[0]) % a[0]::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint('YNEOS'[abs(sum(a) - a[0]) % a[0]::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint('YNEOS'[abs(sum(a) - a[0]) % a[0]::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint('YNEOS'[abs(sum(a) - a[0]) % a[0]::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint('YNEOS'[abs(sum(a) - a[0]) % a[0]::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint('YNEOS'[abs(sum(a) - a[0]) % a[0]::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint('YNEOS'[abs(sum(a) - a[0]) % a[0]::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint('YNEOS'[abs(sum(a) - a[0]) % a[0]::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint('YNEOS'[abs(sum(a) - a[0]) % a[0]::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint('YNEOS'[abs(sum(a) - a[0]) % a[0]::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = [*map(int, s.split())]\n\tprint('YNEOS'[abs(sum(a) - a[0]) % a[0]::2",
            "for _ in range(int(input())):\n\t(n, k) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tprint('YNEOS'[min(a) > k or k - min(a) > sum((abs(i) % 2 for i in a))::2])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[sum(a) != a[0]::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[sum(a) != a[0]::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[sum(a) != a[0]::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[sum(a) != a[0]::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[sum(a) != a[0]::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[sum(a) != a[0]::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[sum(a) != a[0]::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[sum(a) != a[0]::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[sum(a) != a[0]::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[sum(a) != a[0]::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[sum(a) != a[0]::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[sum(a) != a[0]::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[sum(a) != a[0]::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[sum(a) != a[0]::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\t",
            "for s in [*open(0)][2::2]:\n\tprint(('YNEOS'[sum(map(int, s.split())) % 2::2])[2 * int(s[0])::2])\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\t(n, k) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\ti = 0\n\twhile i < n and a[i] < 0:\n\t\ti += 1\n\tj = 0\n\twhile j < i and k > 0:\n\t\tk -= a[j]\n\t\tj += 1\n\tif k == 0 and j == i:\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[a[-1] - sum(a)::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[a[-1] - sum(a)::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[a[-1] - sum(a)::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[a[-1] - sum(a)::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[a[-1] - sum(a)::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[a[-1] - sum(a)::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[a[-1] - sum(a)::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[a[-1] - sum(a)::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[a[-1] - sum(a)::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[a[-1] - sum(a)::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[a[-1] - sum(a)::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[a[-1] - sum(a)::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[a[-1] - sum(a)::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[a[-1] - sum(a)::2])\n \n \nfor s in [*open(0)][2::2]:\n\ta = sorted(map(int, s.split()))\n\tprint('YNEOS'[a[-1] - sum(",
            "for _ in range(int(input())):\n\t(n, k) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\td = {}\n\tfor x in a:\n\t\td[x] = d.get(x, 0) + 1\n\tif k in d:\n\t\tprint('YES')\n\telif k in d and k + k in d and (d[k] + d[k + k] > 1):\n\t\tprint('YES')\n\telif k in d and k - k in d and (d[k] + d[k - k] > 1):\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n"
        ]
    },
    {
        "task_id": 35,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: The Saratov State University Olympiad Programmers Training Center (SSU OPTC) has n students. For each student you know the number of times he/she has participated in the ACM ICPC world programming championship. According to the ACM ICPC rules, each person can participate in the world championship at most 5 times.\n\nThe head of the SSU OPTC is recently gathering teams to participate in the world championship. Each team must consist of exactly three people, at that, any person cannot be a member of two or more teams. What maximum number of teams can the head make if he wants each team to participate in the world championship with the same members at least k times?\n\n\n-----Input-----\n\nThe first line contains two integers, n and k (1 \u2264 n \u2264 2000;\u00a01 \u2264 k \u2264 5). The next line contains n integers: y_1, y_2, ..., y_{n} (0 \u2264 y_{i} \u2264 5), where y_{i} shows the number of times the i-th person participated in the ACM ICPC world championship.\n\n\n-----Output-----\n\nPrint a single number \u2014 the answer to the problem.\n\n\n-----Examples-----\nInput\n5 2\n0 4 5 1 0\n\nOutput\n1\n\nInput\n6 4\n0 1 2 3 4 5\n\nOutput\n0\n\nInput\n6 5\n0 0 0 0 0 0\n\nOutput\n2\n\n\n\n-----Note-----\n\nIn the first sample only one team could be made: the first, the fourth and the fifth participants.\n\nIn the second sample no teams could be created.\n\nIn the third sample two teams could be created. Any partition into two teams fits. \n\n### Response:\n",
        "output": [
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nprint(sum((x >= k for x in a)) // 3)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nprint(min(sum((i >= k for i in a)) // 3, sum((i >= k for i in a))))\n \n\ndef main():\n\t(n, k) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tprint(min(sum((i >= k for i in a)) // 3, sum((i >= k for i in a))))\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef main():\n\t(n, k) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tprint(min(sum((i >= k for i in a)) // 3, sum((i >= k for i in a))))\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef main():\n\t(n, k) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tprint(min(sum((i >= k for i in a)) // 3, sum((i >= k for i in a))))\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef main():\n\t(n, k) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tprint(min(sum((i >= k for i in a)) // 3, sum((i >= k for i in a))))\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef main():\n\t(n, k) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tprint(min(sum((i >= k for i in a)) // 3, sum((i >= k for i in a))))\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef main():\n\t(n, k) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tprint(min(sum((i >= k for i in a)) // 3, sum((i >= k for i in a))))\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef main():\n\t(n, k) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tprint(min(sum((i >= k for i in a)) // 3, sum((i >= k for i in a))))\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef main():\n\t(n, k) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tprint(min(sum((i >= k for i in a)) // 3, sum((i >= k for i in a))))\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef main():\n\t(n, k) = map",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\na = a[::-1]\ns = 0\ni = 0\nwhile i < n and a[i] >= k:\n\ti += 1\nprint(i // 3)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nprint(sum((x >= k for x in a)) // 3)\n \n\n\n",
            "(n, k) = map(int, input().split())\nprint(sum((a >= k for a in map(int, input().split()))))\n \n\ndef solve():\n\t(n, k) = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tans = 0\n\tfor i in range(n):\n\t\tif a[i] >= k:\n\t\t\tans += 1\n\tprint(ans)\n \n\nsolve()\n \n\ndef solve():\n\t(n, k) = map(int, input().split())\n\ta = [int(x) for x in input().split()]\n\tprint(sum((x >= k for x in a)))\n \n\nsolve()\n \n\ndef solve():\n\t(n, k) = map(int, input().split())\n\tprint(sum((int(x) >= k for x in input().split())))\n \n\nsolve()\n \n\ndef solve():\n\t(n, k) = map(int, input().split())\n\tprint(sum((x >= k for x in map(int, input().split()))))\n \n\nsolve()\n \n\ndef solve():\n\t(n, k) = map(int, input().split())\n\tprint(sum((int(x) >= k for x in input().split())))\n \n\nsolve()\n \n\ndef solve():\n\t(n, k) = map(int, input().split())\n\tprint(sum((x >= k for x in input().split())))\n \n\nsolve()\n \n\ndef solve():\n\t(n, k) = map(int, input().split())\n\tprint(sum((int(x) >= k for x in input().split())))\n \n\nsolve()\n \n\ndef solve():\n\t(n, k) = map(int, input().split())\n\tprint(sum((int(x) >= k for x in input().split())))\n \n\nsolve()\n \n\ndef solve():\n\t(n, k) = map(int, input().split())\n\tprint(sum((int(x) >= k for x in input().split())))\n \n\nsolve()\n \n\ndef solve():\n\t(n, k) = map(int, input().split())\n\tprint(sum((int(x) >= k for x in input().split())))\n \n\nsolve()\n \n\ndef solve():\n\t(n, k) = map(int, input().split())\n\tprint(sum((int(x) >= k for x in input().split())))\n \n\nsolve()\n \n\ndef solve():\n\t(n, k) = map(int, input().split())\n\tprint(sum((int(x) >= k for x in input().split())))\n \n\nsolve()\n \n\ndef solve():\n\t(n, k) = map(int, input().split())\n\tprint(sum((int(x) >= k for x in input().split())))\n \n\nsolve()\n \n\ndef solve():\n\t(n, k) = map(int, input().split())\n\tprint(sum((int(x) >= k for x in input().split())))\n \n\nsolve()\n \n\ndef solve():\n\t(n, k) = map(int, input().split())\n\tprint(sum((int(x) >= k for x in input().split())))",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\na.sort(reverse=True)\nprint(sum(a) // 3 // k)\n \n\nreturn 0\n \n\nn = int(input())\na = list(map(int, input().split()))\na.sort(reverse=True)\nprint(sum(a) // 3)\n \n\nn = int(input())\na = list(map(int, input().split()))\na.sort(reverse=True)\nprint(sum(a) // 3)\n \n\nn = int(input())\na = list(map(int, input().split()))\na.sort(reverse=True)\nprint(sum(a) // 3)\n \n\nn = int(input())\na = list(map(int, input().split()))\na.sort(reverse=True)\nprint(sum(a) // 3)\n \n\nn = int(input())\na = list(map(int, input().split()))\na.sort(reverse=True)\nprint(sum(a) // 3)\n \n\nn = int(input())\na = list(map(int, input().split()))\na.sort(reverse=True)\nprint(sum(a) // 3)\n \n\nn = int(input())\na = list(map(int, input().split()))\na.sort(reverse=True)\nprint(sum(a) // 3)\n \n\nn = int(input())\na = list(map(int, input().split()))\na.sort(reverse=True)\nprint(sum(a) // 3)\n \n\nn = int(input())\na = list(map(int, input().split()))\na.sort(reverse=True)\nprint(sum(a) // 3)\n \n\nn = int(input())\na = list(map(int, input().split()))\na.sort(reverse=True)\nprint(sum(a) // 3)\n \n\nn = int(input())\na = list(map(int, input().split()))\na.sort(reverse=True)\nprint(sum(a) // 3)\n \n\nn = int(input())\na = list(map(int, input().split()))\na.sort(reverse=True)\nprint(sum(a) // 3)\n \n\nn = int(input())\na = list(map(int, input().split()))\na.sort(reverse=True)\nprint(sum(a) // 3)\n \n\nn = int(input())\na = list(map(int, input().split()))\na.sort(reverse=True)\nprint(sum(a) // 3)\n \n\nn = int(input())\na = list(map(int, input().split()))\na.sort(reverse=True)\nprint(sum(a) // 3)\n \n\nn = int(input())\na = list(map(int, input().split()))\na.sort(reverse=True)\nprint(sum(a) // 3)\n \n\nn = int(input())\na = list(map(int, input().split()))\na.sort(reverse=True)\nprint(sum(a",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nprint(sum(i >= k for i in a) // 3)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nprint(sum(i >= k for i in a) // 3)\n \n\n\n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "(n, k) = map(int, input().split())\nl = list(map(int, input().split()))\nprint(sum(min(i, k) for i in l) // 3)\n \n \ninput = __builtins__.input\n \n \ndef main():\n\t(n, k) = map(int, input().split())\n\tl = list(map(int, input().split()))\n\tprint(sum(min(i, k) for i in l) // 3)\nmain()\n \n \n__starting_point = main\n \n__starting_point()\n \ninput = __builtins__.input\n \ndef main():\n\t(n, k) = map(int, input().split())\n\tl = list(map(int, input().split()))\n\tprint(sum(min(i, k) for i in l) // 3)\nmain()\n \n__startingruction = main\n \n__starting_point()\n \ninput = __builtins__.input\n(n, k) = map(int, input().split())\nl = list(map(int, input().split()))\nprint(sum(min(i, k) for i in l) // 3)\n \n__starting_point = main\n \n__starting_point()\n \ninput = __builtins__.input\n(n, k) = map(int, input().split())\nl = list(map(int, input().split()))\nprint(sum(min(i, k) for i in l) // 3)\n \n__starting_point = main\n \n__starting_point()\n \ninput = __builtins__.input\n(n, k) = map(int, input().split())\nl = list(map(int, input().split()))\nprint(sum(min(i, k) for i in l) // 3)\n \n__starting_point = main\n \n__starting_point()\n \ninput = __builtins__.input\n(n, k) = map(int, input().split())\nl = list(map(int, input().split()))\nprint(sum(min(i, k) for i in l) // 3)\n \n__starting_point = main\n \n__starting_point()\n \ninput = __builtins__.input\n(n, k) = map(int, input().split())\nl = list(map(int, input().split()))\nprint(sum(min(i, k) for i in l) // 3)\n \n__starting_point = main\n \n__starting_point()\n \ninput = __builtins__.input\n(n, k) = map(int, input().split())\nl = list(map(int, input().split()))\nprint(sum(min(i, k) for i in l) // 3)\n \n__starting_point = main\n \n__starting_point()\n \ninput = __builtins__.input\n(n, k) = map(int, input().split())\nl = list(map(int, input().split()))\nprint(sum(min(i, k) for i in l) // 3)\n \n__starting_point = main\n \n__starting_point()\n \ninput = __builtins__.input\n(n, k) = map(int, input().",
            "(n, k) = map(int, input().split())\nl = list(map(int, input().split()))\nprint(sum(i >= k for i in l) // 3)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nprint(sum((x >= k for x in a)) // 3)\n \n\nreturn\n ",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\ncnt = [0] * 6\nfor i in a:\n\tcnt[i] += 1\nans = 0\nans += min(cnt[0], cnt[1])\nans += min(cnt[0], cnt[2])\nans += min(cnt[0], cnt[3])\nans += min(cnt[0], cnt[4])\nans += min(cnt[0], cnt[5])\ncnt[0] = max(0, cnt[0] - ans)\ncnt[1] = max(0, cnt[1] - ans)\ncnt[2] = max(0, cnt[2] - ans)\ncnt[3] = max(0, cnt[3] - ans)\ncnt[4] = max(0, cnt[4] - ans)\ncnt[5] = max(0, cnt[5] - ans)\ncnt[2] = min(cnt[2], cnt[1])\ncnt[3] = min(cnt[3], cnt[1])\ncnt[4] = min(cnt[4], cnt[1])\ncnt[5] = min(cnt[5], cnt[1])\ncnt[3] = min(cnt[3], cnt[2])\ncnt[4] = min(cnt[4], cnt[2])\ncnt[5] = min(cnt[5], cnt[2])\ncnt[4] = min(cnt[4], cnt[3])\ncnt[5] = min(cnt[5], cnt[3])\ncnt[5] = min(cnt[5], cnt[4])\nans += cnt[5]\ncnt[4] = max(0, cnt[4] - cnt[5])\ncnt[3] = max(0, cnt[3] - cnt[4])\ncnt[2] = max(0, cnt[2] - cnt[3])\ncnt[1] = max(0, cnt[1] - cnt[2])\ncnt[0] = max(0, cnt[0] - cnt[1])\nans += cnt[4] // 2\ncnt[3] = max(0, cnt[3] - cnt[4] // 2 * 2)\ncnt[2] = max(0, cnt[2] - cnt[3] // 2 * 2)\ncnt[1] = max(0, cnt[1] - cnt[2] // 2 * 2)\ncnt[0] = max(0, cnt[0] - cnt[1] // 2 * 2)\nans += cnt[3] // 3\ncnt[2] = max(0, cnt[2] - cnt[3] // 3 * 3)\ncnt[1] = max(0, cnt[1] - cnt[2] // 3 * 3)\ncnt[0] = max(0, cnt[0] - cnt[1] // 3 * 3)\nans += cnt[2] // 5\ncnt[1]",
            "(n, k) = map(int, input().split())\nprint(sum(map(lambda x: x >= k, map(int, input().split()))))\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n\n\n \n",
            "(n, k) = map(int, input().split())\nprint(sum(min(5, x) >= k for x in map(int, input().split())) // 3)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nprint(sum(min(5, x) >= k for x in a) // 3)\n \n \ninput = __builtin__.input\n \ndef read_int():\n\treturn int(input())\n \ndef read_ints():\n\treturn [int(x) for x in input().split()]\n \ndef read_list():\n\treturn [int(input()) for _ in range(read_int())]\n \ndef read_lists():\n\treturn [read_ints() for _ in range(read_int())]\n \ndef main():\n\t(n, k) = read_ints()\n\ta = read_ints()\n\tprint(sum((min(x, 5) >= k for x in a)) // 3)\nmain()\n \nmain()\n \ninput = read_int\n \ndef main():\n\t(n, k) = (input(), input())\n\tprint(sum((min(5, i) >= k for i in read_ints())) // 3)\nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()\n \nmain()",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nprint(min(a.count(i) // 3 for i in range(k)))\n \n \nsolve = lambda : (n, k) = map(int, input().split()); a = list(map(int, input().split())); print(min(a.count(i) // 3 for i in range(k)))\n \nsolve()\n \n__import__('sys').setrecursionlimit(1 << 30)\n(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nprint(min(a.count(i) // 3 for i in range(k)))\n \n \n__import__('sys').setrecursionlimit(1 << 30)\n(n, k) = map(intruction, input().split())\na = list(map(int, input().split()))\nprint(min(a.count(i) // 3 for i in range(k)))\n \n__import__('sys').setrecursionlimit(1 << 30)\n(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nprint(min(a.count(i) // 3 for i in range(k)))\n \n__import__('sys').setrecursionlimit(1 << 30)\n(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nprint(min(a.count(i) // 3 for i in range(k)))\n \n__import__('sys').setrecursionlimit(1 << 30)\n(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nprint(min(a.count(i) // 3 for i in range(k)))\n \n__import__('sys').setrecursionlimit(1 << 30)\n(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nprint(min(a.count(i) // 3 for i in range(k)))\n \n__import__('sys').setrecursionlimit(1 << 30)\n(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nprint(min(a.count(i) // 3 for i in range(k)))\n \n__import__('sys').setrecursionlimit(1 << 30)\n(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nprint(min(a.count(i) // 3 for i in range(k)))\n \n__import__('sys').setrecursionlimit(1 << 30)\n(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nprint(min(a.count(i) // 3 for i in range(k)))\n \n__import__('sys').setrecursionlimit(1 << 30)\n(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nprint(min(a.count(i) // 3 for i in",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\ncnt = [0] * 6\nfor x in a:\n\tcnt[x] += 1\nans = 0\nfor i in range(k):\n\tans += min(cnt[i], cnt[5 - i])\n\tans += min(cnt[i], cnt[5 - i] // 2 * 2)\n\tans += min(cnt[i + 1], cnt[4 - i] // 2 * 2)\n\tans += min(cnt[i + 1], cnt[4 - i])\nprint(ans // 3)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nprint(sum(a) // 3 // k)\n \n\n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "(n, k) = map(int, input().split())\na = sorted(map(int, input().split()))\nprint(sum(a) // 3 // k)\n \n\n",
            "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nprint(sum((min(x, 5 - k) for x in a)) // (5 - k))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n "
        ]
    },
    {
        "task_id": 36,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: You have two positive integers $a$ and $b$.\n\nYou can perform two kinds of operations:\n\n$a = \\lfloor \\frac{a}{b} \\rfloor$ (replace $a$ with the integer part of the division between $a$ and $b$)\n\n$b=b+1$ (increase $b$ by $1$)\n\nFind the minimum number of operations required to make $a=0$.\n\n\n-----Input-----\n\nThe first line contains a single integer $t$ ($1 \\le t \\le 100$) \u2014 the number of test cases.\n\nThe only line of the description of each test case contains two integers $a$, $b$ ($1 \\le a,b \\le 10^9$).\n\n\n-----Output-----\n\nFor each test case, print a single integer: the minimum number of operations required to make $a=0$.\n\n\n-----Examples-----\n\nInput\n6\n9 2\n1337 1\n1 1\n50000000 4\n991026972 997\n1234 5678\nOutput\n4\n9\n2\n12\n3\n1\n\n\n-----Note-----\n\nIn the first test case, one of the optimal solutions is:\n\nDivide $a$ by $b$. After this operation $a = 4$ and $b = 2$.\n\nDivide $a$ by $b$. After this operation $a = 2$ and $b = 2$.\n\nIncrease $b$. After this operation $a = 2$ and $b = 3$.\n\nDivide $a$ by $b$. After this operation $a = 0$ and $b = 3$. \n\n### Response:\n",
        "output": [
            "for s in [*open(0)][1:]:\n\t(a, b) = map(int, s.split())\n\tprint(sum(((a - 1) // b, b - 1)) + 1)\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n ",
            "for _ in [0] * int(input()):\n\t(a, b) = map(int, input().split())\n\tprint(a // b + (a % b > 0))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][1:]:\n\t(a, b) = map(int, s.split())\n\tprint(sum((a // b - 1, b - a % b)))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][1:]:\n\t(a, b) = map(int, s.split())\n\tprint(sum((a // b, a % b - 1)))\n \n \nfor s in [*open(0)][1:]:\n\t(a, b) = map(int, s.split())\n\tprint((a - 1) // b + (a > 0))\n \n \nfor s in [*open(0)][1:]:\n\t(a, b) = map(int, s.split())\n\tprint(a + (b - 1) - 1)\n \n \nfor s in [*open(0)][1:]:\n\t(a, b) = map(int, s.split())\n\tprint(max((1, (a - 1) // b)))\n \n \nfor s in [*open(0)][1:]:\n\t(a, b) = map(int, s.split())\n\tprint((a + b - 1) // b)\n \n \nfor s in [*open(0)][1:]:\n\t(a, b) = map(int, s.split())\n\tprint(a + (b - 1) - 1)\n \n \nfor s in [*open(0)][1:]:\n\t(a, b) = map(int, s.split())\n\tprint((a - 1) // b + (a > 0))\n \n \nfor s in [*open(0)][1:]:\n\t(a, b) = map(int, s.split())\n\tprint(sum((a // b, a % b - 1)))\n \n \nfor s in [*open(0)][1:]:\n\t(a, b) = map(int, s.split())\n\tprint((a - 1) // b + (a > 0))\n \n \nfor s in [*open(0)][1:]:\n\t(a, b) = map(int, s.split())\n\tprint(a + (b - 1) - 1)\n \n \nfor s in [*open(0)][1:]:\n\t(a, b) = map(int, s.split())\n\tprint(max((1, (a - 1) // b)))\n \n \nfor s in [*open(0)][1:]:\n\t(a, b) = map(int, s.split())\n\tprint((a + b - 1) // b)\n \n \nfor s in [*open(0)][1:]:\n\t(a, b) = map(int, s.split())\n\tprint(a + (b - 1) - 1)\n \n \nfor s in [*open(0)][1:]:\n\t(a, b) = map(int, s.split())\n\tprint((a - 1) // b + (a > 0))\n \n \nfor s in [*open(0)][1:]:\n\t(a, b) = map(int, s.split())\n\tprint(sum((a // b, a % b - 1)))\n \n \nfor s in [*open(0)][1:]:\n\t(a, b) = map(int, s.split())\n\tprint((a - 1) // b + (a > 0))\n \n \nfor s in [*open(0)][",
            "for _ in range(int(input())):\n\t(a, b) = map(int, input().split())\n\tans = 0\n\twhile a > 0:\n\t\tif a >= b:\n\t\t\tans += a // b\n\t\t\ta %= b\n\t\tb += 1\n\tprint(ans)\n \n \nfor _ in range(int(input())):\n\t(a, b) = map(int, input().split())\n\tans = 0\n\twhile a > 0:\n\t\tif a >= b:\n\t\t\tans += a // b\n\t\t\ta %= b\n\t\tb += 1\n\tprint(ans)\n \nfor _ in range(int(input())):\n\t(a, b) = map(int, input().split())\n\tans = 0\n\twhile a > 0:\n\t\tif a >= b:\n\t\t\tans += a // b\n\t\t\ta %= b\n\t\tb += 1\n\tprint(ans)\n \nfor _ in range(int(input())):\n\t(a, b) = map(int, input().split())\n\tans = 0\n\twhile a > 0:\n\t\tif a >= b:\n\t\t\tans += a // b\n\t\t\ta %= b\n\t\tb += 1\n\tprint(ans)\n \nfor _ in range(int(input())):\n\t(a, b) = map(int, input().split())\n\tans = 0\n\twhile a > 0:\n\t\tif a >= b:\n\t\t\tans += a // b\n\t\t\ta %= b\n\t\tb += 1\n\tprint(ans)\n \nfor _ in range(int(input())):\n\t(a, b) = map(int, input().split())\n\tans = 0\n\twhile a > 0:\n\t\tif a >= b:\n\t\t\tans += a // b\n\t\t\ta %= b\n\t\tb += 1\n\tprint(ans)\n \nfor _ in range(int(input())):\n\t(a, b) = map(int, input().split())\n\tans = 0\n\twhile a > 0:\n\t\tif a >= b:\n\t\t\tans += a // b\n\t\t\ta %= b\n\t\tb += 1\n\tprint(ans)\n \nfor _ in range(int(input())):\n\t(a, b) = map(int, input().split())\n\tans = 0\n\twhile a > 0:\n\t\tif a >= b:\n\t\t\tans += a // b\n\t\t\ta %= b\n\t\tb += 1\n\tprint(ans)\n \nfor _ in range(int(input())):\n\t(a, b) = map(int, input().split())\n\tans = 0\n\twhile a > 0:\n\t\tif a >= b:\n\t\t\tans += a // b\n\t\t\ta %= b\n\t\tb += 1\n\tprint(ans)\n \nfor _ in range(int(input())):\n\t(a, b) = map(int, input().split())\n\tans = 0\n\twhile a > 0:\n\t\tif a >= b:\n\t\t\tans += a // b\n\t\t\ta %= b\n\t\tb += 1\n\tprint(ans)\n \nfor _ in range(int(input())):\n\t(a, b) = map(int, input().split())\n\tans = 0\n\twhile a > 0:\n\t\tif a >= b:\n\t\t\tans += a // b\n\t\t\ta %=",
            "for _ in range(int(input())):\n\t(a, b) = map(int, input().split())\n\tans = 0\n\twhile a > 0:\n\t\tif a < b:\n\t\t\tb += 1\n\t\telse:\n\t\t\ta = a // b\n\t\tans += 1\n\tprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in [0] * int(input()):\n\t(a, b) = map(int, input().split())\n\tprint(sum((a // b for a in [a, b])))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\t(a, b) = map(int, input().split())\n\ti = 0\n\twhile a > 0:\n\t\tif a < b:\n\t\t\tb += a\n\t\t\ta = 0\n\t\telse:\n\t\t\tx = a // b\n\t\t\ta -= x * b\n\t\t\tb += 1\n\t\t\ti += x\n\tprint(i)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\t(a, b) = map(int, input().split())\n\tans = 0\n\twhile a:\n\t\tans += a // b\n\t\ta %= b\n\t\tif a == 0:\n\t\t\tbreak\n\t\ta += b\n\t\tb += 1\n\tprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for i in range(int(input())):\n\t(a, b) = map(int, input().split())\n\tans = 0\n\twhile a > 0:\n\t\tif a % b == 0:\n\t\t\ta /= b\n\t\t\tb += 1\n\t\telse:\n\t\t\tans += a % b\n\t\t\ta -= a % b\n\t\tans += 1\n\tprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\t(a, b) = map(int, input().split())\n\tans = 0\n\twhile a:\n\t\tif a >= b:\n\t\t\tans += a // b\n\t\t\ta %= b\n\t\tb += 1\n\tprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\t(a, b) = map(int, input().split())\n\tans = 0\n\twhile a > 0:\n\t\tif a % b > 0:\n\t\t\tans += a % b\n\t\t\ta = a // b\n\t\telse:\n\t\t\ta = a // b\n\t\t\tb += 1\n\t\tans += 1\n\tprint(ans)\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n",
            "for _ in range(int(input())):\n\t(a, b) = map(int, input().split())\n\tc = 0\n\twhile a > 0:\n\t\tx = a // b\n\t\ta = a - x * b\n\t\tb += 1\n\t\tc += x\n\tprint(c)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for i in range(int(input())):\n\t(a, b) = map(int, input().split())\n\tprint((a + b - 1) // b)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\t(a, b) = map(int, input().split())\n\tans = 0\n\twhile a:\n\t\twhile a >= b:\n\t\t\ta //= b\n\t\t\tans += 1\n\t\tb += 1\n\tprint(ans)\n \n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n",
            "for s in [*open(0)][1:]:\n\t(a, b) = map(int, s.split())\n\tprint(a // b + a % b)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][1:]:\n\t(a, b) = map(int, s.split())\n\tprint(sum((a // b - 1, a % b)))\n \n \nfor _ in range(int(input())):\n\t(a, b) = map(int, input().split())\n\tans = 0\n\twhile a > 0:\n\t\tans += a % b\n\t\ta //= b\n\tprint(ans)\n \nfor _ in range(int(input())):\n\t(a, b) = map(int, input().split())\n\tans = 0\n\twhile a > 0:\n\t\tans += a // b\n\t\ta %= b\n\tprint(ans)\n \nfor _ in range(int(input())):\n\t(a, b) = map(int, input().split())\n\tans = 0\n\twhile a >= b:\n\t\tans += a // b\n\t\ta %= b\n\tprint(ans)\n \nfor _ in range(int(input())):\n\t(a, b) = map(int, input().split())\n\tans = 0\n\twhile a > 0:\n\t\tans += a % b\n\t\ta //= b\n\tprint(ans)\n \nfor _ in range(int(input())):\n\t(a, b) = map(int, input().split())\n\tans = 0\n\twhile a >= b:\n\t\tans += a // b\n\t\ta %= b\n\tprint(ans)\n \nfor _ in range(int(input())):\n\t(a, b) = map(int, input().split())\n\tans = 0\n\twhile a > 0:\n\t\tans += a // b\n\t\ta %= b\n\tprint(ans)\n \nfor _ in range(int(input())):\n\t(a, b) = map(int, input().split())\n\tans = 0\n\twhile a > 0:\n\t\tans += a % b\n\t\ta //= b\n\tprint(ans)\n \nfor _ in range(int(input())):\n\t(a, b) = map(int, input().split())\n\tans = 0\n\twhile a >= b:\n\t\tans += a // b\n\t\ta %= b\n\tprint(ans)\n \nfor _ in range(int(input())):\n\t(a, b) = map(int, input().split())\n\tans = 0\n\twhile a > 0:\n\t\tans += a // b\n\t\ta %= b\n\tprint(ans)\n \nfor _ in range(int(input())):\n\t(a, b) = map(int, input().split())\n\tans = 0\n\twhile a > 0:\n\t\tans += a // b\n\t\ta %= b\n\tprint(ans)\n \nfor _ in range(int(input())):\n\t(a, b) = map(int, input().split())\n\tans = 0\n\twhile a >= b:\n\t\tans += a // b\n\t\ta %= b\n\tprint(ans)\n \nfor _ in range(int(input())):\n\t(a, b) = map(int, input().split())\n\tans = 0\n\twhile a > 0:\n\t\tans += a // b\n\t\ta %= b\n\tprint(ans)\n \nfor _ in range(int(input())):\n\t(a, b) = map",
            "for _ in range(int(input())):\n\t(a, b) = map(int, input().split())\n\tans = 0\n\twhile a:\n\t\tif a < b:\n\t\t\t(a, b) = (a + 1, b - 1)\n\t\tans += a // b\n\t\ta %= b\n\tprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][1:]:\n\t(a, b) = map(int, s.split())\n\tprint(sum((a // b for a in (a, b))) - 1)\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n",
            "for _ in range(int(input())):\n\t(a, b) = map(int, input().split())\n\ti = 0\n\twhile a > 0:\n\t\ti += a % b\n\t\ta //= b\n\t\tb += 1\n\tprint(i)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n "
        ]
    },
    {
        "task_id": 37,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: After a hard day Vitaly got very hungry and he wants to eat his favorite potato pie. But it's not that simple. Vitaly is in the first room of the house with n room located in a line and numbered starting from one from left to right. You can go from the first room to the second room, from the second room to the third room and so on \u2014 you can go from the (n - 1)-th room to the n-th room. Thus, you can go to room x only from room x - 1.\n\nThe potato pie is located in the n-th room and Vitaly needs to go there. \n\nEach pair of consecutive rooms has a door between them. In order to go to room x from room x - 1, you need to open the door between the rooms with the corresponding key. \n\nIn total the house has several types of doors (represented by uppercase Latin letters) and several types of keys (represented by lowercase Latin letters). The key of type t can open the door of type T if and only if t and T are the same letter, written in different cases. For example, key f can open door F.\n\nEach of the first n - 1 rooms contains exactly one key of some type that Vitaly can use to get to next rooms. Once the door is open with some key, Vitaly won't get the key from the keyhole but he will immediately run into the next room. In other words, each key can open no more than one door.\n\nVitaly realizes that he may end up in some room without the key that opens the door to the next room. Before the start his run for the potato pie Vitaly can buy any number of keys of any type that is guaranteed to get to room n.\n\nGiven the plan of the house, Vitaly wants to know what is the minimum number of keys he needs to buy to surely get to the room n, which has a delicious potato pie. Write a program that will help Vitaly find out this number.\n\n\n-----Input-----\n\nThe first line of the input contains a positive integer n (2 \u2264 n \u2264 10^5)\u00a0\u2014\u00a0the number of rooms in the house.\n\nThe second line of the input contains string s of length 2\u00b7n - 2. Let's number the elements of the string from left to right, starting from one. \n\nThe odd positions in the given string s contain lowercase Latin letters\u00a0\u2014\u00a0the types of the keys that lie in the corresponding rooms. Thus, each odd position i of the given string s contains a lowercase Latin letter \u2014 the type of the key that lies in room number (i + 1) / 2.\n\nThe even positions in the given string contain uppercase Latin letters \u2014 the types of doors between the rooms. Thus, each even position i of the given string s contains an uppercase letter \u2014 the type of the door that leads from room i / 2 to room i / 2 + 1.\n\n\n-----Output-----\n\nPrint the only integer \u2014 the minimum number of keys that Vitaly needs to buy to surely get from room one to room n.\n\n\n-----Examples-----\nInput\n3\naAbB\n\nOutput\n0\n\nInput\n4\naBaCaB\n\nOutput\n3\n\nInput\n5\nxYyXzZaZ\n\nOutput\n2 \n\n### Response:\n",
        "output": [
            "n = int(input())\ns = input()\nprint(sum((s[i].islower() and s[i + 1] == s[i].upper() for i in range(0, len(s), 2))))\n \n\n\n\n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "n = int(input())\ns = input()\nr = 0\nd = {}\nfor i in range(n - 1):\n\td[s[2 * i]] = d.get(s[2 * i], 0) + 1\nfor i in range(n - 1, 2 * n - 2):\n\tif s[i] in d:\n\t\td[s[i]] -= 1\n\t\tif d[s[i]] == 0:\n\t\t\tdel d[s[i]]\n\telse:\n\t\tr += 1\nprint(r)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "n = int(input())\na = input()\ns = ''.join(a[i] for i in range(len(a)) if i % 2 == 0)\nprint(n - len(set(s)))\n \n\n\n\nInput\n3\naAbB\n\nOutput\n0\n\nInput\n4\naBaCaB\n\nOutput\n3\n\nInput\n5\nxYyXzZaZ\n\nOutput\n2\n\nInput\n6\nqWwQwEwQ\n\nOutput\n3\n\nInput\n7\nqWwQwEwQw\n\nOutput\n4\n\nInput\n8\nqWwQwEwQwE\n\nOutput\n5\n\nInput\n9\nqWwQwEwQwEy\n\nOutput\n6\n\nInput\n10\nqWwQwEwQwEyY\n\nOutput\n7\n\nInput\n11\nqWwQwEwQwEyYy\n\nOutput\n8\n\nInput\n12\nqWwQwEwQwEyYyz\n\nOutput\n9\n\nInput\n13\nqWwQwEwQwEyYyzZ\n\nOutput\n10\n\nInput\n14\nqWwQwEwQwEyYyzZa\n\nOutput\n11\n\nInput\n15\nqWwQwEwQwEyYyzZaZ\n\nOutput\n12\n\nInput\n16\nqWwQwEwQwEyYyzZaZb\n\nOutput\n13\n\nInput\n17\nqWwQwEwQwEyYyzZaZbB\n\nOutput\n14\n\nInput\n18\nqWwQwEwQwEyYyzZaZbBc\n\nOutput\n15\n\nInput\n19\nqWwQwEwQwEyYyzZaZbBcC\n\nOutput\n16\n\nInput\n20\nqWwQwEwQwEyYyzZaZbBcCd\n\nOutput\n17\n\nInput\n21\nqWwQwEwQwEyYyzZaZbBcCdD\n\nOutput\n18\n\nInput\n22\nqWwQwEwQwEyYyzZaZbBcCdDf\n\nOutput\n19\n\nInput\n23\nqWwQwEwQwEyYyzZaZbBcCdDfF\n\nOutput\n20\n\nInput\n24\nqWwQwEwQwEyYyzZaZbBcCdDfFg\n\nOutput\n21\n\nInput\n25\nqWwQwEwQwEyYyzZaZbBcCdDfFgG\n\nOutput\n22\n\nInput\n26\nqWwQwEwQwEyYyzZaZbBcCdDfFgGh\n\nOutput\n23\n\nInput\n27\nqWwQwEwQwEyYyzZaZbBcCdDfFgGhH\n\nOutput\n24\n\nInput\n28\nqWwQwEwQ",
            "n = int(input())\ns = input()\na = set()\nfor i in range(1, n, 2):\n\ta.add(s[i * 2 - 2])\nprint(n - len(a))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "n = int(input())\ns = input()\n(a, b) = ([], [])\nfor i in range(n - 1):\n\tif i % 2:\n\t\tb.append(s[2 * i])\n\telse:\n\t\ta.append(s[2 * i])\na = sorted(a)\nb = sorted(b)\nk = 0\nfor (i, j) in zip(a, b):\n\tif i != j:\n\t\tk += 1\nprint(k)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "n = int(input())\ns = input()\nc = 0\nfor i in range(2 * n - 1, 0, -2):\n\tif s[i - 1].islower():\n\t\tc += 1\nprint(c)\n \n \ninput = __builtins__.input\n \nn = int(input())\ns = input()\nc = 0\nfor i in range(2 * n - 1, 0, -2):\n\tif s[i - 1].islower():\n\t\tc += 1\nprint(c)\n \nn = int(input())\ns = input()\nprint(sum((c.islower() for c in s[::2])))\n \nn = int(input())\ns = input()\nprint(sum((c.islower() for c in s[::2])))\n \nn = int(input())\ns = input()\nprint(sum((c.islower() for c in s[::2])))\n \nn = int(input())\ns = input()\nprint(sum((c.islower() for c in s[::2])))\n \nn = int(input())\ns = input()\nprint(sum((c.islower() for c in s[::2])))\n \nn = int(input())\ns = input()\nprint(sum((c.islower() for c in s[::2])))\n \nn = int(input())\ns = input()\nprint(sum((c.islower() for c in s[::2])))\n \nn = int(input())\ns = input()\nprint(sum((c.islower() for c in s[::2])))\n \nn = int(input())\ns = input()\nprint(sum((c.islower() for c in s[::2])))\n \nn = int(input())\ns = input()\nprint(sum((c.islower() for c in s[::2])))\n \nn = int(input())\ns = input()\nprint(sum((c.islower() for c in s[::2])))\n \nn = int(input())\ns = input()\nprint(sum((c.islower() for c in s[::2])))\n \nn = int(input())\ns = input()\nprint(sum((c.islower() for c in s[::2])))\n \nn = int(input())\ns = input()\nprint(sum((c.islower() for c in s[::2])))\n \nn = int(input())\ns = input()\nprint(sum((c.islower() for c in s[::2])))\n \nn = int(input())\ns = input()\nprint(sum((c.islower() for c in s[::2])))\n \nn = int(input())\ns = input()\nprint(sum((c.islower() for c in s[::2])))\n \nn = int(input())\ns = input()\nprint(sum((c.islower() for c in s[::2])))\n \nn = int(input())\ns = input()\nprint(sum((c.islower() for c in s[::2])))\n \nn = int(input())\ns = input()\nprint(sum((c.islower() for c in s[::2])))\n \nn = int(input())\ns =",
            "n = int(input())\ns = input()\nk = [0] * 26\nfor i in range(len(s) - 1, -1, -2):\n\tk[ord(s[i]) - 65] += 1\nprint(max(k))\n \n \ninput = __builtins__.input\nprint = __builtins__.print\n \nn = int(input())\ns = input()\nk = [0] * 26\nfor i in range(len(s) - 1, -1, -2):\n\tk[ord(s[i]) - 65] += 1\nprint(max(k))\n \n \n__import__('sys').setrecursionlimit(1 << 30)\ninput = __import__('sys').stdin.readline\nprint = __import__('sys').stdout.write\nn = int(input())\ns = input()\nc = [0] * 26\nfor i in range(len(s) - 1, -1, -2):\n\tc[ord(s[i]) - 65] += 1\nprint(str(max(c)))\n \n \nn = int(input())\ns = input()\nprint(max(map(len, s[::2])))\n \nn = int(input())\ns = input()\nprint(max(map(len, s[::2])))\n \nn = int(input())\ns = input()\nprint(max(map(len, s[::2])))\n \nn = int(input())\ns = input()\nprint(max(map(len, s[::2])))\n \nn = int(input())\ns = input()\nprint(max(map(len, s[::2])))\n \nn = int(input())\ns = input()\nprint(max(map(len, s[::2])))\n \nn = int(input())\ns = input()\nprint(max(map(len, s[::2])))\n \nn = int(input())\ns = input()\nprint(max(map(len, s[::2])))\n \nn = int(input())\ns = input()\nprint(max(map(len, s[::2])))\n \nn = int(input())\ns = input()\nprint(max(map(len, s[::2])))\n \nn = int(input())\ns = input()\nprint(max(map(len, s[::2])))\n \nn = int(input())\ns = input()\nprint(max(map(len, s[::2])))\n \nn = int(input())\ns = input()\nprint(max(map(len, s[::2])))\n \nn = int(input())\ns = input()\nprint(max(map(len, s[::2])))\n \nn = int(input())\ns = input()\nprint(max(map(len, s[::2])))\n \nn = int(input())\ns = input()\nprint(max(map(len, s[::2])))\n \nn = int(input())\ns = input()\nprint(max(map(len, s[::2])))\n \nn = int(input())\ns = input()\nprint(max(map(len, s[::2])))\n \nn =",
            "n = int(input())\ns = input()\nc = [0] * 26\nfor i in range(2 * n - 2):\n\tif i % 2 == 0:\n\t\tc[ord(s[i]) - ord('A')] += 1\n\telse:\n\t\tc[ord(s[i]) - ord('a')] += 1\nprint(sum((max(0, c[i] - c[i + 1]) for i in range(25))))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "n = int(input())\ns = input()\ns = s[::2]\nt = set()\nfor i in range(len(s)):\n\tif s[i] in t:\n\t\tt.remove(s[i])\n\telse:\n\t\tt.add(s[i])\nprint(len(t))\n \n \ninput = __builtins__.input\nprint = __builtins__.print\n \ndef solve():\n\tn = int(input())\n\ts = input()\n\tkeys = set()\n\tdoors = set()\n\tfor i in range(n - 1):\n\t\tdoors.add(s[i * 2])\n\t\tkeys.add(s[i * 2 + 1])\n\tprint(len(keys - doors))\nsolve()\n \n__ = solve()\n \n__ = print\n \n__ = input\n \n__ = solve\n \n__ = print\n \n__ = input\n \n__ = solve\n \n__ = print\n \n__ = input\n \n__ = solve\n \n__ = print\n \n__ = input\n \n__ = solve\n \n__ = print\n \n__ = input\n \n__ = solve\n \n__ = print\n \n__ = input\n \n__ = solve\n \n__ = print\n \n__ = input\n \n__ = solve\n \n__ = print\n \n__ = input\n \n__ = solve\n \n__ = print\n \n__ = input\n \n__ = solve\n \n__ = print\n \n__ = input\n \n__ = solve\n \n__ = print\n \n__ = input\n \n__ = solve\n \n__ = print\n \n__ = input\n \n__ = solve\n \n__ = print\n \n__ = input\n \n__ = solve\n \n__ = print\n \n__ = input\n \n__ = solve\n \n__ = print\n \n__ = input\n \n__ = solve\n \n__ = print\n \n__ = input\n \n__ = solve\n \n__ = print\n \n__ = input\n \n__ = solve\n \n__ = print\n \n__ = input\n \n__ = solve\n \n__ = print\n \n__ = input\n \n__ = solve\n \n__ = print\n \n__ = input\n \n__ = solve\n \n__ = print\n \n__ = input\n \n__ = solve\n \n__ = print\n \n__ = input\n \n__ = solve\n \n__ = print\n \n__ = input\n \n__ = solve\n \n__ = print\n \n__ = input\n \n__ = solve\n \n__ = print\n \n__ = input\n \n__ = solve\n \n__ = print\n \n__ = input\n \n__ = solve\n \n__ = print\n \n__ = input\n \n__ = solve\n \n__ = print\n \n__ = input\n \n__ = solve\n \n__ = print\n \n__ = input\n \n__ = solve\n \n__ = print\n \n__ = input\n \n__ = solve\n \n__ = print\n \n__ = input\n \n__ = solve\n \n__ = print\n \n__ = input\n \n__ = solve\n \n__ = print\n \n__ = input\n \n__ = solve\n \n__ = print\n \n__ = input\n \n__ =",
            "n = int(input())\ns = input()\ni = 0\nj = 0\nans = 0\nwhile i < 2 * n - 2:\n\tif s[i] == s[i + 1]:\n\t\ti += 2\n\telse:\n\t\tj = i + 1\n\t\twhile j < 2 * n - 2:\n\t\t\tif s[j] == s[j + 1]:\n\t\t\t\tj += 2\n\t\t\telse:\n\t\t\t\tbreak\n\t\tans += 1\n\t\ti = j + 1\nprint(ans)\n \n \nfor _ in range(int(input())):\n\tinput()\n\tprint(int(input()) - 1)\n \n \nfor _ in range(int(input())):\n\tprint(int(input()) - 1)\n \n \nfor _ in range(int(input())):\n\tprint(int(input()) - 1)\n \n \nfor _ in range(int(input())):\n\tprint(int(input()) - 1)\n \n \nfor _ in range(int(input())):\n\tprint(int(input()) - 1)\n \n \nfor _ in range(int(input())):\n\tprint(int(input()) - 1)\n \n \nfor _ in range(int(input())):\n\tprint(int(input()) - 1)\n \n \nfor _ in range(int(input())):\n\tprint(int(input()) - 1)\n \n \nfor _ in range(int(input())):\n\tprint(int(input()) - 1)\n \n \nfor _ in range(int(input())):\n\tprint(int(input()) - 1)\n \n \nfor _ in range(int(input())):\n\tprint(int(input()) - 1)\n \n \nfor _ in range(int(input())):\n\tprint(int(input()) - 1)\n \n \nfor _ in range(int(input())):\n\tprint(int(input()) - 1)\n \n \nfor _ in range(int(input())):\n\tprint(int(input()) - 1)\n \n \nfor _ in range(int(input())):\n\tprint(int(input()) - 1)\n \n \nfor _ in range(int(input())):\n\tprint(int(input()) - 1)\n \n \nfor _ in range(int(input())):\n\tprint(int(input()) - 1)\n \n \nfor _ in range(int(input())):\n\tprint(int(input()) - 1)\n \n \nfor _ in range(int(input())):\n\tprint(int(input()) - 1)\n \n \nfor _ in range(int(input())):\n\tprint(int(input()) - 1)\n \n \nfor _ in range(int(input())):\n\tprint(int(input()) - 1)\n \n \nfor _ in range(int(input())):\n\tprint(int(input()) - 1)\n \n \nfor _ in range(int(input())):\n\tprint(int(input()) - 1)\n \n \nfor _ in range(int(input())):\n\tprint(int(input()) - 1)\n \n \nfor _ in range(int(input())):\n\tprint(int(input()) - ",
            "n = int(input())\ns = input()\nkeys = 0\nfor i in range(0, len(s), 2):\n\tif s[i] == s[i + 1]:\n\t\tkeys += 1\nprint(keys)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "n = int(input())\ns = input()\nr = dict()\nfor i in range(n - 1):\n\tr[s[2 * i]] = s[2 * i + 1]\nprint(n - len(set(r.values())))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "n = int(input())\ns = input()\ni = 1\nj = 0\nwhile i < n:\n\tj += s[2 * i - 2].islower()\n\ti += 1\nprint(j)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "n = int(input())\ns = input()\nd = set()\nfor i in range(0, 2 * n - 2, 2):\n\tif s[i] in d:\n\t\td.remove(s[i])\n\telse:\n\t\td.add(s[i + 1])\nprint(len(d))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "n = int(input())\ns = input()\nl = set([])\nfor i in range(n - 1):\n\tl.add(s[2 * i])\nprint(len(l))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "n = int(input())\ns = input()\nans = 0\nc = set()\nfor i in range(n - 1):\n\tif s[2 * i] in c:\n\t\tans += 1\n\tc.add(s[2 * i + 1])\nprint(ans)\n \n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n \ninput = __builtin_open\n ",
            "n = int(input())\ns = input()\nr = [0] * 26\nfor i in range(n - 1):\n\tr[ord(s[i * 2]) - ord('a')] += 1\nprint(max(r) - n + 1)\n \n\n\n\nInput\n3\naAbB\n\nOutput\n0\n\nInput\n4\naBaCaB\n\nOutput\n3\n\nInput\n5\nxYyXzZaZ\n\nOutput\n2\n\nInput\n6\nyYyXzZaZw\n\nOutput\n2\n\nInput\n1\na\n\nOutput\n0\n\nInput\n2\nAa\n\nOutput\n1\n\nInput\n10\nabcdefghijklmnop\n\nOutput\n7\n\nInput\n10\nABCDEFGHIJKLMNOP\n\nOutput\n7\n\nInput\n10\naBcDeFgHiJkLmNoP\n\nOutput\n7\n\nInput\n10\nAaBbCcDdEeFfGgHh\n\nOutput\n7\n\nInput\n10\naAaAaAaAaAaAaAa\n\nOutput\n7\n\nInput\n10\nAaAaAaAaAaAaAaA\n\nOutput\n7\n\nInput\n10\naBcDeFgHiJkLmNoP\n\nOutput\n7\n\nInput\n10\naAaAaAaAaAaAaAa\n\nOutput\n7\n\nInput\n10\nAaBbCcDdEeFfGgHh\n\nOutput\n7\n\nInput\n10\nAaBbCcDdEeFfGgHh\n\nOutput\n7\n\nInput\n10\nAaBbCcDdEeFfGgHh\n\nOutput\n7\n\nInput\n10\nAaBbCcDdEeFfGgHh\n\nOutput\n7\n\nInput\n10\nAaBbCcDdEeFfGgHh\n\nOutput\n7\n\nInput\n10\nAaBbCcDdEeFfGgHh\n\nOutput\n7\n\nInput\n10\nAaBbCcDdEeFfGgHh\n\nOutput\n7\n\nInput\n10\nAaBbCcDdEeFfGgHh\n\nOutput\n7\n\nInput\n10\nAaBbCcDdEeFfGgHh\n\nOutput\n7\n\nInput\n10\nAaBbCcDdEeFfGgHh\n\nOutput\n7\n\nInput\n10\nAaBbCcDdEeFfGgHh\n\nOutput\n7\n\nInput\n10\nAaBbCcDdEeFfGgHh\n\nOutput\n7\n\nInput\n10\nAaBbCcDdEeFfGgHh\n\nOutput\n7\n\nInput\n10\nAaBbCcDdEeFfGgHh\n\nOutput\n7\n\nInput\n10\nAaBbCcDdEeFfGgHh\n\nOutput\n7\n\nInput\n10\nAaBbCcDdEe",
            "n = int(input())\ns = input()\ni = 1\nwhile i < n:\n\ti += 1\n\twhile i < n and s[2 * i - 1].lower() == s[2 * i - 2]:\n\t\ti += 1\nprint(i - 1)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "n = int(input())\ns = input()\n(a, b) = ({}, {})\nfor i in range(2 * n - 1):\n\tif i % 2:\n\t\ta[s[i]] = a.get(s[i], 0) + 1\n\telse:\n\t\tb[s[i]] = b.get(s[i], 0) + 1\n(c, d) = (0, 0)\nfor i in b:\n\tif i in a:\n\t\tc += min(a[i], b[i])\n\t\td += min(a[i], b[i])\n\t\ta[i] -= min(a[i], b[i])\n\t\tb[i] -= min(a[i], b[i])\nprint(sum(a.values()) - c + sum(b.values()) - d)\n \n\n\n\n \n\n \n\n \n\n \n \n \n \n\n \n \n \n\n \n \n \n\n \n \n \n \n\n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n \n \n \n \n\n ",
            "n = int(input())\ns = input()\nc = 0\nfor i in range(2 * n - 2):\n\tif i % 2 == 1 and s[i] == s[i + 1]:\n\t\tc += 1\nprint(c)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n "
        ]
    },
    {
        "task_id": 38,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: Read problems statements in Mandarin Chinese , Russian and Vietnamese as well. \n\nAkhil has many balls of white and black colors. One day, he was playing with them. During the play, he arranged the balls into two rows both consisting of N number of balls. These two rows of balls are given to you in the form of strings X, Y. Both these string consist of 'W' and 'B', where 'W' denotes a white colored ball and 'B' a black colored.\n\nOther than these two rows of balls, Akhil has an infinite supply of extra balls of each color. he wants to create another row of N balls, Z in such a way that the sum of hamming distance between X and Z, and hamming distance between Y and Z is maximized.\n\nHamming Distance between two strings X and Y is defined as the number of positions where the color of balls in row X differs from the row Y ball at that position. e.g. hamming distance between \"WBB\", \"BWB\" is 2, as at position 1 and 2, corresponding colors in the two strings differ..\n\nAs there can be multiple such arrangements of row Z, Akhil wants you to find the lexicographically smallest arrangement which will maximize the above value. \n\n------ Input ------ \n\nThe first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows:\nFirst line of each test case will contain a string X denoting the arrangement of balls in first row\nSecond line will contain the string Y denoting the arrangement of balls in second row.\n\n------ Output ------ \n\nFor each test case, output a single line containing the string of length N denoting the arrangement of colors of the balls belonging to row Z.\n\n------ Constraints ------ \n\n$1 \u2264 T \u2264 3$\n\n------ Subtasks ------ \n\nSubtask #1 (10 points) : 1 \u2264 N \u2264 16\nSubtask #2 (20 points) : 1 \u2264 N \u2264 10^{3}\nSubtask #3 (70 points) : 1 \u2264 N \u2264 10^{5}\n\n----- Sample Input 1 ------ \n1\nWBWB\nWBBB\n----- Sample Output 1 ------ \nBWBW\n----- explanation 1 ------ \nExample case 1. As we know, Hamming Distance(WBWB, BWBW) + Hamming Distance(WBBB, BWBW) = 4 + 3 = 7.\nYou can try any other value for string Z, it will never exceed 6. \n\n### Response:\n",
        "output": [
            "for _ in range(int(input())):\n\tX = input()\n\tY = input()\n\tans = ''\n\tfor i in range(len(X)):\n\t\tif X[i] == Y[i]:\n\t\t\tans += 'B'\n\t\telse:\n\t\t\tans += 'W'\n\tprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\tx = input()\n\ty = input()\n\tz = ''\n\tfor i in range(len(x)):\n\t\tif x[i] == y[i]:\n\t\t\tz += 'B'\n\t\telse:\n\t\t\tz += 'W'\n\tprint(z)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][1::2]:\n\tprint(s.translate(str.maketrans('WB', 'BW')))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\tx = input()\n\ty = input()\n\tn = len(x)\n\tprint(''.join(('B' if x[i] == y[i] else 'W') for i in range(n)))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "t = int(input())\nfor _ in range(t):\n\tx = input()\n\ty = input()\n\tz = ''\n\tfor i in range(len(x)):\n\t\tif x[i] == y[i]:\n\t\t\tz += 'B'\n\t\telse:\n\t\t\tz += 'W'\n\tprint(z)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\ta = input()\n\tb = input()\n\tprint(''.join(('B' if a[i] == 'W' and b[i] == 'B' else 'W' for i in range(len(a)))))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\tx = input()\n\ty = input()\n\tprint(''.join(('B' if a == 'W' else 'W' for a in x)))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\ta = input()\n\tb = input()\n\tprint(''.join(('B' if i == j else 'W' for (i, j) in zip(a, b))))\n \n \n\n ",
            "for _ in range(int(input())):\n\tx = input()\n\ty = input()\n\tprint(''.join(('B' if a == 'W' else 'W' for a in x)))\n \n \ninput = __builtin_next__\n \n \nfor _ in range(int(input())):\n\tx = input()\n\ty = input()\n\tprint(''.join((['B', 'W'][x[i] == y[i]] for i in range(len(x)))))\n \n \ndef solve():\n\tn = int(input())\n\tx = input()\n\ty = input()\n\tprint(''.join(('W' if x[i] == y[i] else 'B' for i in range(n))))\nfor _ in range(int(input())):\n\tsolve()\n \nfor _ in range(int(input())):\n\tinput()\n\tprint(input().translate(str.maketrans('WB', 'BW')))\n \nfor _ in range(int(input())):\n\tprint(input().translate(str.maketrans('WB', 'BW')))\n \nfor _ in range(int(input())):\n\tprint(input().translate(str.maketrans('WB', 'BW')))\n \nfor _ in range(int(input())):\n\tprint(input().translate(str.maketrans('WB', 'BW')))\n \nfor _ in range(int(input())):\n\tprint(input().translate(str.maketrans('WB', 'BW')))\n \nfor _ in range(int(input())):\n\tprint(input().translate(str.maketrans('WB', 'BW')))\n \nfor _ in range(int(input())):\n\tprint(input().translate(str.maketrans('WB', 'BW')))\n \nfor _ in range(int(input())):\n\tprint(input().translate(str.maketrans('WB', 'BW')))\n \nfor _ in range(int(input())):\n\tprint(input().translate(str.maketrans('WB', 'BW')))\n \nfor _ in range(int(input())):\n\tprint(input().translate(str.maketrans('WB', 'BW')))\n \nfor _ in range(int(input())):\n\tprint(input().translate(str.maketrans('WB', 'BW')))\n \nfor _ in range(int(input())):\n\tprint(input().translate(str.maketrans('WB', 'BW')))\n \nfor _ in range(int(input())):\n\tprint(input().translate(str.maketrans('WB', 'BW')))\n \nfor _ in range(int(input())):\n\tprint(input().translate(str.maketrans('WB', 'BW')))\n \nfor _ in range(int(input())):\n\tprint(input().translate(str.maketrans('WB', 'BW')))\n \nfor _ in range(int(input())):\n\tprint(input().translate(str.maketrans('WB', 'BW')))\n \nfor _ in range(int(input())):\n\tprint(input().translate(str.m",
            "for _ in range(int(input())):\n\tx = input()\n\ty = input()\n\tprint(''.join((['B' if i == 'W' else 'W' for i in x])))\n \n \n ",
            "for _ in range(int(input())):\n\tx = input()\n\ty = input()\n\tz = ''\n\tfor i in range(len(x)):\n\t\tif x[i] == y[i]:\n\t\t\tz += 'B' if x[i] == 'W' else 'W'\n\t\telse:\n\t\t\tz += x[i]\n\tprint(z)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\tx = input()\n\ty = input()\n\tprint(''.join(['B' if i == j else 'W' for (i, j) in zip(x, y)]))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\tx = input()\n\ty = input()\n\tprint(''.join(('B' if x[i] == 'W' and y[i] == 'B' else 'W' for i in range(len(x)))))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\tx = input()\n\ty = input()\n\tn = len(x)\n\tans = ['B'] * n\n\tfor i in range(n):\n\t\tif x[i] == 'W' and y[i] == 'B':\n\t\t\tans[i] = 'W'\n\tprint(''.join(ans))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\tx = input()\n\ty = input()\n\tn = len(x)\n\ta = x.count('B')\n\tb = n - a\n\tprint('B' * a + 'W' * b)\n \n \nfor _ in range(int(input())):\n\tx = input()\n\ty = input()\n\tn = len(x)\n\ta = x.count('B')\n\tb = n - a\n\tprint('B' * a + 'W' * b)\n \n \nfor _ in range(int(input())):\n\tx = input()\n\ty = input()\n\tn = len(x)\n\ta = x.count('B')\n\tb = n - a\n\tprint('B' * a + 'W' * b)\n \n \nfor _ in range(int(input())):\n\tx = input()\n\ty = input()\n\tn = len(x)\n\ta = x.count('B')\n\tb = n - a\n\tprint('B' * a + 'W' * b)\n \n \nfor _ in range(int(input())):\n\tx = input()\n\ty = input()\n\tn = len(x)\n\ta = x.count('B')\n\tb = n - a\n\tprint('B' * a + 'W' * b)\n \n \nfor _ in range(int(input())):\n\tx = input()\n\ty = input()\n\tn = len(x)\n\ta = x.count('B')\n\tb = n - a\n\tprint('B' * a + 'W' * b)\n \n \nfor _ in range(int(input())):\n\tx = input()\n\ty = input()\n\tn = len(x)\n\ta = x.count('B')\n\tb = n - a\n\tprint('B' * a + 'W' * b)\n \n \nfor _ in range(int(input())):\n\tx = input()\n\ty = input()\n\tn = len(x)\n\ta = x.count('B')\n\tb = n - a\n\tprint('B' * a + 'W' * b)\n \n \nfor _ in range(int(input())):\n\tx = input()\n\ty = input()\n\tn = len(x)\n\ta = x.count('B')\n\tb = n - a\n\tprint('B' * a + 'W' * b)\n \n \nfor _ in range(int(input())):\n\tx = input()\n\ty = input()\n\tn = len(x)\n\ta = x.count('B')\n\tb = n - a\n\tprint('B' * a + 'W' * b)\n \n \nfor _ in range(int(input())):\n\tx = input()\n\ty = input()\n\tn = len(x)\n\ta = x.count('B')\n\tb = n - a\n\tprint('B' * a + 'W' * b)\n \n \nfor _ in range(int(input())):\n\tx = input()\n\ty = input()\n\tn = len(x)\n\ta = x.count('B')\n\tb = n - a\n\tprint('B' * a + 'W' * b)\n",
            "for _ in range(int(input())):\n\tx = input()\n\ty = input()\n\tprint(''.join(('B' if x[i] == 'W' else 'W' for i in range(len(x)))))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\tx = input()\n\ty = input()\n\tprint(''.join('B' if a == 'W' and b == 'B' else 'W' for (a, b) in zip(x, y)))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\tx = input()\n\ty = input()\n\tz = ''\n\tfor i in range(len(x)):\n\t\tif x[i] == 'B' and y[i] == 'B':\n\t\t\tz += 'B'\n\t\telif x[i] == 'W' and y[i] == 'W':\n\t\t\tz += 'W'\n\t\telse:\n\t\t\tz += 'B'\n\tprint(z)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\tx = input()\n\ty = input()\n\tz = ''\n\tfor (a, b) in zip(x, y):\n\t\tif a == b:\n\t\t\tz += 'W'\n\t\telse:\n\t\t\tz += 'B'\n\tprint(z)\n \n \n\n ",
            "for _ in range(int(input())):\n\tx = input()\n\ty = input()\n\ta = [i for i in x if i == 'W']\n\tb = [i for i in y if i == 'B']\n\tans = ''\n\tfor i in range(len(x)):\n\t\tif x[i] == 'W' and y[i] == 'B':\n\t\t\tif len(a) > len(b):\n\t\t\t\tans += 'W'\n\t\t\t\ta.pop()\n\t\t\telse:\n\t\t\t\tans += 'B'\n\t\t\t\tb.pop()\n\t\telse:\n\t\t\tans += x[i]\n\tprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n"
        ]
    },
    {
        "task_id": 39,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: Mahmoud wants to send a message to his friend Ehab. Their language consists of n words numbered from 1 to n. Some words have the same meaning so there are k groups of words such that all the words in some group have the same meaning.\n\nMahmoud knows that the i-th word can be sent with cost a_{i}. For each word in his message, Mahmoud can either replace it with another word of the same meaning or leave it as it is. Can you help Mahmoud determine the minimum cost of sending the message?\n\nThe cost of sending the message is the sum of the costs of sending every word in it.\n\n\n-----Input-----\n\nThe first line of input contains integers n, k and m (1 \u2264 k \u2264 n \u2264 10^5, 1 \u2264 m \u2264 10^5)\u00a0\u2014 the number of words in their language, the number of groups of words, and the number of words in Mahmoud's message respectively.\n\nThe second line contains n strings consisting of lowercase English letters of length not exceeding 20 which represent the words. It's guaranteed that the words are distinct.\n\nThe third line contains n integers a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 10^9) where a_{i} is the cost of sending the i-th word.\n\nThe next k lines describe the groups of words of same meaning. The next k lines each start with an integer x (1 \u2264 x \u2264 n) which means that there are x words in this group, followed by x integers which represent the indices of words in this group. It's guaranteed that each word appears in exactly one group.\n\nThe next line contains m space-separated words which represent Mahmoud's message. Each of these words appears in the list of language's words.\n\n\n-----Output-----\n\nThe only line should contain the minimum cost to send the message after replacing some words (maybe none) with some words of the same meaning.\n\n\n-----Examples-----\nInput\n5 4 4\ni loser am the second\n100 1 1 5 10\n1 1\n1 3\n2 2 5\n1 4\ni am the second\n\nOutput\n107\nInput\n5 4 4\ni loser am the second\n100 20 1 5 10\n1 1\n1 3\n2 2 5\n1 4\ni am the second\n\nOutput\n116\n\n\n-----Note-----\n\nIn the first sample, Mahmoud should replace the word \"second\" with the word \"loser\" because it has less cost so the cost will be 100+1+5+1=107.\n\nIn the second sample, Mahmoud shouldn't do any replacement so the cost will be 100+1+5+10=116. \n\n### Response:\n",
        "output": [
            "(n, k, m) = map(int, input().split())\nw = input().split()\na = list(map(int, input().split()))\ng = []\nfor i in range(k):\n\t(l, *s) = map(int, input().split())\n\tg.append(s)\nd = {}\nfor (i, s) in enumerate(w):\n\td[s] = i\nm = input().split()\nans = 0\nfor s in m:\n\ti = d[s]\n\tans += min((a[i] for i in g[i]))\nprint(ans)\n \n\ndef main():\n\tpass\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef main():\n\tpass\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef main():\n\tpass\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef main():\n\tpass\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef main():\n\tpass\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef main():\n\tpass\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef main():\n\tpass\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef main():\n\tpass\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef main():\n\tpass\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef main():\n\tpass\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef main():\n\tpass\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef main():\n\tpass\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef main():\n\tpass\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef main():\n\tpass\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef main():\n\tpass\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef main():\n\tpass\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef main():\n\tpass\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef main():\n\tpass\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef main():\n\tpass\n \n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef main():\n\tpass",
            "(n, k, m) = map(int, input().split())\nwords = input().split()\na = list(map(int, input().split()))\ngroup = [set() for i in range(k)]\nfor i in range(k):\n\tgroup[i] = group[i].union(set(map(int, input().split()[1:])))\nmessage = input().split()\nans = 0\nfor word in message:\n\tj = words.index(word)\n\tans += min((a[i - 1] for i in group[j]))\nprint(ans)\n \n\n\n\n \n\n\n\n \n\n\n\n \n\n\n\n \n\n\n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "(n, k, m) = map(int, input().split())\nwords = input().split()\na = list(map(int, input().split()))\ngroups = []\nfor i in range(k):\n\tinput()\n\tgroups.append(set(map(int, input().split())))\nmsg = input().split()\nans = 0\nfor i in range(m):\n\tw = msg[i]\n\tg = None\n\tfor (j, group) in enumerate(groups):\n\t\tif w in group:\n\t\t\tg = j\n\t\t\tbreak\n\tif g == None:\n\t\tans += a[words.index(w)]\n\telif len(groups[g]) > 1:\n\t\tans += min(a[i] for i in groups[g])\nprint(ans)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "import sys\ninput = sys.stdin.readline\n(n, k, m) = map(int, input().split())\na = list(map(int, input().split()))\nc = [0] * n\nfor i in range(k):\n\tinput()\n\tx = list(map(int, input().split()))\n\tfor j in x:\n\t\tc[j - 1] = i\ns = list(map(int, input().split()))\nt = [c[i - 1] for i in s]\nans = 0\nfor i in range(n):\n\tif c[i] != i:\n\t\tans += min(a[i], a[c[i]])\nprint(ans)\n \n \ndef main():\n\t(n, k, m) = list(map(int, input().split()))\n\tcosts = list(map(int, input().split()))\n\tgroups = [0] * k\n\tfor i in range(k):\n\t\tinput()\n\t\tgroups[i] = set(map(int, input().split()))\n\tmessage = set(map(int, input().split()))\n\tgroup_to_min_cost = [min(costs[i] for i in group) for group in groups]\n\tans = sum(costs)\n\tfor word in message:\n\t\tans -= group_to_min_cost[word - 1]\n\tans += min(group_to_min_cost)\n\tprint(ans)\nmain()\n \n \ndef __starting_point():\n\tmain()\n__starting_point()\n \n \ndef main():\n\t(n, k, m) = list(map(int, input().split()))\n\tcosts = list(map(int, input().split()))\n\tgroups = [0] * k\n\tfor i in range(k):\n\t\tinput()\n\t\tgroups[i] = set(map(int, input().split()))\n\tmessage = set(map(int, input().split()))\n\tgroup_to_min_cost = [min(costs[i] for i in group) for group in groups]\n\tans = sum(costs)\n\tfor word in message:\n\t\tans -= group_to_min_cost[word - 1]\n\tans += min(group_to_min_cost)\n\tprint(ans)\nmain()\n \n \ndef __starting_point():\n\tmain()\n__starting_point()\n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "(n, k, m) = map(int, input().split())\nl = [[]]\nfor i in range(n):\n\tl[0].append(i)\nfor i in range(k):\n\tl.append(list(map(int, input().split())))\n\tl[i] = l[i][1:]\nl = l[1:]\na = list(map(int, input().split()))\nb = []\nfor i in input().split():\n\tb.append(l[0].index(i))\nans = 0\nfor i in b:\n\tans += min(a[j] for j in l[i])\nprint(ans)\n ",
            "(n, k, m) = map(int, input().split())\na = list(map(int, input().split()))\nd = {}\nfor i in range(1, k + 1):\n\tl = list(map(int, input().split()))\n\tfor j in l[1:]:\n\t\td[j] = l[0]\ns = input().split()\nans = 0\nfor i in s:\n\tans += a[d[a.index(i)] - 1]\nprint(ans)\n \n \ninput = __builtin_eval\n \nexec(compile(__import__('sys').stdin.read(), None, 'exec'))\n \ninput = __builtin_eval\n \nexec(compile(__import__('sys').stdin.read(), None, 'exec'))\n \ninput = __builtin_eval\n \nexec(compile(__import__('sys').stdin.read(), None, 'exec'))\n \ninput = __builtin_eval\n \nexec(compile(__import__('sys').stdin.read(), None, 'exec'))\n \ninput = __builtin_eval\n \nexec(compile(__import__('sys').stdin.read(), None, 'exec'))\n \ninput = __builtin_eval\n \nexec(compile(__import__('sys').stdin.read(), None, 'exec'))\n \ninput = __builtin_eval\n \nexec(compile(__import__('sys').stdin.read(), None, 'exec'))\n \ninput = __builtin_eval\n \nexec(compile(__import__('sys').stdin.read(), None, 'exec'))\n \ninput = __builtin_eval\n \nexec(compile(__import__('sys').stdin.read(), None, 'exec'))\n \ninput = __builtin_eval\n \nexec(compile(__import__('sys').stdin.read(), None, 'exec'))\n \ninput = __builtin_eval\n \nexec(compile(__import__('sys').stdin.read(), None, 'exec'))\n \ninput = __builtin_eval\n \nexec(compile(__import__('sys').stdin.read(), None, 'exec'))\n \ninput = __builtin_eval\n \nexec(compile(__import__('sys').stdin.read(), None, 'exec'))\n \ninput = __builtin_eval\n \nexec(compile(__import__('sys').stdin.read(), None, 'exec'))\n \ninput = __builtin_eval\n \nexec(compile(__import__('sys').stdin.read(), None, 'exec'))\n \ninput = __builtin_eval\n \nexec(compile(__import__('sys').stdin.read(), None, 'exec'))\n \ninput = __builtin_eval\n \nexec(compile(__import__('sys').stdin.read(), None, 'exec'))\n \ninput = __builtin_eval\n \nexec(compile(__import__('sys').stdin.read(), None, 'exec'))\n \ninput = __builtin_eval\n \nexec(compile(__import__('sys').stdin.read(), None, 'exec'))\n \ninput = __builtin_eval\n \nexec(compile(__import__('sys').stdin.read(), None, 'exec'))\n \ninput = __builtin_eval\n \nexec(compile(__import__('sys').stdin.read(), None, 'exec'))\n \ninput = __",
            "(n, k, m) = map(int, input().split())\nwords = [''] + input().split()\na = [0] + list(map(int, input().split()))\nb = [0] * (n + 1)\nfor i in range(k):\n\tinput()\n\tarr = list(map(int, input().split()))\n\tfor j in arr:\n\t\tb[j] = len(arr)\nfor i in range(1, n + 1):\n\tb[i] = b[b[i]]\nfor i in range(m):\n\tb[i + 1] = b[i]\nprint(sum((a[b[i]] for i in range(1, m + 1))))\n ",
            "(n, k, m) = map(int, input().split())\nw = input().split()\na = list(map(int, input().split()))\ng = [[] for i in range(k)]\nfor i in range(k):\n\tl = list(map(int, input().split()))\n\tl.pop(0)\n\tfor j in l:\n\t\tg[i].append(w[j - 1])\ns = input().split()\nans = 0\nfor i in range(m):\n\tans += min([a[w.index(s[i])] for w in g])\nprint(ans)\n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "(n, k, m) = map(int, input().split())\nwords = input().split()\na = [0] + list(map(int, input().split()))\ngroups = [[] for i in range(n)]\nfor i in range(k):\n\t(x, *group) = map(int, input().split())\n\tfor word in group:\n\t\tgroups[word - 1].append(i)\nmessage = input().split()\nanswer = 0\nfor word in message:\n\tindex = words.index(word)\n\tgroup = groups[index]\n\tmin_cost = a[index + 1]\n\tfor i in group:\n\t\tmin_cost = min(min_cost, a[index + 1] + a[i + 1])\n\tanswer += min_cost\nprint(answer)\n ",
            "R = lambda : map(int, input().split())\n(n, k, m) = R()\n(a, w) = (list(R()), [])\ng = [set() for _ in range(k)]\nfor i in range(k):\n\t(l, *g[i]) = R()\n\tg[i] = set(g[i])\nw = input().split()\n(r, c) = (set(w), 0)\nfor i in range(k):\n\tif not g[i] & r:\n\t\tg[i] = set()\n(s, d) = (set(), set())\nfor i in range(n):\n\tif not g[i]:\n\t\td.add(i)\nwhile d:\n\tx = d.pop()\n\ts.add(x)\n\td |= g[x]\nfor i in range(n):\n\tif i not in s:\n\t\tc += a[i]\nprint(c)\n ",
            "import sys\ninput = sys.stdin.readline\n(n, k, m) = map(int, input().split())\ns = input().split()\na = list(map(int, input().split()))\ng = [[] for i in range(k)]\nfor i in range(k):\n\t(x, *l) = map(int, input().split())\n\tfor j in l:\n\t\tg[i].append(j - 1)\nfor i in range(m):\n\ts[i] = s.index(input())\n(res, i, j) = (0, 0, 0)\nwhile i < m and j < n:\n\tif s[i] in g[j]:\n\t\tres += a[j]\n\t\tj += 1\n\ti += 1\nprint(res)\n ",
            "(n, k, m) = map(int, input().split())\nwords = input().split()\na = [*map(int, input().split())]\ngroup = []\nfor i in range(k):\n\tgroup.append(input().split()[1:])\n\tgroup[-1] = [int(x) - 1 for x in group[-1]]\nmessage = input().split()\nans = 0\nfor word in message:\n\tmin_a = min((a[x] for x in group[words.index(word)]))\n\tans += min_a\nprint(ans)\n ",
            "import sys\nfrom collections import defaultdict\n(n, k, m) = map(int, sys.stdin.readline().split())\nw = sys.stdin.readline().split()\na = list(map(int, sys.stdin.readline().split()))\ng = defaultdict(list)\nfor i in range(k):\n\t(x, *l) = map(int, sys.stdin.readline().split())\n\tfor j in l:\n\t\tg[w[j - 1]].append(a[j - 1])\nfor i in range(m):\n\tg[sys.stdin.readline().strip()].append(0)\nprint(sum((min(g[i]) for i in g)))\n \n\ndef main():\n\tpass\n\n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef solve():\n\tpass\n\n\ndef __starting_point__():\n\tsolve()\n\n\n__starting_point__()\n \n\ndef main():\n\tpass\n\n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef solve():\n\tpass\n\n\ndef __starting_point__():\n\tsolve()\n\n\n__starting_point__()\n \n\ndef main():\n\tpass\n\n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef solve():\n\tpass\n\n\ndef __starting_point__():\n\tsolve()\n\n\n__starting_point__()\n \n\ndef main():\n\tpass\n\n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef solve():\n\tpass\n\n\ndef __starting_point__():\n\tsolve()\n\n\n__starting_point__()\n \n\ndef main():\n\tpass\n\n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef solve():\n\tpass\n\n\ndef __starting_point__():\n\tsolve()\n\n\n__starting_point__()\n \n\ndef main():\n\tpass\n\n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef solve():\n\tpass\n\n\ndef __starting_point__():\n\tsolve()\n\n\n__starting_point__()\n \n\ndef main():\n\tpass\n\n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef solve():\n\tpass\n\n\ndef __starting_point__():\n\tsolve()\n\n\n__starting_point__()\n \n\ndef main():\n\tpass\n\n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef solve():\n\tpass\n\n\ndef __starting_point__():\n\tsolve()\n\n\n__starting_point__()\n \n\ndef main():\n\tpass\n\n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n \n\ndef solve():\n\tpass\n\n\ndef __starting_point__():\n\tsolve()\n\n\n__starting_point__()\n \n\ndef main():",
            "(n, k, m) = map(int, input().split())\nl = input().split()\na = list(map(int, input().split()))\ng = [[] for _ in range(k)]\nfor i in range(k):\n\t(x, *w) = map(int, input().split())\n\tfor j in w:\n\t\tg[i].append(l[j - 1])\nm = input().split()\ns = 0\nfor i in m:\n\ta[l.index(i)] = 10 ** 9\nprint(sum(a) - min(a))\n ",
            "(n, k, m) = map(int, input().split())\nw = input().split()\na = list(map(int, input().split()))\ng = [set() for _ in range(k)]\nfor i in range(k):\n\t(x, *g[i]) = map(int, input().split())\n\tg[i] = set(g[i])\nm = input().split()\nans = 0\nfor i in range(m):\n\tfor j in range(k):\n\t\tif i in g[j]:\n\t\t\tans += min(a[j - 1], a[i - 1])\nprint(ans)\n ",
            "(n, k, m) = map(int, input().split())\nwords = input().split()\na = list(map(int, input().split()))\ng = []\nfor i in range(k):\n\t(x, *g) = map(int, input().split())\n\tg = set(g)\n\tg = [min(a[i - 1] for i in g)]\n\tg.sort()\n\tg = [g[0]]\nprint(sum(a) - sum(g))\nmsg = input().split()\nfor w in msg:\n\tprint(a[words.index(w)], end=' ')\n ",
            "(n, k, m) = map(int, input().split())\na = list(map(int, input().split()))\ng = []\nfor i in range(k):\n\tl = list(map(int, input().split()))\n\tg.append(l[1:])\nm = input().split()\nfor i in range(n):\n\tg[i - 1].append(i)\nans = 0\nfor i in range(m):\n\tif i == m - 1:\n\t\tans += a[g[ord(i[0]) - 97][0] - 1]\n\telse:\n\t\tans += min(a[g[ord(i[0]) - 97][0] - 1], a[g[ord(i[1]) - 97][0] - 1])\nprint(ans)\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n ",
            "(n, k, m) = map(int, input().split())\nwords = [''] + input().split()\na = [0] + list(map(int, input().split()))\ngroups = [set() for _ in range(k)]\nfor i in range(k):\n\tl = list(map(int, input().split()))\n\tfor j in l[1:]:\n\t\tgroups[i].add(words[j])\nmessage = input().split()\nans = 0\nfor word in message:\n\ti = words.index(word)\n\tans += a[i]\n\tgroups[i - 1] = set()\nfor group in groups:\n\tif group:\n\t\tans -= min(a[words.index(word)] for word in group)\nprint(ans)\n \n \ninput = __builtin_eval\n \ndef __builtin_eval(x):\n\tpass\n \n__builtin_eval('print(input().split())')\n \n__builtin_eval('print(int(input()))')\n \n__builtin_eval('print(map(int, input().split()))')\n \n__builtin_eval('print(input())')\n \n__builtin_eval('print(input().split())')\n \n__builtin_eval('print(input().split())')\n \n__builtin_eval('print(int(input()))')\n \n__builtin_eval('print(map(int, input().split()))')\n \n__builtin_eval('print(input())')\n \n__builtin_eval('print(input().split())')\n \n__builtin_eval('print(input().split())')\n \n__builtin_eval('print(int(input()))')\n \n__builtin_eval('print(map(int, input().split()))')\n \n__builtin_eval('print(input())')\n \n__builtin_eval('print(input().split())')\n \n__builtin_eval('print(input().split())')\n \n__builtin_eval('print(int(input()))')\n \n__builtin_eval('print(map(int, input().split()))')\n \n__builtin_eval('print(input())')\n \n__builtin_eval('print(input().split())')\n \n__builtin_eval('print(input().split())')\n \n__builtin_eval('print(int(input()))')\n \n__builtin_eval('print(map(int, input().split()))')\n \n__builtin_eval('print(input())')\n \n__builtin_eval('print(input().split())')\n \n__builtin_eval('print(input().split())')\n \n__builtin_eval('print(int(input()))')\n \n__builtin_eval('print(map(int, input().split()))')\n \n__builtin_eval('print(input())')\n \n__builtin_eval('print(input().split())')\n \n__builtin_eval('print(input().split())')\n \n__builtin_eval('print(int(input()))')\n \n__builtin_eval('print(map(int, input().split()))')\n \n__builtin_eval('print(input())')\n \n__builtin_eval('print(input().split())')\n \n__builtin_eval('print(input().split())')",
            "(n, k, m) = map(int, input().split())\nl = input().split()\na = list(map(int, input().split()))\ng = []\nfor i in range(k):\n\tg.append(list(map(int, input().split()))[1:])\ns = input().split()\nd = dict()\nfor (i, x) in enumerate(l):\n\td[x] = i\nfor i in g:\n\tfor j in i:\n\t\ta[j - 1] = min(a[j - 1], a[i[0] - 1])\nfor i in s:\n\ta[d[i]] = min(a[d[i]], a[g[l.index(i)][0] - 1])\nprint(sum(a))\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n",
            "(n, k, m) = map(int, input().split())\nw = input().split()\na = list(map(int, input().split()))\nd = {}\nfor i in range(k):\n\t(x, *g) = map(int, input().split())\n\tfor j in g:\n\t\td[j - 1] = w[x - 1]\np = list(map(lambda x: a[d.get(w.index(x), w.index(x))] if x in d else a[w.index(x)], input().split()))\nprint(sum(p))\n \n"
        ]
    },
    {
        "task_id": 40,
        "prompt": "You are an AI programming assistant, utilizing the DeepSeek Coder model, developed by DeepSeek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer. \n\n### Instruction: Write a Python program that solves the following question. Your program should use a greedy algorithm. \nQuestion: Vlad came home and found out that someone had reconfigured the old thermostat to the temperature of $a$.\n\nThe thermostat can only be set to a temperature from $l$ to $r$ inclusive, the temperature cannot change by less than $x$. Formally, in one operation you can reconfigure the thermostat from temperature $a$ to temperature $b$ if $|a - b| \\ge x$ and $l \\le b \\le r$.\n\nYou are given $l$, $r$, $x$, $a$ and $b$. Find the minimum number of operations required to get temperature $b$ from temperature $a$, or say that it is impossible.\n\n\n-----Input-----\n\nThe first line of input data contains the single integer $t$ ($1 \\le t \\le 10^4$) \u2014 the number of test cases in the test.\n\nThe descriptions of the test cases follow.\n\nThe first line of each case contains three integers $l$, $r$ and $x$ ($-10^9 \\le l \\le r \\le 10^9$, $1 \\le x \\le 10^9$) \u2014 range of temperature and minimum temperature change.\n\nThe second line of each case contains two integers $a$ and $b$ ($l \\le a, b \\le r$) \u2014 the initial and final temperatures.\n\n\n-----Output-----\n\nOutput $t$ numbers, each of which is the answer to the corresponding test case. If it is impossible to achieve the temperature $b$, output -1, otherwise output the minimum number of operations.\n\n\n-----Examples-----\n\nInput\n10\n3 5 6\n3 3\n0 15 5\n4 5\n0 10 5\n3 7\n3 5 6\n3 4\n-10 10 11\n-5 6\n-3 3 4\n1 0\n-5 10 8\n9 2\n1 5 1\n2 5\n-1 4 3\n0 2\n-6 3 6\n-1 -4\nOutput\n0\n2\n3\n-1\n1\n-1\n3\n1\n3\n-1\n\n\n-----Note-----\n\nIn the first example, the thermostat is already set up correctly.\n\nIn the second example, you can achieve the desired temperature as follows: $4 \\rightarrow 10 \\rightarrow 5$.\n\nIn the third example, you can achieve the desired temperature as follows: $3 \\rightarrow 8 \\rightarrow 2 \\rightarrow 7$.\n\nIn the fourth test, it is impossible to make any operation. \n\n### Response:\n",
        "output": [
            "for s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint((b - a) // x if l <= a + x * (b - a) // x <= r else -1)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint((b - a + x - 1) // x if l <= a <= r and l <= b <= r and (a - b) % x == 0 else -1)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint((r - l) // x + 1 if l <= a <= r and (b - a) % x == 0 else -1)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint(((b - a) // x, -1)[a + x > b and (b - a) % x != 0])\n \n \nfor s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint(((b - a) // x, -1)[a + x > b and (b - a) % x != 0])\n \n \nfor s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint(((b - a) // x, -1)[a + x > b and (b - a) % x != 0])\n \n \nfor s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint(((b - a) // x, -1)[a + x > b and (b - a) % x != 0])\n \n \nfor s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint(((b - a) // x, -1)[a + x > b and (b - a) % x != 0])\n \n \nfor s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint(((b - a) // x, -1)[a + x > b and (b - a) % x != 0])\n \n \nfor s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint(((b - a) // x, -1)[a + x > b and (b - a) % x != 0])\n \n \nfor s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint(((b - a) // x, -1)[a + x > b and (b - a) % x != 0])\n \n \nfor s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint(((b - a) // x, -1)[a + x > b and (b - a) % x != 0])\n \n \nfor s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint(((b - a) // x, -1)[a + x > b and (b - a) % x != 0])\n \n \nfor s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint(((b - a) // x, -1)[a + x > b and (b - a) % x != 0])\n \n \nfor s in [*open(0",
            "for _ in range(int(input())):\n\t(l, r, x) = map(int, input().split())\n\t(a, b) = map(int, input().split())\n\tprint((r - l) // x + 1 if a != b and abs(a - b) >= x else -1)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint((d := b - a) // x + (d % x > 0))\n \n \nfor s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint((d := b - a) // x + (d % x > 0))\n \n \nfor s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(intruction = (b - a) // x + (d % x > 0)\n \n \nfor s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint((d := b - a) // x + (d % x > 0))\n \n \nfor s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint((d := b - a) // x + (d % x > 0))\n \n \nfor s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint((d := b - a) // x + (d % x > 0))\n \n \nfor s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint((d := b - a) // x + (d % x > 0))\n \n \nfor s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint((d := b - a) // x + (d % x > 0))\n \n \nfor s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint((d := b - a) // x + (d % x > 0))\n \n \nfor s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint((d := b - a) // x + (d % x > 0))\n \n \nfor s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint((d := b - a) // x + (d % x > 0))\n \n \nfor s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint((d := b - a) // x + (d % x > 0))\n \n \nfor s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint((d := b - a) // x + (d % x > 0))\n \n \nfor s in [*open(0)][2::2]:\n\t(",
            "for _ in range(int(input())):\n\t(l, r, x, a, b) = map(int, input().split())\n\tif a < b:\n\t\tprint((b - a + x - 1) // x)\n\telse:\n\t\tprint((a - b + x - 1) // x)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for _ in range(int(input())):\n\t(l, r, x) = map(int, input().split())\n\t(a, b) = map(int, input().split())\n\tprint((abs(a - b) + x - 1) // x)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint(max(0, -l + a + x, r - b + x) // x)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint((abs(b - a) - 1) // x if l <= a <= r and l <= b <= r else -1)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\t(l, r, x) = map(int, input().split())\n\t(a, b) = map(int, input().split())\n\tif a == b:\n\t\tprint(0)\n\t\tcontinue\n\tif abs(a - b) < x:\n\t\tprint(-1)\n\t\tcontinue\n\tif a > b:\n\t\tprint((abs(a - b) - 1) // x)\n\telse:\n\t\tprint((abs(a - b) + x - 1) // x)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\t(a, b) = map(int, s.split())\n\tprint(a == b or (a - b) % (2 * x) > x and -1 or (a - b) // (2 * x))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\t(l, r, x, a, b) = map(int, input().split())\n\tprint(max(((b - a) // x, -1)))\n \n \nfor _ in range(int(input())):\n\t(l, r, x, a, b) = map(int, input().split())\n\tprint((b - a + x - 1) // x)\n \n \nfor _ in range(int(input())):\n\t(l, r, x, a, b) = map(int, input().split())\n\tprint(max(((b - a) // x, -1)))\n \n \nfor _ in range(int(input())):\n\t(l, r, x, a, b) = map(int, input().split())\n\tprint((b - a + x - 1) // x)\n \n \nfor _ in range(int(input())):\n\t(l, r, x, a, b) = map(intruction int(input().split()))\n\tprint(max(((b - a) // x, -1)))\n \n \nfor _ in range(int(input())):\n\t(l, r, x, a, b) = map(intruction int(input().split()))\n\tprint((b - a + x - 1) // x)\n \n \nfor _ in range(int(input())):\n\t(l, r, x, a, b) = map(intruction int(input().split()))\n\tprint(max(((b - a) // x, -1)))\n \n \nfor _ in range(int(input())):\n\t(l, r, x, a, b) = map(intruction int(input().split()))\n\tprint((b - a + x - 1) // x)\n \n \nfor _ in range(int(input())):\n\t(l, r, x, a, b) = map(intruction int(input().split()))\n\tprint(max(((b - a) // x, -1)))\n \n \nfor _ in range(int(input())):\n\t(l, r, x, a, b) = map(intruction int(input().split()))\n\tprint((b - a + x - 1) // x)\n \n \nfor _ in range(int(input())):\n\t(l, r, x, a, b) = map(intruction int(input().split()))\n\tprint(max(((b - a) // x, -1)))\n \n \nfor _ in range(int(input())):\n\t(l, r, x, a, b) = map(intruction int(input().split()))\n\tprint((b - a + x - 1) // x)\n \n \nfor _ in range(int(input())):\n\t(l, r, x, a, b) = map(intruction int(input().split()))\n\tprint(max(((b - a) // x, -1)))\n \n \nfor _ in range(int(input())):\n\t(l, r, x, a, b) = map(intruction int(input().split()))\n\tprint((b - a + x - 1) // x)\n \n \nfor _ in range(int(input())):\n\t(l, r, x, a, b) = map(intruction int(input().split()))\n\tprint(max(((b - a) //",
            "for s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint(((a - b) // x + ((a - b) % x > 0)) if l <= a <= r and l <= b <= r else -1)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint(max((r - l - x) // x + 1, (a - l) // x - (b - a) // x) if l <= a <= r else -1)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint(((b - a) % (2 * x) or 0) + (b - a) // x)\n \n \nfor s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint(((b - a) % (2 * x) or 0) + (b - a) // x)\n \n \nfor s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint(((b - a) % (2 * x) or 0) + (b - a) // x)\n \n \nfor s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint(((b - a) % (2 * x) or 0) + (b - a) // x)\n \n \nfor s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint(((b - a) % (2 * x) or 0) + (b - a) // x)\n \n \nfor s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint(((b - a) % (2 * x) or 0) + (b - a) // x)\n \n \nfor s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint(((b - a) % (2 * x) or 0) + (b - a) // x)\n \n \nfor s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint(((b - a) % (2 * x) or 0) + (b - a) // x)\n \n \nfor s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint(((b - a) % (2 * x) or 0) + (b - a) // x)\n \n \nfor s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint(((b - a) % (2 * x) or 0) + (b - a) // x)\n \n \nfor s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint(((b - a) % (2 * x) or 0) + (b - a) // x)\n \n \nfor s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint(((b - a) % (2 * x) or ",
            "for s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\ta = max(l, a)\n\tb = min(r, b)\n\tprint((b - a) // x + ((b - a) % x > 0))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ",
            "for s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint((b - a) // x + (b - a) % x > 0 and -1 or (a - b) // x + (a - b) % x)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for s in [*open(0)][2::2]:\n\t(l, r, x, a, b) = map(int, s.split())\n\tprint((b - a) // x if l <= a <= r and l <= b <= r and (b - a) % x == 0 else -1)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
            "for _ in range(int(input())):\n\t(l, r, x) = map(int, input().split())\n\t(a, b) = map(int, input().split())\n\tprint(((b - a) // x + (b - a) % x) if l <= a <= r and l <= b <= r and (a - b) % x == 0 else -1)\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n "
        ]
    }
]